<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>英语十六种时态</title>
      <link href="archives/260c71f0.html"/>
      <url>archives/260c71f0.html</url>
      
        <content type="html"><![CDATA[<h2 id="十六种时态"><a href="#十六种时态" class="headerlink" title="十六种时态"></a>十六种时态</h2><p><strong>教程参考</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">英语兔：https://www.bilibili.com/video/BV1Sv411y7d8/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NFC卡片</title>
      <link href="archives/a5501b63.html"/>
      <url>archives/a5501b63.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>1-有的人大学饮水机是M1卡，用字典跑开加密后，喝水从来没充值过钱。</p><p>2-后面还想尝试破解洗澡的热水卡，没想到是cpu卡，无法破解，然后尝试用一系列古老的物理方法如用强磁吸住switch等，结果都不可行~</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">原文链接：https://blog.csdn.net/qq_37806908/article/details/95463919<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>首先认识一下一卡通的类型，市面上常见的一卡通是IC卡的一种，IC卡即集成电路卡，也是广义上的智能卡，准备篇介绍一些智能卡的基础知识，帮助我们确定卡的类型和使用的设备，<strong>目前淘宝上提供了设备和全套软件，确定好方法就可以自动化破解，下面的内容比较详细，不用全部看完也能破解，但了解一下可以提高效率</strong>。</p></blockquote><h3 id="按照使用方式分类："><a href="#按照使用方式分类：" class="headerlink" title="按照使用方式分类："></a><strong>按照使用方式分类：</strong></h3><p>·接触式IC卡：符合ISO7816标准，卡片表面包含金属触点，读写需要IO线路接触，即需要插卡使用，如手机的SIM卡模块</p><p>·非接触式IC卡：符合ISO/IEC14443标准，由IC芯片、感应天线组成，封装在一个标准的PVC卡片内，芯片及天线无任何外露部分，通过RFID感应使用，校园卡及身份证都是这一类型。</p><p>·双界面卡IC：又称组合卡/双端口卡，是同时兼备接触和非接触两种界面通信的多功能卡，将非接触IC卡的方便性和接触IC卡的安全性融为一体，使之成为一卡多用的极佳载体，代表着未来IC卡的主要发展方向，银行卡就是这一类型。</p><p>需要注意的是我们平时见到的某些门禁卡虽然也是通过感应使用，但不一定是IC卡，现在有相当一部分便宜的门禁使用的是磁卡和ID卡，ID卡使用RFID射频技术，但其频率一般较低，一般为125KHz,如爱特梅尔的T5577卡，不可写入用户数据，其记录内容仅限卡号只可由芯片厂一次性写入，开发商只可读出卡号加以利用，所以只用于身份识别，不能用于消费，其成本相对非接触式IC卡较低，一般使用字典攻击的方式就能复制。</p><h3 id="区分ID卡和IC卡——读卡判断法"><a href="#区分ID卡和IC卡——读卡判断法" class="headerlink" title="区分ID卡和IC卡——读卡判断法"></a><strong>区分ID卡和IC卡——读卡判断法</strong></h3><p>读卡判断法是判断卡智能卡类型最准确的方法，这需要可识别多类型卡的设备支持，例如手机NFC或者pn532开发板、ACR122U读卡器以及Proxmark3。使用手机NFC是最为便捷的方法，在支持全功能NFC的手机上下载MIFARE Classic Tools，给予权限后将卡片贴在NFC感应区根据提示读取标签后查看标签信息。下面是两种不同容量的IC卡的显示，如果RF技术这栏显示ISO/IEC 14443，说明就是典型的13.56MHz的非接触式IC卡，这也是生活中使用最多的类型。</p><p>绝大多数的高校一卡通都属于M1卡这种类型，M1卡式恩智浦公司(现在已经被飞利浦收购)根据ISO14443-A非接触式智能卡标准设计的一种IC卡，是目前世界上使用量最大的非接触式IC卡，在2013年前它被广泛应用于一些国家和地区的交通系统，如香港的八达通、台湾的悠游卡、伦敦的牡蛎卡和荷兰的OV卡等。2007年12月K.Nohl和H.Plot利用显微镜观察M1卡逻辑电路并对其逆向工程，从而发现其加密算法的设计缺陷。而在2008年3月，荷兰内梅亨大学的三位工程师自制了读卡设备并利用其Crypto-1算法的缺陷成功复制了一张M1卡，所以现在M1卡一般用于对安全需求不是特别高的场景中，如校园和企业一卡通，社区门禁等。</p><p>可以看到上图中标签类型为MIFARE Classic的就是M1卡，左边的为S50型号，右边的为S70型号，对应的SAK分别为08和18，知道这些参数一般就可以确定攻击方案了。</p><p>如果有其他读卡设备的话也可以通过相应的输出结果判断卡的类型，但一般最好先用手机NFC判断好卡的类型，这些读卡器不一定适用于所有类型的卡。</p><h3 id="区分ID卡和IC卡——经验判断法"><a href="#区分ID卡和IC卡——经验判断法" class="headerlink" title="区分ID卡和IC卡——经验判断法"></a><strong>区分ID卡和IC卡——经验判断法</strong></h3><p>一般来说，判断电子标签是接触式卡还是非接触卡可以观察卡片表面是否包含触点，如果有一小块裸露在外的金属区域，则说明该卡是接触式卡或双界面卡；没有金属触点且可与读卡器感应识别的为非接触式卡。在没有读卡设备情况下我们可对非接触式薄卡使用强光穿透卡片观察，ID（身份识别）卡芯片周围一般为线径为3-8mm的粗圆线圈，IC卡通常是1-2mm宽的细圆线圈或方形线圈。我们也可通过电子标签的功能来区分这两种卡，ID卡的芯片只能读不能写，一般只用于身份识别，IC卡可反复擦写，既能身份识别也可用于小额支付，所以校园一卡通显然为IC卡。经验判断法不一定准确，但能帮助我们在有限的条件下判断电子标签类型，迅速确定攻击方法及所需设备。下图来自淘宝的IC卡商品介绍，结合卡的使用类型，一般可以判断出是IC卡还是ID卡。</p><p>银行卡和身份证虽然都可以感应使用，但其不是M1卡，M1卡是逻辑加密卡，使用私有加密算法Crypto-1，而银行卡和身份证是CPU卡，内置一个微型CPU，可以进行多种加解密运算，有些银行卡和身份证还使用了国密算法，相比Crypto-1更新，尚未爆出安全漏洞，目前很难破解，如图是银行卡的标签信息，可以看到其SAK为28，只要SAK为28的都为CPU卡，有些学校比较变态使用了CPU卡这种解决方案，看到是这种卡的可以放弃了，暂时还没有对应的破解。</p><h3 id="M1卡的特性和存储结构"><a href="#M1卡的特性和存储结构" class="headerlink" title="M1卡的特性和存储结构"></a><strong>M1卡的特性和存储结构</strong></h3><p>M1卡即NXP推出的MIFARE Classic卡，内部由一个卷绕天线和特定用途的集成电路模块组成，其中，模块由一个高速(106KB波特率)的RF接口。一个控制单元和一个EEPROM组成。读卡器向M1卡发出一组固定频率的电磁波，卡片内有一个LC串联谐振电路，其频率与读写器发射的频率相同，在电磁波的激励下，LC谐振电路产生共振，从而使谐振电容内有了电荷，在这个电容的另一端，接有一个单向导通的电子泵，将电容内的电荷送到模块存储电容内储存，当所积累的电荷达到2V以上时，此电容可作为电源向模块电路提供工作电压，将卡内数据发射出去或接收读写器的数据。</p><p>常见的M1卡多为S50型号的1k卡，EEPROM的存储容量为8k位，分成16个扇区，每个扇区为4块，每块16个字节，以块为存取单位；还有更大容量的S70型号4k卡，EEPROM容量为32k位，分为40个扇区，前32个扇区为小扇区，每个扇区为4块，每块16个字节，后8个扇区为大扇区，每个扇区有16块，每块16个字节。</p><p>第0扇区相比其他扇区稍有特殊，块0为绝对地址块，在卡片出厂时被锁死不可更改，前4个字节为整个RFID系统中唯一的UID号，第5个字节为BCC校验位，数值由UID的4个字节异或运算得出，第6字节为卡片的SAK值，第7到8字节时智能卡的ATQA值，剩余的部分时制造商出厂时设定好的信息，不会影响到卡的使用。块2和块3一般为空，不存放用户数据，<strong>在大部分RFID系统中读卡器需首先验证0扇区0块数据的正确性，如果验证失败将不会访问其他扇区。</strong></p><h3 id="选择合适的白卡和读卡器"><a href="#选择合适的白卡和读卡器" class="headerlink" title="选择合适的白卡和读卡器"></a><strong>选择合适的白卡和读卡器</strong></h3><p>确定好卡的类型后，现在要去购买对应的白卡和设备了，目前淘宝卖的比较多的有以下几种卡：</p><p><strong>ID白卡</strong>：一般为125KHz的低频卡，针对低频门禁系统，读取原卡有效的10位或18位识别码，将其复制后写入白卡中一般即可通过门禁验证。</p><p><strong>IC标准白卡：</strong>一般为M1卡，这类卡是严格按照M1卡标准制作，0扇区0块发卡时便锁死不可修改，其他扇区可自由操作，不推荐购买，如果你需要4Kb的读写容量那只能购买标准的S70卡，目前淘宝还没有S70型号的其他版本卡。</p><p><strong>UID卡：</strong>国人魔改的M1 S50卡，又名中国魔术卡，是最常见的IC复制卡，与标准白卡不同的是可以反复擦写0扇区。</p><p><strong>CUID卡：</strong>UID卡的升级版本，UID卡出现的比较早，会响应后门指令，可被使用后门指令检测是否为克隆卡的机器发现，而CUID卡不会响应，一般可绕过读卡器防火墙，推荐购买这种卡。</p><p><strong>FUID卡：</strong>CUID卡复制没有用的情况下的备选，只能改写0块1次，改写后就锁死该块，针对一些更高级的读卡器防火墙。</p><p><strong>UFUID卡：</strong>UID卡和FUID卡的结合版，可以手动控制0块锁死，0块锁死前为UID卡，锁死后就变成了FUID卡。我们一般使用CUID卡即可，不必购买更高成本的FUID和UFUID，除非你确信自己操作无误且CUID卡无法通过验证。</p><p>在购买设备之前先确定好需求，<strong>如果仅仅复制只用于门禁的M1卡，可以先不用购买设备，因为一般门禁的原理是验证0扇区的UID号，如果该UID在系统中存在，则验证通过，而有些发卡商为了便利让0扇区使用了默认密钥FFFFFFFFFFFF</strong>，所以可以先用手机NFC测试复制0扇区0块，这里可以使用前面读卡用的MCT，但推荐国产的MTools <a href="https://github.com/whywilson/mtools">https://github.com/whywilson/mtools</a></p><p>按照软件的帮助文档尝试读取原卡0扇区，如果成功了直接把UID号复制到CUID白卡通常就能通过门禁验证了，这款软件也可以OTG读卡器使用，手机没有NFC又没电脑的可以用它。</p><p>目前淘宝可以用来破解的读卡设备主要有3种：</p><p>**PN532:<strong>最廉价的方案，30多块钱就可以搞定，仅仅一块单薄的电路板，但可以满足常规的M1卡的读写操作，但是配套软件较差，配合mfoc和mfcuk软件使用，在Linux下bug比较少，目前也有国产的GUI软件，但功能能比较单一，可以用于破解M1卡中1K容量的S50卡，</strong>不能破解全加密卡（找不到使用默认密钥的扇区)**，适合搞定门禁，钥匙扣型的卡去小区物业办一般要20块，如果你想做很多张门禁卡的还是自己制作更划算，不用看这篇文章根据淘宝客服的教程来成功率都很高。</p><p><strong>ACR122U:<strong>读写的主芯片为PN532，相对PN532软件更加完善，使用稍微简单一些，厂家还提供了一款官方的M1卡破解软件，配合mfoc和mfcuk使用更加稳定，</strong>但同样不能用来破解全加密卡</strong>，对于加密了部分扇区的S70卡也较难破解，性价比一般，卖一百多块适合小白使用，能找到比较多的教程。</p><p>**Proxmark3:**我主要使用的设备，是Jonathan Westhues 在2007年就读硕士期间设计并开发的RFID读卡器，它是一款开源的RFID研究平台，设计图被公布在Proxmark3官方网站，在GitHub上可以找到配套的软件及WIKI，另有社区可获取对应的固件及技术支持，同时支持Linux、Windows、Mac OS多平台。最新版本的pm3整合了nested authentication攻击，darkside攻击，PRNG漏洞扫描，以及随机数采集和无卡嗅探功能，能够有效破解M1卡扇区密钥，可破解低频卡、S50和S70全加密卡和部分特殊卡，可以说相当强大，但是价格比较贵，目前淘宝山寨的pm3都要200多块。</p><p><strong>变色龙侦测卡：</strong>可以用来模拟M1卡，也可配合其他读卡器侦测获取扇区密钥来破解卡，主要针对全加密卡，但是价格也要100多块，所以一般购买pm3即可，pm3还有一款RDV2升级版本就是集成了变色龙侦测卡，嗅探的能力更强并且可以模拟卡，用于一些比较变态的M1卡系统。</p><p>购买好白卡和设备就可以直接开干了，想一下把一卡通数据复制进钥匙扣和手机岂不是又方便又有逼格【手动滑稽】，破解一卡通需要耐心，要反复试错，千万不要轻易放弃</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NFC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>企业运营框架</title>
      <link href="archives/af906461.html"/>
      <url>archives/af906461.html</url>
      
        <content type="html"><![CDATA[<h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2>]]></content>
      
      
      <categories>
          
          <category> 企业运营 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>修复Googletranslater</title>
      <link href="archives/8de09585.html"/>
      <url>archives/8de09585.html</url>
      
        <content type="html"><![CDATA[<p><strong>前言：</strong></p><p>我们在chorm浏览器中自带了Googletranslater这个插件，右键选择即可翻译英文网页，但是最近好像失效了，我科学上网都无效。</p><p>原因：科学上网都无效说明不是网络的问题，其实是国内通过DNS服务器污染了Google的正确的翻译服务的ip地址，网络虽然正常，但是我们用的dns解析服务器还是国内的，所以取不到正确的IP，所以无法访问。</p><p>解决：我们需要手动找到最新的ip地址，然后内置到我们电脑的host文件中，即用手动设置来代替DNS服务器。</p><p>缺点：谷歌的翻译服务的ip也经常改变，意味着我们要经常手动更改，而且最新的可用IP也很难找，太麻烦了。</p><p>最佳解决：通过下面项目一键设置最新host即可。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">https://github.com/Ponderfly/GoogleTranslateIpCheck<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：</p><p>此项目大概原理就是把所有的google翻译服务器ip写入了软件，然后如果都失效，就去此软件开发者的服务器找最新的可用ip；但是貌似软件开发者的服务器是不可用状态，这时我们只需要去当前github项目中手动下载最新的可用IP地址，然后替换掉此软件目录的ip.txt文件再重新运行软件即可。</p><p><strong>如何修改本地HOST</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">C:\Windows\System32\drivers\etc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一般在如上路径，用记事本方式打开即可。</p><p>然后再在cmd中执行如下指令刷新dns即可</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">ipconfig /flushdns<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>详细参考</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">https://blog.csdn.net/weixin_55846296/article/details/131451501<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>目前可用IP</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">108.177.97.10064.233.189.191216.239.32.40142.251.171.90172.217.218.90142.251.174.9074.125.196.113142.251.175.90108.177.126.90<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> mix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>claude人工智能不回复</title>
      <link href="archives/e72c68fb.html"/>
      <url>archives/e72c68fb.html</url>
      
        <content type="html"><![CDATA[<p>1-claude是和GPT3.5功能差不多的人工智能，目前不需要科学上网即可访问。</p><p>2-2023的11月，马斯克发布了团队开发的grok，网址为X.ai,我已提交内测申请。</p><h2 id="claude如何使用"><a href="#claude如何使用" class="headerlink" title="claude如何使用"></a>claude如何使用</h2><p>claude相当于是基于slack平台的一个插件功能，我们必须先注册登入slack，然后按照下面的操作方法添加claude即可</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">https://baijiahao.baidu.com/s?id=1763576345866079502&amp;wfr=spider&amp;for=pc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：上面的教程只添加了claude，但是实际上是不会回复的，claude是必须是频道会员才可以使用的，但是我们可以无限创建新的频道去白嫖30天的试用会员。（点击创建新频道-勾选专业版，这样就会出现试用界面）</p><p>其中每一个月我们都需要重新创建新频道，不然会员过期，claude就不回复了。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">频道相当于微信的一个群，并不是你的账号。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3-目前chatgpt也开放了4.0alltools的全部功能给免费用户内测，这个名额是随机的，很幸运我拿到了，大家快去登入openai的GPT官网看看自己有没有拿到内测名额吧哈哈，无限白嫖4.0，还可以使用所有的插件功能。</p>]]></content>
      
      
      <categories>
          
          <category> mix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>走向共和</title>
      <link href="archives/11e94ea8.html"/>
      <url>archives/11e94ea8.html</url>
      
        <content type="html"><![CDATA[<h2 id="走向共和"><a href="#走向共和" class="headerlink" title="走向共和"></a>走向共和</h2><p>1-纵观历史，以上帝视角看，总有些偏见，但如若以别人的视角每日自省自己，必会少犯很多错误。</p><p>就如投名状，在我看来庞青云站队讨好慈禧，交好陈大人，稳住狄大人，提防姜大人，四分利益即可，但每个人都有自己的局限性，其实也没有对错，可能一切早已注定。</p><p>2-政权更替，企业兴败都在有无信仰愿景。</p><p>3-没有信仰内驱力，再怎么管都没用终究是腐败无能。</p><p>4-翁同龢，张謇等都以为自己一心报国，但都用错了方法，有问题的不止是他们，更是整个体制，错误的体制让他们看不清世界。</p><p>5-孙中山想法是美好的，但是太过理想化，制黑需先以暗，潜移默化的看到黎明。</p><p>6-得道者多助，失道者寡助，要结合所有人的利益。</p><p>7-为什么大清立宪失败? 这并不是肯定不可行的，而是因为大清的掌权派是自私的，放不开权利，只为自己。</p><p>8-雍正王朝中带兵的都是王爷自己人，或者与将军联姻恩情等等，晚清的兵居然基本上只有北洋能用，全是袁世凯的人，又不待见袁世凯，如何能用袁世凯?</p><p>9-只有一个”诚”字可以聚拢人才，只有一个”公”字可以号召天下。</p><p>10-当思想境界没到，需要长时间的潜移默化，但短时间内无法改变当权者，你要求他们放弃利益，起码要给足”名”</p><p>12-孙中山没有兵权，就像没当上公司ceo,没有股份，路怎么做就由不得他了，大义要有，对抗黑暗的力量更要有。</p><p>13-小成功靠个人，大成功靠团队，做大事一定要结合团结群众，代表所有人的利益。</p><p>1-不要在大佬面前玩套路是什么就说什么，如袁世凯拜访李鸿章。</p><p>2-明白一些人物的琐事小事，李鸿章记得李莲英的脚气，带英国药来;给慈禧带鸟说万寿无疆。</p><p>3-李鸿章在户部没银子给颐和园，慈禧生气的时候，会结合心性让慈禧开心，如散步;<br>养鸟，事实上李鸿章不喜欢养鸟，而是太后喜欢养鸟。(让别人喜欢就体现共同爱好，表现出对方曾经现在和未来想成为的样子)</p><p>4-慈禧也比一般人强，没有一定的手段是掌控不了权利的，刚刚对户部和皇帝发了脾气，见李鸿章还是面带笑容。</p><p>5-因为一些偏见李鸿章和翁同龢还是不待见，翁同龢虽然不奸，但心胸狭窄，愚昧迂腐，不发展国家，反而玩弄权柄，沽名钓誉，勾心斗角。</p><p>6-身居庙堂，危乎高哉，谨言慎行，才是根本。</p><p>7-下面的人互相嫉妒制衡没有问题，关键是ceo慈禧没有大局意识，虽然有些能耐懂得权谋平衡之术，也看的懂底下人的心思 ，但是目光短浅，自私自利，不懂发展，也怪光绪太过懦弱没有能力魄力，加上康有为的神助攻，悔之晚矣。导致南北洋都无力运营，尽用翁同龢等宵小之辈。最后载字辈又根本不够格。</p><p>8-得道者多助，失道者寡助，康有为太狂。</p><p>9-李鸿章那么老练，底下人炮弹钱都敢贪。</p><p>10-黄瑞蘭太蠢了，明显整治北洋，还来在明面上打感情牌，直接认错说自己鬼迷心窍，宣誓洗心革面以后一心报效朝廷，感情牌暗示一下即可。</p><p>11-杀一个，赦一个，奖一个，激一个，先夸赞后批评。</p><p>12-康有为:要想改变一个制度，就必须先进入这个制度，里应外合。</p><p>13-不要得罪小人，李鸿章不让李莲英上军舰，以后少不了使绊子，大寿庆典李莲英特意安排让李鸿章跪在有划痕地板的地方。</p><p>14-给整个水师更新装备六十万没有，一个太监李莲英一笔贿赂就是十万。</p><p>15-翁同龢不要钱?名利名利为何不拆开呢?名利，名在利的前面。</p><p>16-一本书法集就拿下了翁同龢，还把一个奸商当知己，轻轻松松一批木材就批了六十万两。</p><p>17-中堂大人想见太后还需要送银子，三千两李莲英还看不上。</p><p>18-商人就得赚钱，不过有的人赚的多，有的人赚的少，有的人赚的提心吊胆，有的人赚的安生。</p><p>19-逮住了奸商李光昭，不动李莲英和大臣王爷，因为他们现在还动不得，只动翁同龢。</p><p>20-水至清则无鱼，人至察则无徒。</p><p>21-底下人误事，谈创立银行这种机密，居然让底下人进来听到了。相比之下司马懿面对柏夫人三国静姝这个贴身间谍，表现的滴水不漏。</p><p>22-大清国人人有病，愚昧之病，病根在体制政治之病。</p><p>23-日本:清朝赔款全部用于办教育</p><p>24-以夷制夷，师夷长技以制夷。</p><p>25-用人论才，取其大者，但愿景不同，人品不好断不可用。如袁世凯首鼠两端，能力越大，威胁越大。</p><p>26-康有为太狂不收李鸿章的捐款，不一定是他觉得李鸿章是汉奸，而是形式所趋，不到时机。</p><p>27-广州起义流产，很简单的道理，三合会的敢死队一群乌合之众，不可能去为你拼命。</p><p>28-三俊太忠厚了，被袁世凯玩死，用李鸿章的枪杀了李鸿章的人，自然意味着淮军已不存在，不再需要李鸿章的威信镇压，袁世凯成了荣禄的人。</p><p>29-袁世凯能记住每位新兵的名字。</p><p>30-历史的更替，人心的信仰，不是袁世凯这些洗脑式的练兵方法能改变的。</p><p>31-光绪喜欢个那么蠢的自作聪明的妃子，一个好看花瓶都不会当算不上，还尽捣乱，怪不得无力与守旧派抗衡。</p><p>32-维新变法的失败是因为顽固派和维新派实力不对等，而且太过急促，大众的思想愿景没有跟上，直接的动了顽固派的利益，人家不阻挡你才怪。</p><p>33-康有为与维新派太狂，太过激进，太急，被蒙眼，没有考虑其中利害，没有看到各大狐狸的心机，他们没有太多民族大义，只有个人利益。</p><p>34-做的好小事，才能成大事。</p><p>35-李莲英能到处收钱，就说明了清政府的腐败。</p><p>36-袁世凯自己就是个虚情假意拍马屁的王，手底下的士奇对他拍马屁，还不是班门弄斧，袁世凯自然讨厌。</p><p>37-拜佛烧香，你是神仙，香也得一柱一柱烧进去。清政府腐败，教育思想跟不上 </p><p>38-康有为和孙文的区别是，康有为自命清高挣第一，孙文是人人平等为百姓。</p><p>39-新旧势力，如守旧与维新，科举与新学，太后与皇上，原不必势不两立，而是相辅相成。</p><p>40-君主立宪也好，共和革命也罢，都比现在要好。</p><p>41-一单归一单，做事也罢，当官也罢，只要有关于人事，千万不要做一锤子买卖，要想着有下一次，不能过河拆桥，而要架桥铺路。</p><p>42-为什么硬推一个黎都督当革命军?明明是个废物?因为需要让清朝的官员知道，只要投诚就能活，还能当官。否则只会招致更多的反抗。</p><p>43-看出袁世凯是曹操又如何，为时已晚。</p><p>44-拔树不能用蛮力，否则就算拔起，树根也被折断，要前前后后左左右右的摇晃，等树根松动，风起云涌树当倒则倒。</p>]]></content>
      
      
      <categories>
          
          <category> 影视观后感 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>生活小常识</title>
      <link href="archives/5db348ad.html"/>
      <url>archives/5db348ad.html</url>
      
        <content type="html"><![CDATA[<h2 id="买菜做饭"><a href="#买菜做饭" class="headerlink" title="买菜做饭"></a>买菜做饭</h2><p>1 牛肉 -有弹性，不渗水，摸起来有油但不粘手，颜色鲜艳有光泽，无异味<br>2-基围虾买回来得滴水打氧，也可以放少许盐增加浓度，放在阴凉温度低的地方(葱姜蒜料酒是为了去腥)<br>3-生姜蒜发绿发芽能吃，土豆发芽不能吃<br>4-鱼肉上黑色的皮一定去掉，有腥味。<br>5-鱼尾红色的可能是寄生虫。<br>6-耗油番茄酱等开启后要放冰箱，不然会发霉。<br>7-盐结块是能吃的<br>8-活虾做好，身体是弯曲的，尾巴是打开的，死虾则尾巴紧紧闭合在一起。。<br>9-买葱吃多少买多少，否则过一天就全部焉了<br>10-冷藏不是万能的，买的肉放冰箱冷藏最多两天就不能吃了，想长久保存就要冰冻。<br>11-煎鱼，油放点盐不粘锅。<br>12-购买蛋类产品，可以先摇晃一下鸡蛋，如果感觉到里面的液体在随着<strong>摇晃移动</strong>或者<strong>蛋壳有斑点</strong>说明鸡蛋马上要变质了。</p><p>13-剥大蒜粒的时候，用刀背拍扁后，更容易去皮。</p><p>14炒蛋炒饭一定要放蔬菜，如胡萝卜丝，玉米粒等，可以增加口感，再者要放葱花增加香味，炒到有些许米粒在锅底弹跳即可放入葱花马上出锅。</p><p>15-<strong>炒菜最好热锅凉油</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">【热锅凉油,三种方法,铁锅粘锅绝对不是锅原因】https://mr.baidu.com/r/17Oao3CksSs?f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>为什么要热锅冷油，不凉锅凉油，不热锅热油呢？</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">我的理解：1-如果凉锅凉油就放菜放肉去炒，那么升温时间较长，肉会变得很老。2-如果热油去炒，那么温度过高，会流失大部分营养，还会粘锅。3-视频中用油润锅，也就是把油均匀的铺满锅内的每一个部分，有养锅的效果。所以其实就是掌握油半热半不热的时机去炒菜，让菜不被高油温炸的流失营养，又能迅速炒熟，但是时机timing可没那么容易掌控，这就需要上面视频厨师经验总结出来的标准方法即可以养锅，又可以去更好的掌握时机。3.1凉锅凉油加热到适合炒菜的温度，再炒菜呢?如果不热锅凉油，而是凉锅凉油去逐渐加热控温，这是很难的。所以原因就是一冷一热，多一点容错，既不破坏肉的营养，也不会因为炒的时间太长而肉老。当然这是炒肉，比如爆炒牛肉，如果你是煎炸东西，当然不可能也不需要热锅冷油。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>16-先爆香姜蒜一定要掌握好温度火候，不然很容易糊掉。</p><p>17-如果是有防粘锅涂层的锅，不能用铁铲，最好用塑胶铲，否则很容易刮花涂层。</p><p>18-用盆子清洗蔬菜的时候，最好多放一些水，水太少清洗的话，手会把蔬菜按压的皱皱巴巴。</p><p>19-如果蔬菜的根茎叶，很老的部分（手折不动），需要丢掉老的这部分，不然做出来也根本嚼不动。</p><p>20-空心菜等带茎蔬菜，最好切半再炒，不然整个去炒，既不方便炒也不方便吃。、</p><p>21-辣椒和葱一样很容易坏，最好当天吃多少就买多少，蒜和姜可以长久保存，买一周的一般没事。</p><p>22-炒蛋一般用鸭蛋，煮蛋和做鸡蛋羹一般用鸡蛋，鸭蛋大，鸡蛋小。（蛋类要放冰箱）</p><p>23-蔬菜有的要放冰箱，有的不需要。葱姜蒜不要放冰箱。</p><blockquote><p>不是所有的蔬菜都需要放冰箱。一些蔬菜如西红柿、黄瓜、辣椒等，由于其含水量较高,放在冰箱中容易变软、变味，因此不建议放在冰箱中保存。（但是辣椒如果不能及时吃完，还是放冰箱吧，不然会烂）而一些蔬菜如胡萝卜、芹菜、菜花等，由于其含水量较低，放在冰箱中可以延长其保鲜期。</p><p>此外，蔬菜的放置位置也需要注意。一些蔬菜如葱、姜、蒜等，应该放在阴凉干燥的地方保存，而不是放在冰箱中。因为这些蔬菜容易受潮发霉，放在冰箱中还容易影响其他食材的味道。</p><p>葱不是很容易焉吗？为什么不放冰箱，因为会受潮发霉，而且就算放冰箱一样会焉，所以还是每天吃多少买多少好。</p></blockquote><p>24-焯水是过血水和杂质，去除一定的异味和腥味。</p><p>25-鸡鸭鱼与我们吃的猪肉羊肉牛肉等，在宰杀的时候都要先放血，否则肉会很腥，口感也不好。</p><p>26-豆角扁豆类蔬菜必须煮熟，不然会食物中毒。它们的两端和中间的“线”毒素最多，所以在炒前也得摘去”两端“和”线“</p><p>27-平时蔬菜和水果都要养成清洗的习惯，干净是其次，主要是防止有<strong>农药残留</strong>。</p><p>28-爆米花就是干玉米粒，把玉米粒平铺放入锅中，倒入一点油（大概玉米粒的四分之一高度），然后盖上锅盖，开火，等到噼噼啪啪的声音，再过十五秒左右就能关火了。等锅内停止噼噼啪啪的声音，就可以开盖了。</p><p>29-油炸花生米，先放油，根据口味加入糖，干辣椒，八角等炒香，然后加入花生米，炒到花生米有炸裂的响声，过程中可以根据口味加入食盐，等炸裂声音没有后，再炒一分钟左右即可。</p><blockquote><p>花生米盛出后，应该用碟子平铺，不能丢到大碗立马堆积，那样会捂焦。</p></blockquote><h2 id="日常"><a href="#日常" class="headerlink" title="日常"></a>日常</h2><p>1-厨余垃圾每天要及时丢出去，否则生虫子和蚊子。<br>2-记录是过程，报告是结论，但是没有记录就没有报告。<br>3-三角插头接地如果插不进，不要正向直插，向上斜着插，上下一晃很容易进去。</p><p>4-长途坐火车（超过十个小时），千万别买硬座，最好晚上买个卧铺一觉到天亮，或者直接买高铁票。</p><p>因为硬座无论是白天还是晚上，都是在浪费时间，如果是晚上熬夜，还得伤身体；卧铺也就比硬座贵100元左右，如果你的一天时间成本和身体健康，价值远超100元。</p><blockquote><p>如果实在要坐硬座</p><p>tips：火车硬座是没有任何充电插口的，最好自己带好充电宝，或者去指定车厢借充电宝，或者寻求车厢乘务员的帮助，或者去卧铺走廊蹭插口（一般都是满人）。</p></blockquote><p>5-当我们乘坐公交车或者地铁，如公交车指定价格一般为2元，但是有的平台如支付宝乘车码或者当地某个官方乘车软件是有优惠的，比如降到1.4元/1.2元/0.8元，各有不同可以自行摸索。（如乘坐公交，支付宝的上海公共交通小程序里面的乘车码，一般总有优惠活动）</p><blockquote><p>不要刻意去找这些活动羊毛，没啥前途，但是知道了这个信息差，可省则省。</p><p>tips：千万别在上海打出租车，打表的出租车比滴滴那些三方平台还要贵将近一倍！！！</p></blockquote><p>6-和牛澳洲官方标准等级为M1-M9，日本标准则为A1-A5，但是我国目前禁止从日本进口牛肉，所以所有打着A5和牛的噱头，都是不正规的。</p><blockquote><p>A5一般比M9要好，一些厂家会单方面筛选出比M9纹理更好的牛肉作为M12，M12可以和A5相媲美。</p></blockquote><p>7-烧鸟其实就是烤串，只是说它来自日本，然后看起来精美有仪式感一点。</p><p>8-omakase同样来自日本，有“拜托’的意思，就是你点不了菜，厨师上什么，你就吃什么，不过一般做工精细食材质量也过关（一分钱一分货，但是溢价挺严重的）</p><p>9-一头鲍就是一只就有一斤500g的鲍鱼，十头鲍就是10只这种鲍鱼才一斤的鲍鱼。产地价格这些精细差别，我这种土包就不懂了。</p><p>10-牛排只有单数的，也就是1分，3分，5分，7分，和全熟，价位不高的店一般你叫他做7分，端上来都差不多全熟了，我一般点5分或7分熟。因为全熟啃不动，1，3接受不了。</p><p>11-定酒店，平台是会杀熟的，同一个房间不同用户下单，显示的金额不同。所以最好和同伴分别看看价格。</p><blockquote><p>如果还是很贵，如果地铁方便，可以住离市远一点的酒店，相对便宜。</p><p>尽量白天或者提前就定好房间，一般越晚定越贵。</p><p>退房一般是中午12点，但是提前和前台提出要求，一般可以延迟到下午2点。</p><p>酒店需要注意面积，离地铁交通等距离，有无窗户和早餐等。</p></blockquote><p>12-高铁价格基本上每年任何时候都不变的，而飞机节假日会很贵大几千，一般工作日可能几百块比高铁还便宜。</p><p>13-北京时间是东八区，比美国<strong>早</strong>10个小时左右。</p><blockquote><p>我们中国为了方便，所以固定了时间，其实不同地区时间是不一样的，比如纽约和旧金山差3小时。</p></blockquote><p>14-曼哈顿和浦东新一样是一个区，而陆家嘴只是浦东新内的一个区域。</p><p>15-为什么公司喜欢应届生呢，一个重要原因是招应届生可以抵扣公司税款和有社保补贴等（各地区不同，反正国家有补贴，可以为公司省钱）。</p><p>16-应届生就业记得领各种租房补贴，就业补贴等（普通本科中上海应该只有一个租房补贴，需要联系公司申请）</p><p>17-一斤是十两也就是500g，pound可以表示英镑也可以表示重量，一磅大概是九两。</p><p>18-甜食早餐饭后刷牙;酸食早餐饭前刷牙，或者吃完一小时再刷，因为这些酸性食物会对牙齿表面的珐琅质层有侵蚀弱化的作用，刷牙会伤害牙齿。</p><p>19-收款不要看到短信的收款提醒就认为交易完成了，对面可能是延迟转账，可以随时取消交易，所以还是要以APP内的余额为标准。</p><blockquote><p>其次不要帮别人转账和交易，别人可能把你当作洗钱跳板。</p></blockquote><p>20-分析社交平台链接和截屏给别人，最好是未登入状态或者把链接后续参数全部删除。</p><blockquote><p>bili英语学习：<a href="https://www.bilibili.com/video/BV1Sv411y7d8/?spm_id_from=343.124.0.0&amp;vd_source=a1105r9022ggg153cf26hh26ab9f34c6">https://www.bilibili.com/video/BV1Sv411y7d8/?spm_id_from=343.124.0.0&amp;vd_source=a1105r9022ggg153cf26hh26ab9f34c6</a></p><p>如上，此链接保留：<a href="https://www.bilibili.com/video/BV1Sv411y7d8/%E5%8D%B3%E5%8F%AF%EF%BC%8C?%E4%B9%8B%E5%90%8E%E7%9A%84%E5%90%8E%E7%BB%AD%E5%8F%82%E6%95%B0%E9%83%BD%E5%8F%AF%E4%BB%A5%E7%AE%97%E6%98%AF%E6%88%91%E4%BB%AC%E5%9C%A8%E5%B9%B3%E5%8F%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E8%BA%AB%E4%BB%BD%E7%89%B9%E5%BE%81%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%BE%85%E5%8A%A9%E6%89%BE%E5%88%B0%E6%88%91%E4%BB%AC%E7%9A%84%E7%9C%9F%E5%AE%9E%E7%94%A8%E6%88%B7%E4%B8%BB%E9%A1%B5%EF%BC%8C%E4%BB%8E%E8%80%8C%E6%89%BE%E5%88%B0%E6%88%91%E4%BB%AC%E7%9A%84%E9%9A%90%E7%A7%81%E4%BF%A1%E6%81%AF%E7%AD%89%E3%80%82">https://www.bilibili.com/video/BV1Sv411y7d8/即可，?之后的后续参数都可以算是我们在平台的一些身份特征，可以辅助找到我们的真实用户主页，从而找到我们的隐私信息等。</a></p><p>也不要在登入状态下截图分享，因为当前页面可能也存在你看不到的参数识别信息，如知乎事件，截屏的图像看起来没问题，但是通过特定算法可以看到屏幕上的一系列用户参数，从而确定你的身份。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 实用小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活小知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>管理自己的WIFI</title>
      <link href="archives/db98f355.html"/>
      <url>archives/db98f355.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们是不是经常遇到被蹭网的情况，那么怎么管理连接过WIFI的设备，限制他们的网速，或者禁用他们呢？</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>1-路由器，你必须能接触到当前网络来源的路由器</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>1-找到路由器的品牌，百度搜索当前路由器品牌的管理员网址，如TP-LINK就是<a href="http://tplogin.cn/">http://tplogin.cn/</a></p><p>2-连接当前WIFI，进入管理员网址（如果你根本不知道当前WIFI密码，那就直接重置路由器，第一次连接是能直接连接上的，然后提示你设置密码等,没有提示设置密码，那连接上后再进行第三步操作即可）</p><p>3-会提示输入管理员密码，我们可以尝试默认密码，密码不对，我们长按路由器电源，重置路由器即可，密码就会变成默认密码（不同路由器可能重置方法不同，百度即可，只要你能接触到路由器就一定能重置）</p><p>4-重置密码后，输入密码就能管理WIFI啦，对各种连接设备进行禁止和限速，还可以设置WIFI名称和密码等等操作。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>只要你能接触到路由器，这个网络你就能管理，管理后可以不修改WIFI密码,偷偷给你的朋友偷偷限速，他也发觉不了。</p>]]></content>
      
      
      <categories>
          
          <category> 实用小知识 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>互联网小知识</title>
      <link href="archives/93db4fb9.html"/>
      <url>archives/93db4fb9.html</url>
      
        <content type="html"><![CDATA[<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>1-win+L锁屏</p><p>2-win+D返回桌面</p><p>3-网页中看视频按M键就可以静音，对应MUTE沉默的，静音。</p><p>4-alt+f4关闭当前窗口。</p><p>5-网页中点击链接，有时会在当前页面打开另一个链接，覆盖了当前页面，也就是当前页面打开。</p><p>可以按ctrl再点击链接，即可新建页面打开链接。</p><p>6-电脑长截屏，以前网页长截屏通常使用edge浏览器，内置了长截屏工具；现在QQ的ctrl+shift+a后出现的功能栏中也有长截屏功能。</p><p>7-聊天框内容换行输入；平时enter键为换行，但是现在普遍enter就是直接发送信息了，怎么换行输入内容呢？shift+enter即可。</p><p>8-ctrl+shift+t可以恢复不小心删除的浏览器窗口中的网页。</p><p>9-大部分window的ctrl+shift+f可以转换繁体字和简体字。</p><h2 id="小知识"><a href="#小知识" class="headerlink" title="小知识"></a>小知识</h2><p>1-平时我们编程因为要下载用到一些库，无论是npm还是pip都会改镜像源为阿里或者腾讯。</p><blockquote><p>但是如果你开了魔法梯又去走阿里的镜像源，反而可能会无法下载，记得关闭魔法</p></blockquote><p>2-有时候控制台会访问gthub的一些库，网络错误，即使魔法了还是网络错误，这个时候就需要通过修改本地host，添加最新github的ip的方法才能解决。（我也不知道为什么魔法了，网页能访问，控制台就是访问不了）</p><p>3-当我们设置图标或者一些图片格式的时候，不要直接互转，比如要一张ico格式做图标，你直接png爆改后缀为ico，在项目设置的时候，有可能会报错。如：is not in 3.00 format。因为原先那个png图片本质上没有ico的特性，需要通过软件“格式工厂”等，转化正确格式为ico才行。</p><p>4-内网穿透就是让外网能访问到内网设备上的数据和服务。</p><p>5-ipv4就是IP，255-255-255-255，但是地址有限目前不够用了，就算局域共用ip都越来越不够用；所以启用ipv6，达到足够多的ip，地球的每一颗沙子都可以有独立ip。</p><p>6-NAS（Network Attached Storage：网络附属存储），就是一个联网硬盘，存数据用的，同一个局域网下都可以直接访问：就等于传统硬盘需要插线，nas只要是同一个局域网，所有设备都可以直接访问。（外网访问就需要内网穿透了）</p><p>7-非对称加密：公钥用来加密，私钥用来解密，（也可以私钥加密，公钥解密。反正一方加密另外一方就只能解密）。</p><blockquote><p>公钥和私钥是根据数学原理设计的，使得通过公钥加密的数据只能使用相应的私钥进行解密。这是因为公钥和私钥之间存在一种数学上的关联，可以通过私钥来推导出公钥，但反过来是非常困难的。</p><p>这种特性确保了数据的安全性。如果任何人都可以使用公钥解密数据，那么加密就没有意义了，因为任何人都可以获取到私密信息。只有私钥的持有者才能解密数据，这样可以确保数据只能被授权的人访问。</p></blockquote><p>8-对称加密：指的是加密和解密使用的秘钥都是同一个。</p><p>9-https：在应用层的http上面加了一个证书验证（tls或者ssl）</p><blockquote><p><a href="https://blog.csdn.net/weixin_46511008/article/details/120792170">https://blog.csdn.net/weixin_46511008/article/details/120792170</a></p><p><a href="https://www.cnblogs.com/andy-zhou/p/5345003.html">https://www.cnblogs.com/andy-zhou/p/5345003.html</a></p><p>1-用户浏览器访问服务器</p><p>2-服务器下发公钥给用户浏览器</p><p>3-用户浏览器对公钥进行验证（黑客可能通过广播公钥的方式伪装服务端，用了黑客的公钥，私钥也在黑客手里，自然加密没用了，所以要通过ca机构验证此公钥的合法性）</p><p>4-用户浏览器通过服务器下发的非对称性加密的公钥，加密一个对称性“对话密钥”（由先前通信的浏览器和服务器各自生成的随机数组成）发给服务器</p><p>5-服务器收到“对话密钥”，达成对称性加密通信。</p><p>为什么要“对话密钥”对称性加密？</p><p>因为用户端没有非对称性加密的私钥（它也不能有私钥，不然在私钥传递前过程中，黑客也获取了私钥），无法解密服务器发来的信息。</p><p>为什么不直接攻击获取“对话密钥”？</p><p>这个是公钥加密的，黑客获取了也解密不了。</p><p>为什么不直接获取没有用非对称加密公钥，加密前的“对话密钥”？</p><p>因为这个“对话密钥”是随机数组成的，如浏览器生成的随机数3，它通过公钥加密传递，攻击者又没有用户浏览器的最高权限，黑客通过通信协议劫持数据，根本管不到浏览器里面去。只能获取到公钥加密后的“对话密钥”  ，如果黑客有浏览器的最高权限，那他就算是”真实用户“了，都用不着管什么对称加密不对称加密的。</p></blockquote><p>10-WAF是Web Application Firewall的缩写，也就是web防火墙。</p><p>11-github提供的静态页面page，仓库名字必须是“你的用户名.github.io”，只有这一个仓库才是真正的githubPage，其他”仓库地址.github.io”的仓库的虽然也可以为我们存储静态站点，但用”仓库地址.github.io”访问page都会404。</p><blockquote><p>除非通过域名解析，通过“仓库名称.github.io”会404，但是解析了域名，可以通过域名访问</p><p>如果有github不知道如何解析域名和ip主机值的同学，那么说明你有仓库了，建议直接去vervel同步github仓库部署，怎么解析上面都写了。</p></blockquote><p>12-github和gitee和vercel都可以静态托管。</p><blockquote><p>github没有各方面限制，也不需要实名认证，唯一缺点就是大陆访问速度慢。</p><p>gitee免费部署的page托管，很多限制，什么空间大小，付费版才可以自定义域名和https等等，唯一优点就是国内访问快一点。</p></blockquote><blockquote><p>vercel弥补了github的速度慢的缺点，亲测很快。（2024.02.22；当然未来也可能被不可抗力因素限制）</p><p>而且vercel可以多个域名指向一个项目。</p><p>建议解析的时候，A记录值填为76.223.126.88；cname值填为cname-china.vercel-dns.com；（因为官方推荐那个是国外的，国内被墙很卡）</p><p>一招快速解决Vercel站点在国内无法访问的问题<a href="https://zhuanlan.zhihu.com/p/660865097">https://zhuanlan.zhihu.com/p/660865097</a></p><p>部署教程：<a href="https://zhuanlan.zhihu.com/p/675688020">https://zhuanlan.zhihu.com/p/675688020</a></p><p>【Vercel部署个人博客-CSDN博客】<a href="https://blog.csdn.net/kuizuo12/article/details/124716488">https://blog.csdn.net/kuizuo12/article/details/124716488</a></p><p>如果你有githubpages了，直接导入项目，然后换个域名dns解析就行了，很简单。（如果是githubpage转vercel，最好github登录，可以直接授权仓库）</p><p>后续修改代码，直接github里面修改，vercel会自动同步。</p></blockquote><p>而且vercel的ip是泛播，有人ddos打带宽（通过ip），vercel会自动帮你防御（一般人打不死的），vercel也不会因为你的网站被攻击流量而封禁你的域名（因为根本不知道是你的域名被攻击了，ddos打的是ip）；如果被cc攻击（通过域名地址），因为本就是静态页面，没有接口，所以根本无法进行攻击，打的请求也根本不沾多少流量。</p><blockquote><p>ddos其实攻击者根本没有请求多少流量，而是通过放大攻击，用第三方把服务器要处理的流量放大了，而ddos是通过ip攻击的，vercel会防御，所以对我们静态网站无效；cc攻击，攻击者就需要实打实的流量请求，cc的本身就是为了打针对域名层面的动态服务，如果他用cc来消耗我们的带宽（vercel帮我们解决）和流量（vercel每个月只给100g，真有人强行消耗100g，我们大不了付费，攻击者成本比我们还高）。</p></blockquote><p>其次vercel还支持部署后端，severless，但是也要付费，而且面对成熟项目还是不足的，不然没人没服务器了~</p><p>13-保存网站单个页面为静态资源</p><blockquote><p>我们一般会ctrl+s，但是这样保存的页面通常很不完整，教程如下</p><p><a href="http://www.clicksun.cn/mis/bbs/showbbs.asp?id=22387">http://www.clicksun.cn/mis/bbs/showbbs.asp?id=22387</a></p></blockquote><p>14-保存整个网站的所有页面</p><blockquote><p>亲测小飞兔非常不错<a href="https://www.xftsoft.com/product/">https://www.xftsoft.com/product/</a></p><p>一般只用于保存自己的站点，记得把nginx限速和其他各类限速先关闭，不然会爬取失败。</p><p>采集爬虫网站可以用火车头采集软件。</p></blockquote><p>15-dns解析中@代表无任何前缀部署，如x.com；*才表示的泛解析。</p><p>16-mysql8.0导出的数据库，在mysql5.6中导入，可能出现如下错误</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">unknown collation utf8mb4_0900_ai_ci<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>那是因为5.6没有utf8mb4_0900_ai_ci这个字符集。</p><blockquote><p>解决方法1：</p><p>第一步：直接把8.0导出的数据库sql文件，用文本打开，然后将文件中所有的utf8mb4_0900_ai_ci替换为utf8_general_ci</p><p>第二步：将文件中所有的utf8mb4替换为utf8</p><p>解决方法2：</p><p>如果方法一没用或数据乱码（乱码数据显示为？？？，有时候除了mysql5.6和8.0有的编码不兼容，也可能mysql5.6兼容那个8.0的编码，但是你选择导入的sql和数据库建立的时候设置的编码不统一），那无视，用方法二</p><p>将 <code>utf8mb4_0900_ai_ci</code> 替换为 <code>utf8mb4_general_ci</code> 或 <code>utf8mb4_unicode_ci</code>，</p><p>最好的解决方法3：</p><p>卸载mysql5.6/7：<a href="https://www.cnblogs.com/yangyangblog/p/12000961.html">https://www.cnblogs.com/yangyangblog/p/12000961.html</a></p><p>没有programdata是因为隐藏了文件，打开隐藏文件显示就有了。</p><p>卸载mysql5.7（注意卸载干净，不然后续mysql安装不了），下载8.0</p></blockquote><p>17-mysql和一些其他软件还有一个非常普遍的安装失败问题，那就是：电脑计算机的名称有中文！！！</p><blockquote><p>一定要重命名计算机名称为英文，<a href="https://consumer.huawei.com/cn/support/content/zh-cn15854139/">https://consumer.huawei.com/cn/support/content/zh-cn15854139/</a></p></blockquote><p>18-有时候外接显示屏，打游戏切到桌面会黑屏几秒等类似情况，大概率是因为游戏和桌面分辨率不同导致的，所以每次切换都需要时间重新调整分辨率。解决方法就是让分辨率相同。</p>]]></content>
      
      
      <categories>
          
          <category> 实用小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公司注册</title>
      <link href="archives/ce4aca3c.html"/>
      <url>archives/ce4aca3c.html</url>
      
        <content type="html"><![CDATA[<h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2>]]></content>
      
      
      <categories>
          
          <category> 企业运营 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>商标注册</title>
      <link href="archives/7f33046a.html"/>
      <url>archives/7f33046a.html</url>
      
        <content type="html"><![CDATA[<h2 id="商标"><a href="#商标" class="headerlink" title="商标"></a>商标</h2><p>1-驰名商标是一种保护。</p><blockquote><p>比如特斯拉就是驰名商标，一些人就算抢注了特斯拉的商标某个类别，也是不受法律支持的。</p><p>驰名商标必须是在国内享有知名度才有可能申请，也就是说你要做大了才行。如特斯拉，京东，小米。</p></blockquote><p>2-商标可以个人注册，也可以公司注册，但是要有营业执照。</p><blockquote><p>初创公司，商标最好注册在个人名下，因为股东可能一直变化，公司地址也一直变化，这样商标信息也需要不断变更。而注册在个人名下，个人向公司授权商标的使用即可，做大了稳定了过户到公司即可。</p></blockquote><p>3-35类商标一般是必注册的。</p><p>4-商标可以是图片，可以是文字，也可以图文结合，但是图文结合的通过率低一点。</p><blockquote><p>所以可以先注册文字商标，文字商标通过后再注册图形商标，两个都通过后就可以<strong>任意搭配使用</strong>，缺点是因为分开注册了，所以需要花双倍的钱。</p></blockquote><p>5-商标一共有45类，1-34是产品类别，35-45是服务类别。需要商标全类别一般需要成为驰名商标，或者自己全部注册，但是需要大量注册费用，所以一般不建议。</p><blockquote><p>所以商标根据自己的经营业务注册相应类别即可，如果你很厉害，对自己有信心拓展其他业务，也可以提前注册其他类别商标，防止被他人抢注。</p></blockquote><p>6-商标2023现在官费是300一类，其他的就是代理商代注册收取的费用。</p><blockquote><p>注意：商标字体应该使用不用授权的免费字体，如宋体，黑体，楷体。避免使用他人享用著作权的付费字体，也就是说一定不要有知识产权纠纷。</p></blockquote><p>7-公司地址变更后，商标地址也需要变更。也就是说商标的信息必须保证实时的真实有效性</p><p>8-商标要申请黑白商标，申请通过后你可以使用任意颜色；而彩色商标只保护你申请的颜色。</p><p>9-公司假如经营不善注销了，商标不会跟着注销，只要你没向商标局递交注销申请，就是正常存在的。</p><p>10-注册一般需要9-12个月时间；分为提交，受理，审查，下证四个阶段；提交申请后最快15天会拿到受理通知书，受理后经过审查，大概五个月能拿到初审通知书或者驳回申请；初审通过后公示三个月，无人提出异议即下证。</p><p>11-TM标（trade mark）代表产品作为商标在使用，商标还没有下来；R标（register）代表商标已经注册成功。</p><blockquote><p>申请中的商标是可以使用的，带TM标识即可，前提是你的商标是不违法的，不侵权的（找专业代理机构审查了的），这种商标一般也会申请成功。但是如果你的申请商标侵权了（商标局不会通过，只是现在没审核到你），在使用中就可能会出现问题，比如收到别人起诉。</p></blockquote><p>12-商标类费是300一类，注册成功后有效期10年，不需要每年去缴费。第九年即可再次续费；如果忘记续费。到期后一年内的宽展期续费即可，但是续费价格更高。过期一年后商标将失效。</p><p>13-企业名称和营业执照上的公司名称，和商标是不同的两个东西。商标是国家知识产权中国商标局进行审核的；营业执照也就是企业名称是由国家行政审批局进行审批下发的经营主体资格证(以前是工商局)。公司名称是不唯一的，如你注册了哈哈有限责任公司，别人还可以注册北京哈哈/上海哈哈有限责任公司。而商标是唯一的，只能一个主体注册。</p><p>14-注册商标一般是不可以申请加急的。加急一般是审查抢注行为，很多个人短时间内注册同一相似商标，加急也是加急驳回，半个月就给驳回了，不需要五个月左右。</p><p>15-商标是可以买的，优点是快，缺点贵，而且不是自己起的名字，肯定不太符合自己的创业价值观。自己注册就是慢需要等9-12月，但是费用便宜。</p><p>16-个人注册商标需要：个人身份证复印件，个体户营业执照复印件。公司名义申请：公司营业执照副本和复印件。</p><blockquote><p>如果同一天两个人申请同一商标，商标下来后，谁已经开始使用此商标，具有商标更多的使用证据，比如你已经有了带有TM标识的产品，那么就给谁。如果双方都没有就协商，协商不成就抽签决定给谁。</p></blockquote><p>17-公司Logo商标和产品商标是不一样的概念，它们可以相同也可以不同。商标是用来推广的一个logo。比如小米的公司Logo是MI，但是红米也有自己的商标，它并不是MI。</p><blockquote><p>所以公司logo商标和产品商标是母子关系，但公司logo也是要注册商标的</p></blockquote><p>18-如果一个图案商标是由英文或者汉字设计的一个图片，那么他人有注册相同汉字设计后的图片商标，我们在相同文字的基础上更改图案的UI设计即可。但是文字商标就没有这种操作了。</p>]]></content>
      
      
      <categories>
          
          <category> 企业运营 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>网站日常运营</title>
      <link href="archives/9499c51e.html"/>
      <url>archives/9499c51e.html</url>
      
        <content type="html"><![CDATA[<h2 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h2><p>1-如果你的服务器要搭建多个网站，一定要设置不同的数据库表前缀，不然如果再使用Redis的话，会导致数据错乱。</p><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>如果你要成立一个品牌或者公司，要像注册商标一样，提前抢注你心仪的域名，否则就得出高价从他人那里购买。</p><p>如果心仪域名已经在别人手里，又不想出高价购买，可以看此域名主人会不会到期不续费，在此域名过期60-75天的时候，可以提前去西部数码或阿里云等平台预约抢注。</p><blockquote><p>域名是由国际组织ICANN定义，分配和管理的，最初属于美国的资产及管理权，后来在各国的反响下独立出来一个国际组织，中立的非盈利性机构专门来策划、分配、管理互联网。因此，所有域名均由ICANN负责管理和分配，但国家地区类域名，如我们国家的CN后缀，一般都是ICANN授权当地机构进行统一管理和分配。</p><p>2015年初，360公司以1亿人民币的价格从美国运营商Vodafone手中买下了360.com这个国际顶级域名，创造了当时全球域名交易的纪录。</p><p>2014年4月，小米公司以360万美元（约合人民币2240万）的价格购得了mi.com这个域名，成为当年中国交易最高的域名。</p><p>2014年，京东公司以3000万美元（约合人民币1.95亿元）的价格购买了jd.com这个两字母短域名。在此之前，京东一直使用360buy.com这个与其品牌无关且容易与360公司混淆的域名。jd.com不仅简洁明了，也提升了京东公司的品牌价值和流量效率。</p><p>X.com是一个非常有价值的单字母域名，它曾经属于马斯克的第一家创业公司X.com，后来被Paypal收购。2017年，马斯克以高价从Paypal手中买回了这个域名，但是一直没有启用。最近，马斯克把twitter.com换成了X.com。</p></blockquote><p>1-正常注册的COM域名，在2023年，每年费用为70左右。当我的网站知名度上升后，续费域名会涨价吗？</p><blockquote><p>域名价格标准是域名注册局规定的，各大平台如腾讯，阿里，godaddy只是帮你”代注册”，价格浮动与域名注册局标准价格相差不大。</p><p>因为你的域名实际上是从域名管理局买的，不是从代理商那里买的，管理局有费用标准不会乱涨价。</p><p>所以即使代理商涨价，换个代理商平台即可。</p><p>所以也不会存在域名知名度高后，续费价格上涨的问题，不然全乱套了。平时涨价也是所有域名稍作调整，最多贵个十多块钱。</p></blockquote><p>2-网站为什么要icp备案？</p><blockquote><p>备案是国际工信部互联网安全等机构指定的，为了防止一些人用网站进行非法活动，当网站备案后，就能找到相关负责人。</p><p>域名绑定国内服务器都需要进行域名备案后，服务器才能使用，这是国家要求所有国内服务器厂商做的限制。（否则有人非法活动，又是国内服务器厂商提供的服务，厂商就要担责，所以厂商需要确定你的网站已经备案，这样就是备案人担责）</p><p>如果你用国外服务器或者香港服务器，国外服务器厂商不受我国要求限制，就不需要备案即可将服务器绑定域名。（国内有可能将此服务器IP拉入黑名单，导致国内用户无法访问，所以一般买香港的）</p></blockquote><p>TIP1：当域名不再使用，需要及时去注销备案。因为管局不会每天去审核谁的网站还有没有运营，只会定期抽查，如果你的域名到期后被别人注册，进行了非法活动，那么出事了，备案人还是你。</p><p>TIP2：COM域名你去godaddy等平台都不需要实名认证就可以购买和解析，但是CN域名就算是在国外平台注册也得实名认证的。</p><p>TIP3：其实<strong>国内服务器还可以绕备案</strong>，教程百度即可，但是一个规矩是不允许的，你去钻漏洞即使成功了，也是违规的，后续使用也很容易遇到问题，不如买个香港云。</p><p>TIP4：如果你是国内服务器，要icp备案，用的<strong>哪个平台的服务器就去哪个平台备案</strong>，和域名所在平台没关系。</p><p>TIP5：icp备案是不分交互式的（公安备案才分交互式），但是分个人备案和企业备案，个人备案是不能盈利的，大部分省份也是不允许交互的（如用户注册登入和发评论）。（走香港云自然就不需要icp备案了，但还是需要公安备）</p><p>TIP6：公安备案的交互式，基本上需要线下去网安大队审核，非交互式一般线上就行了。（其实没那么多人管这些，别说申请交互式了，很多人根本没有公安备案，照样开评论等交互式功能，都没事，不过想要网站长期运营，还是按流程来比较好。也看你对业务的把控，你是正能量的东西没有公安备一般也不会处罚你，最多叫你注意然后完善备案。否则还是避免用cn域名，选择用com等域名，走香港云或者国外服务器，根本不需要备案，怎么盈利那就看你自己了）</p><p>TIP7：无论是icp管局备还是公安备案，备案地址一般选主体（你自己）身份证上的地址，因为大部分省份只受理本地备案或者有当地居住证的人才可以。</p><p>TIP8：cn域名也可以用境外服务器的。但是用境外服务器虽然不用icp备案，但是没有这个备案的网站，搜索引擎的SEO对其一般不友好。</p><p>TIP9:域名备案的时候，网站名称记得想好，后续网站title必须包含备案网站名称（合规情况下，一般也没人管）</p><blockquote><p><strong>总而言之言而总之，有两个备案</strong></p><p>icp管局备案：你用国内服务器就必须要备案，用国外服务器就不需要备案。然后个人备案的icp管局备案大部分省份不允许网站进行交互（注册登入和评论等操作）</p><p>公安备案：无论用不用国内服务器都要求备案，要求是开站icp备案下来30天内进行公安备案，否则可以给予警告或关站整改。但是不严，大部分网站没有公安备案过。在这里申请交互式基本上也需要线下。</p><p>两个备案互不联系职能不同：如果管局备案是个人备案，理论是不允许交互的，然而公安备案我申请交互式又通过了，但如果我的网站交互，被管局发现，即使公安备案了交互式，也和管局不相干，可能也会警告要求取消交互。</p><p>用海外服务器：不需要管局备案，但同样要进行公安备案，但上文说了，要求不严格，很多人没备案过。看个人吧，比如你godday注册的com域名，又是海外服务器，都无法判断你是国内站点，你是否公安备就看自觉性了。cn域名的话，找你了再备案呗。</p><p>看似很繁琐，其实也没那么离谱，只要你不是h，d，d和骗人，提供一些服务，按不了你的head，最多整改罚款。</p></blockquote><p>3-如何icp备案？</p><p>企业备案需要营业执照，法人身份证信息等，在企业地址拍视频核验，具体问备案平台即可。</p><p>个人备案：在腾讯云平台，填入自己的信息，身份证照片，人脸识别验证，根据要求填入网站相关信息即可。</p><blockquote><p>注意：腾讯云备案页面附件需要提交一份网站建设计划书（图片），还需要本人电子签名（涂鸦前上去就行，或者打印出来拍照）；此外还需要把网站建设计划书（word或pdf)通过邮箱发给管局。</p><p>注意：一定要备注准确方案书通过邮箱发送给管局的时间，不然管局找不到邮件，就会说你没发网站建设书，白等一个月，备案失败又得重新提交建设书再重新审核。</p></blockquote><blockquote><p>如果不急，有细节错误都没关系，直接提交备案即可，有问题腾讯人员会打电话给你辅助备案（一天内就会打电话，效率挺高的），腾讯审核通过后才会提交管局审核。</p></blockquote><p>如下word模板：仅供参考，根据你的网站内容简单书写即可。</p><blockquote><p><em><strong>*新增网站组网方案与解释说明*</strong></em></p><p><strong>一、</strong> <em><strong>*网站服务内容介绍*</strong></em></p><p>当前域名jinnianx.com是具有做信息存放与技术分享等功能。</p><p>1、内容介绍：</p><p>网站当前主要记录生活与分享资讯的个人网站；用户通过浏览器打开jinnianx.com,可以访问到我的网站，可以按照自己的需求选择对应的栏目，再选择需要打开的链接。</p><p>2、域名用途：</p><p>jinnianx.com方便用户找寻网站，可以直接打开浏览器，输入我的网址就可以打开我的网站了。</p><p><strong>二、</strong> <em><strong>*组网方案*</strong></em></p><p>服务器基础设备配置：</p><p>腾讯云轻量应用服务器/ 空间：80G / CPU：4核/ 内存：4G </p><p>服务器使用技术及部署情况：</p><p>服务器系统程序：CentOS 64位(安全加固)</p><p>WEB服务器程序：NGINX + MySQL    </p><p><em><strong>*三、网络安全与信息安全管理制度*</strong></em></p><p>(1)负责服务器的日常维护、技术支持，并对服务器的功能提出意见、建议和方案等。</p><p>(2)妥善保管好服务器登录密码，不得告诉他人，有事外出或下班时，要及时退出设置项界面。</p><p>(3)加强服务器检查。定期对数据存放硬盘空间、CPU使用、内存空间等环境进行检查。发现硬盘存储</p><p>空间、CPU异常、内存异常等问题要及时处理，不能及时处理时应向空间商反映，并积极采取措施尽快解</p><p>决。</p><p>(4)加强服务器的病毒防范。要经常了解和掌握网络病毒的流行情况及其解决方案，并积极采取应对措施。</p><p>施，避免对服务器及网络内其它终端的感染。一旦被感染，要及时提出杀毒方案，控制传播范围。定期对</p><p>各服务器进行查毒、杀毒。</p><p>(5)保障本系统的实时安全运行，负责每天的信息数据备份。</p><p>(6)负责对服务器中文件的增加、删除及权限变更工作，严禁无关人员登录服务器。</p><p><em><strong>*四、承诺*</strong></em></p><p>承诺如发现主体信息有误、网站实际开办内容与备案信息不一致、域名有交易行为、网站内容涉及九不准等违法违规问题，接受接入服务商关闭网站、主管部门注销备案并列入黑名单的处罚</p><p>​                                                                                                                          （这里写个电子签名或者手写签名）</p><p>​                                                                                                                                                 日期：2088年8月8日</p><p>​                                                                                                                                                 网站负责人：zdq</p></blockquote><p>4-网站更换服务器，需要重新icp备案吗？</p><blockquote><p>国内域名更换服务器，是同平台服务器，如域名和服务器都是腾讯旗下购买的，更换备案信息的服务器ip即可，不需要重新备案;（因为你其实已经备案了，就换个服务器ip，后续腾讯提交一下新ip信息给管局即可）</p><p>更换为另一个平台服务器如阿里云，也不需要重新备案，进行接入备案即可，然后阿里云平台会将修改后的备案信息提交给管局一次，让管局也知道服务器IP变了，服务器提供商变了。（让新的服务器提供商知道你的域名备案了，然后平台再向管局更新信息）</p></blockquote><p>5-网站在管局icp备案通过后，按理说需要在一个月内进行公安备案（审核一般3-5天），不过这玩意说是一个月内需要公安备案，但是很多站点都没备案的，应该不强制，当然和当地政策有关，但是没接到当地网警大队电话的话，可以先不管。</p><blockquote><p>公安备案在信息变更后，如服务器IP变更等，最好也尽早在公安备平台进行信息更新。</p><p>tips：</p><p>我们公安备案的一般是非交互式，也就是没有用户的注册登入的，如果要有让大众注册登入的交互功能，备案就需要选交互式。（icp备案是不分交互式的，但是icp个人备案大部分省份默认也是不能交互的，也就是不能让用户注册和发评论等操作）</p><p>区别：</p><p>非交互式：如上内容线上申请一下，等工信局通过就行了。</p><p>交互式：不同地区可能不同，大部分地方线上申请后还需要线下面审，但基本上就是确定主体人，然后和你说一些注意事项。（个人为主体就去户籍所在地精确到县，公司为主体就去公司注册地）</p></blockquote><h3 id="备案问题"><a href="#备案问题" class="headerlink" title="备案问题"></a>备案问题</h3><p>1-备案服务器ip变更了。</p><p>某些情况，当备案的ip和实际网站使用的IP不同（比如自己的服务器过期，用了朋友的），服务商可能会发现，并打电话给我们。这个时候，我们去备案变更服务器即可。</p><p>或者我们可以说网站使用了cdn，服务器还是用的原先备案平台的（如原先服务器是腾讯云，即备案也在腾讯云）即可，一般就没事了。如果他还要你提供源服务器ip，而你原先备案的服务器ip已经无法使用，那就只能买个便宜的能备案的服务（函数包或者最便宜的服务器），然后用此服务挂载一个网站的单页即可，以后就报这个最便宜服务器的ip（网站实际功能不变，还是放在你无法备案的服务器即可）</p><p>情况一：在腾讯云备案后，自己服务器过期了，用了朋友的服务器，如果有人打电话过来，直接说网站挂了cdn，所以ip显示和备案不同，如果继续问：“你服务器都过期了？怎么提供服务的？”，那没办法只能报朋友的腾讯云服务器ip即可。一般这样就没事了，如果很严格他还说源ip和备案信息不符，那没办法只能去修改备案了。</p><p>情况二：在腾讯云备案后，自己备案对应的服务器没有过期，但是性能不够用，用了另一个服务器或者朋友服务器，那只要在原备案对应服务器挂个网站的单页即可，实际服务放到朋友的服务器。打电话来问，就说朋友服务器是cdn，源服务器报自己那个和备案对应的服务器ip即可。</p><blockquote><p>总结：如果你有多个站点，然而备案只有腾讯云和阿里云这些大厂方便，而备案只能在服务器购买商那里备案，那么这么多站点服务，都用大厂的服务器，谁用的起？所以可以只开一个服务器（这一个是必须的，不能一个都不开，服务器都没有，怎么备案的？很明显就不符合规定了，会被撤销备案），每个域名备案都和这个服务器绑定，然后在这个服务器中运行一个和域名相关的单页就行了，不需要让这个备案服务器去做真正的服务处理。真正的处理交给那些便宜的小厂服务器。</p></blockquote><h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><p>1-总所周知，想用国内服务器为域名提供服务，域名必须备案，但备案又很麻烦，如果你只是用此域名做一个静态网站，则可以用github的仓库代替服务器。</p><blockquote><p>如zhoudongqi.cn此域名在当前2023年9月，并未备案，但我将此域名的DNS解析到github的仓库后（当然在github也需要进行一系列操作绑定并认证zhoudongqi.cn为你自己的域名，操作百度即可），这个仓库就相当于一个服务器为我的域名提供服务。</p></blockquote><h2 id="WHOIS如何隐藏"><a href="#WHOIS如何隐藏" class="headerlink" title="WHOIS如何隐藏"></a>WHOIS如何隐藏</h2><p>如果你不想让别人查到当前域名的注册人，怎么办呢？</p><p><strong>CN域名</strong>查询地址<a href="https://webwhois.cnnic.cn/WelcomeServlet">https://webwhois.cnnic.cn/WelcomeServlet</a></p><p>CN域名默认是开启姓名和邮箱的，就算你在注册商这里隐藏（腾讯云，阿里云等），在官网（上面链接）还是可以查到的。</p><p>解决：需要花39每年，在注册管理局层面隐藏，具体操作工单咨询域名购买平台（阿里云腾讯云等）客服即可。</p><p><strong>COM域名</strong></p><p>COM域名一般没有whois详细到个人姓名和邮箱。因为注册局根本没要这个信息（那怎么证明这个域名是你的？我也不清楚~）。</p><p>虽然注册局没要，但你在腾讯云或者阿里云注册的com域名也是默认实名了主体的，也证明了你是此站点的持有人，这个信息是保密的（当然你犯事了除外）</p><p><strong>其他后缀域名</strong></p><p>这些域名有些会显示姓名的英文，但是不会显示邮箱，具体看后缀注册管理局和注册商了。</p><p><strong>如何联系COM后缀域名站长</strong></p><p>有时想买一个COM域名，站长又没有给出联系方式，因为是com域名whois又查不到信息，怎么办？</p><p>可以先简单whois出当前域名注册商，再去去各大注册商（腾讯云，阿里云等）的官方whois平台，一般可以在这里联系到站长（可以通过注册商这个第三方联系，比如你在阿里云的whois告诉阿里云我要联系当前域名站长，阿里云就会发邮箱给站长：说有个人想联系你，你想和他联系吗？）</p><p>TIP：一般新注册域名无法马上转出到其他服务商，如阿里云新域名注册后60天内无法转到腾讯云或者godaddy的。</p><h2 id="网站ICP经营许可证"><a href="#网站ICP经营许可证" class="headerlink" title="网站ICP经营许可证"></a>网站ICP经营许可证</h2><p>这玩意就必须是公司了，而且还要相应资质，门槛高，没有这玩意网站是无法进行支付交易的。</p><blockquote><p>这个和什么公安备案的交互式又不同，你说公安备案我选了支付的交互呀？</p><p>它们职责根本不同，你公安备案通过了支付交互不代表你能这样做，它只是一个备案，反而如果你备案了，没有经营许可证网站还涉及交易，还能通过备案找到你是谁。</p></blockquote><p>所以一般站长就会通过码支付或者易支付或者发卡网进行站点经营（详细自行百度吧）</p><h2 id="网站运维"><a href="#网站运维" class="headerlink" title="网站运维"></a>网站运维</h2><p><code>大厂的cdn和对象存储一般是带宽无限（你可以设置，但它可以做到无限），流量收费。而有的小厂代理什么的，有那种无限流量，带宽有限的付费，怕刷流量可以用这种，不过得搞个正规的备案了的服务商，不然有风险。</code></p><p>1-上cdn和对象存储oss/cos等。（记得设置限制和防刷）</p><blockquote><p>存储oss/cos可以设置私用访问，只允许cdn来访问，那么存储流量就不会被刷，但是cdn就遭罪了，不过cdn流量比存储的便宜一点。</p></blockquote><p>2-关闭境外访问，防海外ip的ddos。（注意要在dns层面或者机房层面就禁止，服务器禁止了，cdn没禁，流量费照样起飞）</p><p>3-网站备案，备案后有人攻击你，你报警，他得进去。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">参考：https://blog.anheyu.com/posts/dfb3.html为什么禁海外ip：1-大宽度服务器一般是国外ip2-国外ip抓不到不好查，而国内ipddos，即使是肉鸡，也能溯源查到攻击者的几率更大。3-我们的站点也不需要让国外访问<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3-将所有图片资源压缩替换为webp（可以设置不支持webp的浏览器照样显示原jpg和png（也得压缩）），一般这个功能在oss和cdn中可以设置。</p><p>4-服务器和cdn，oss等都上防盗链。</p><p>5-一定要定时备份站点！！！防止误操作或者被黑了删数据！！！</p><p>6-上redis缓存等。</p><h2 id="站点安全"><a href="#站点安全" class="headerlink" title="站点安全"></a>站点安全</h2><blockquote><p>在搞站点安全前，一定需要有相关知识，不然杂七杂八的都设置，导致网站访问不了，根本无法排查是哪方面的问题。（比如必须搞清楚，什么是服务器的系统防火墙，什么是nginx/apache防火墙，什么是cdn厂商的防火墙，什么是程序软件层面的防火墙等等）</p></blockquote><p>什么设置修改后台访问端口和地址；后台用户名不要与前台一致；</p><p>设置后台登入次数等限制，即使找到后台入口也爆破不开；禁止国外ip访问（dns层面（直接国外ip访问，主机地址解析到127.0.0.1），防火墙层面）；</p><p>修改ssh连接端口；防止ssh爆破；隐藏服务器信息，关闭不必要的端口；</p><p>https；及时更新系统（yum -y update）和环境；定期扫描木马，不用盗版插件与代码；</p><p>禁ping等(对象是服务器，你在宝塔（也可以腾讯云直接防火墙禁ping，有很多种方式，别禁了记不得去哪可以打开）把源服务器设置了禁ping，不代表cdn也禁ping，cdn是另外的服务器)；</p><p>设置域名禁止转移；宝塔的安全软件全安排上（win系统可以用安全狗）；</p><p>不需要的端口就关了（比如开了https，80端口就可以关了）</p><p>宝塔将网站敏感文件路径设置为加密访问；开启域名禁止转移；设置网站和数据库定时备份任务（记得还要定时下载到本地）等等这些都基操。</p><blockquote><p>windows吃性能，而且没有Linux安全，虽然是可视化界面简单，不过一般选用Linux</p></blockquote><h3 id="渗透"><a href="#渗透" class="headerlink" title="渗透"></a>渗透</h3><p>1-网站没有太大的业务价值的时候，装一些waf（比如wp程序就搞个wordfence插件等），每天备份就行，被黑了大不了重装。</p><p>2-宝塔面板或者什么权限，全部开双重验证，如宝塔：设置指定地址和端口才能进管理后台，然后还得输入一次页面方法密码，然后输入面伴登录账户密码后，还得手机二次验证。</p><p>3-没用的端口全部关了。</p><p>4-网站有业务价值后，可以找专业人士渗透测试。</p><h3 id="DDos攻击"><a href="#DDos攻击" class="headerlink" title="DDos攻击"></a>DDos攻击</h3><blockquote><p>所有的措施只是追求一个性价比的防御方式，但是惹到大佬了，肯定防不住，大型攻击只有上高防，不然腾讯云这些大厂的高防硬件服务早破产了。</p></blockquote><p>tip：</p><p>1-下载一个最新的恶意ip，然后全部丢到防火墙里面拦截。</p><p>2-黑洞：就是机房检测到你的ip在被攻击，直接把你ip停了。</p><blockquote><p>其实ddos流量是打到机房了，造成运营商堵塞，运营商把你ban了</p><p>通常这种是level4的ddos，也就是第四层传输层的攻击，通常为udp，tcp，syn等协议攻击</p></blockquote><p>3-ddos就是资源换资源，沾满你的流量带宽（ddos），或者cpu和内存（CC）。</p><p>4-cdn所说的盾，就是用户一访问就跳一个滑块验证码等验证用户真实性，用来防cc的。</p><p><strong>了解ddos，必须先学习通信协议，http,tcp,udp,dns,ip等等协议。</strong></p><blockquote><p>攻击方式：<a href="https://www.bilibili.com/video/BV1Ad4y11744">https://www.bilibili.com/video/BV1Ad4y11744</a></p><p>攻击：<a href="https://space.bilibili.com/282616786/">https://space.bilibili.com/282616786/</a></p><p>防御：<a href="https://www.bilibili.com/video/BV16m4y1a7se/">https://www.bilibili.com/video/BV16m4y1a7se/</a></p></blockquote><p><strong>cc攻击</strong>：是web应用层层面的，打的http/https，一般是大量ip与服务器建立了真实连接，不断请求慢接口，让你服务器cpu内存和io等处理不过来，导致网站交互功能（用户登录注册，发评论等）瘫痪；需要用软件防火墙来防御。</p><blockquote><p>cc攻击一般就是level7的ddos，也就是打了应用层。</p></blockquote><p>解决：</p><p>最简单：</p><p>国内ip：找个好waf如宝塔服务器独立部署的waf；上带盾的cdn，被打就上5s盾；</p><blockquote><p>本地服务器nginxwaf：<a href="https://github.com/ADD-SP/ngx_waf/">https://github.com/ADD-SP/ngx_waf/</a></p><p>宝塔独立部署waf：<a href="https://www.kancloud.cn/kern123/cloudwaf/3198567%EF%BC%88%E9%9D%A2%E5%AF%B9cdn%E6%9C%8D%E5%8A%A1%E5%A5%97%E9%A4%90%E4%B8%8D%E5%A4%9F%EF%BC%8C%E6%88%96%E8%80%85%E6%9C%8D%E5%8A%A1%E5%95%86%E7%9A%84cc%E9%98%B2%E5%BE%A1%E6%89%8B%E6%AE%B5%E4%B8%8D%E5%A4%9F%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E6%88%91%E4%BB%AC%E8%87%AA%E5%B7%B1%E8%AE%BE%E7%BD%AE%E4%B8%80%E4%B8%AAwaf%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8C%E5%85%B6%E5%AE%9E%E6%88%91%E8%AE%A4%E4%B8%BA%E6%90%9E%E8%BF%99%E4%B8%AA%E8%BF%98%E4%B8%8D%E5%A6%82%E5%8D%87%E7%BA%A7cdn%E9%98%B2%E5%BE%A1%E5%A5%97%E9%A4%90%EF%BC%89">https://www.kancloud.cn/kern123/cloudwaf/3198567（面对cdn服务套餐不够，或者服务商的cc防御手段不够的时候，我们自己设置一个waf服务器，其实我认为搞这个还不如升级cdn防御套餐）</a></p></blockquote><p>国外ip：解析到cloudflare的cdn上或者直接禁止国外ip；</p><blockquote><p>cc因为需要真实的连接，所以需要真实的ip，而国内是没那么多肉鸡的，就算有价格也较高，所以禁止国外ip是很有效的防cc措施。当然也可以解析到cloudflare，也能有效防御。</p></blockquote><p>1-设置并发限制。</p><p>2-统计每个ip的请求总时长，超过阈值直接拒绝连接。</p><p>3-拉黑ip</p><p><strong>http洪水攻击</strong></p><blockquote><ul><li><strong>HTTP请求</strong>：请求网站的页面或资源，是最常见的HTTP洪水攻击形式。</li><li><strong>POST请求</strong>：向服务器发送数据，例如填写表单。</li><li><strong>HEAD请求</strong>：请求网页的头部信息，不返回实际内容，消耗较少的网络带宽进行攻击。</li><li><strong>其他类型的HTTP请求</strong>，如PUT、DELETE等，根据目标网站的特定功能和漏洞来选择</li></ul></blockquote><p>cdn可以帮源服务器过滤udp和tcp这些四层，但是过滤不住http洪水啊？他连源ip都没有就可以攻击我。</p><p>服务器防火墙，cdn防火墙，cdn人机验证盾，禁止国外ip等措施。</p><blockquote><p>其实CC攻击就是伪造正常用户的请求，我们识别区分正常用户和攻击者，再把攻击者拦住或封禁即可，如cdn人机验证盾就是拦住攻击者；除了人机验证盾，单个ip再限制连接请求限制，超过某个阈值再进行人机验证或者直接封禁。</p><p>但是攻击者也会去打码，等一系列手段去通过人机验证，你换一种人机验证方式，他也可能更新绕过方法。</p><p>你设置限制请求，他就上更多的ip，模拟正常，更精准的慢速请求面向某个慢接口攻击。这就只能分布式和负载均衡什么的源服务器硬抗了，因为cdn也处理不了动态请求。</p><p>本质就是资金精力的比拼，但这种明显是有商业竞争行为的恶意攻击，攻击者本身付出的代价也很高。</p><p>面对平常攻击，禁国外ip，再使用cloudflare或一个厉害防御的cdn，配合自身防火墙防御（如只允许cdn的ip访问服务器）即可。</p></blockquote><p><strong>注意：</strong></p><blockquote><p>如果你采用国内用户走国内cdn，国外用户走cloudflare，服务器防火墙设置了仅cdn的ip可访问，但在cc攻击测试中，发现资源cpu和内存还是占满了；这不是cloudflare的错，只要你正确设置了规则，它是肯定能防住的。</p><p>资源沾满的原因，是你的国内cdn的防cc能力不行，也许你需要升级国内cdn上滑块验证码识别攻击者，才能达到免费cf的效果，但是有这种服务的cdn价格需要大几百一个月。</p><p>cloudflare的缺点就是：国内访问速度的问题，可以优选节点等操作，但是还是慢一点。</p><p>当你面临大攻击，但是考虑cf访问速度慢，国内的滑块cc防御又贵的情况下，就可以选择20刀一个月的cloudflare，他的防御能力比国内几百的滑块验证码等还强（这里只说了cc，其他防御能力更加强的不是一点半点），而且cloudflarepro可以进一步优化访问速度。</p><p>缺点2：这点无法避免，dns解析生效慢，一般情况下几个小时，有的地区需要24-72小时，而且cloudflare是泛播，当你服务器关机一次，可能会换了ip，那么国内访问者就会取不到正确dns，就会卡。（这不是cf的错，而是国内运营商缓存了dns，导致不取最新ip）</p><p>最佳：平时国内走国内cdn，国外走cloudflare，有人攻击了就立马直接禁止国外访问，然后站点全部套cloudflare。</p></blockquote><p><strong>ns接入和cname接入区别</strong></p><blockquote><p>ns接入是保护全站所有域名，cname接入一个是保护单个域名。每个子域名需要重新添加</p><p>还有接入cloudflare可以有更好的dns层面的ddos防护和解析优化（国内得花钱）</p><p>但是ns和cname都dns生效慢</p></blockquote><p><strong>刷量攻击</strong></p><p>配合ngnix和防御脚本，带宽限制（如一个ip某个时间段最多多少流量）去防御，还有每次把攻击ip记录下来，上黑名单。（四层协议攻击上黑名单是没用的）</p><p>解决：</p><p>1-上cdn，打不到自己的源服务器。注意：这样的话，攻击者可以刷量攻击，cdn流量会让你破产，所以得设置cdn不缓存，请求回源，然后源服务器设置响应请求的一系列带宽限制，如：一小时内只能走多少流量，因为正常用户用缓存一般也没有影响。（也可以配cdn鉴权）</p><blockquote><p>原理：因为cdn用的方案绝大都是nginx，只有http(s)协议能通过cdn到达源站，其他协议一律在cdn处过滤了。这样四层协议完全无法穿过cdn，什么udp 洪水，udp反射，icmp洪水，syn洪水（直接用假ip来请求，不建立真正的连接，但是通过tcp握手机制达到让我们服务器接收大量无用流量，这个其实本机配置下iptables就能防御）都没用。</p></blockquote><blockquote><p>cdn可以防ddos，因为带宽打在cdn身上；但cdn防不了cc攻击的，cc攻击如：它是发起请求，去让你的服务器操作数据库，但是cdn是没有数据库功能的，所以这个攻击是源服务器在抗，cdn的waf都是通过限制和过滤恶意请求等间接防御。</p><p>不要用不正规的cdn厂家服务，你不续费，他可能故意ddos你。</p></blockquote><p>2-买有硬件防火墙的cdn和ip</p><p><strong>ddos的udp洪水放大攻击</strong>：打的是带宽，UDP是一种无连接的协议，它不需要在发送和接收数据之前建立连接。这使得UDP攻击可以通过发送大量的UDP数据包，占用服务器的带宽，从而导致网络拥塞，影响正常的网络通信。</p><h3 id="防止泄露源ip："><a href="#防止泄露源ip：" class="headerlink" title="防止泄露源ip："></a>防止泄露源ip：</h3><p>源IP泄露了，cdn就只有对正常用户起缓存加速和节省带宽作用了。起不到防御udp等ddos攻击的作用了，因为直接打你源ip就行了，流量不需要通过cdn了，随便几下就打死了。</p><blockquote><p>教程：</p><p><a href="https://blog.csdn.net/m0_65336233/article/details/127164933">https://blog.csdn.net/m0_65336233/article/details/127164933</a></p><p><a href="https://blog.csdn.net/honest_run/article/details/126271477">https://blog.csdn.net/honest_run/article/details/126271477</a></p><p><a href="https://blog.csdn.net/qq_45619909/article/details/128946800">https://blog.csdn.net/qq_45619909/article/details/128946800</a></p><p><a href="https://www.bilibili.com/video/BV1MX4y177BU/">https://www.bilibili.com/video/BV1MX4y177BU/</a></p><p><a href="https://www.bilibili.com/video/BV1vX4y1p7Su/">https://www.bilibili.com/video/BV1vX4y1p7Su/</a></p><p><a href="https://blog.csdn.net/qq_23936389/article/details/106345792">https://blog.csdn.net/qq_23936389/article/details/106345792</a></p></blockquote><p><strong>源ip已经泄露</strong></p><p>解决方法：如果已被记录，可以更换源ip，<strong>开启c设置好dn后再解析更换后的源ip服务</strong>（否则可能换了又被立马记录）</p><p><strong>注意：</strong>更换源ip不一定要换服务器，每台服务器一般是有更换公网ip名额的。如：腾讯云轻量级服务器实例，有一次免费更换ip的机会，去服务器控制台换就行。</p><p><strong>1-网络工具查询：</strong></p><p><a href="https://search.censys.io/">https://search.censys.io/</a></p><p><a href="https://site.ip138.com/">https://site.ip138.com/</a></p><blockquote><p>一般这些网址是24h去扫全世界网站的端口和ip，然后进行记录，即使你套了cdn，你的源ip很有可能已经被记录在这些网站中。</p><p>解决方法：更换源ip</p></blockquote><p><strong>2-常规ping查询ip：</strong><a href="https://www.itdog.cn/ping/www.elonmusk.cn">https://www.itdog.cn/ping/www.elonmusk.cn</a></p><blockquote><p>一般套了cdn后，ping不出源ip，但也有可能刚加cdn没陆续生效，还是有源ip存在。</p><p>解决方法：一样，换服务器ip然后套cdn</p></blockquote><p><strong>3-偏远地区访问；或硬刚cdn。</strong></p><p>偏远地区访问服务：<a href="https://tools.ipip.net/cdn.php">https://tools.ipip.net/cdn.php</a></p><blockquote><p>原理：cdn无法覆盖的偏远地区对域名进行访问，一般就会真实ip提供服务，这样就泄露了源ip</p><p>原理：直接强行打死cdn（可能性较小），然后回源获取到真实ip。</p><p>解决方法：域名解析就根本不要设置源ip提供服务；联系cdn服务商设置cdn打死禁止回源；设置只允许cdn的ip访问源服务器。</p></blockquote><p>4-<strong>邮箱地址查源IP</strong></p><p>阿里企业邮箱申请不需要企业营业执照什么的，每个人都可以申请的。</p><p>教程:<a href="https://www.bilibili.com/read/cv11644429/">https://www.bilibili.com/read/cv11644429/</a></p><p>20r/1w封邮件，也就是0.002r一条邮件，多买更优惠。</p><p>相比于短信服务的平均0.035r/条，便宜了18倍。</p><blockquote><p>原理：如果网站有发送邮箱的功能，那么接收邮箱者，可以查看邮箱原文，找到发送邮箱服务器的ip地址。</p><p>解决方法：腾讯和网易都是不隐藏域名源ip的，可以用阿里的企业邮箱帮助转发邮箱进行藏源ip；或者自己用另一台服务器转发邮件（不建议，麻烦要自己写配置等）</p></blockquote><p><strong>5-子域名或其他域名</strong></p><blockquote><p>原理：a.cn和b.cn都挂在源服务器101.1.1.1服务器上，a.cn加了cdn不会暴露源ip，但是b.cn没加cdn还是会暴露。攻击者找到了对应域名和ip间的联系，就会攻击你。</p><p>解决方法：把所有域名都加上cdn；或不要同服务器挂载多个域名；或域名间不相互联系，让攻击者无法判断联系</p></blockquote><p><strong>6-TLS证书</strong></p><p>原理：<a href="https://www.bilibili.com/video/BV1Hu4y147wW/">https://www.bilibili.com/video/BV1Hu4y147wW/</a></p><p>教程:<a href="https://www.bilibili.com/video/BV1cy4y1K7cu/">https://www.bilibili.com/video/BV1cy4y1K7cu/</a></p><p>证书生成站点:<a href="https://www.ssleye.com/">https://www.ssleye.com/</a></p><blockquote><p>虽然是由ip获取域名，但是：</p><p>市面上很多工具爬虫24小时不停的抓取扫描IP，这类的工具网站通过无差别HTTP/HTTPS请求所有的IP，并将抓取到的IP地址所对应的网站记录到网站，以至于有些攻击者可以通过这类的网站可以直接查询到网站源站IP，因此在搭建网站的时候一定要做好屏蔽安全工作。</p><p>排查是否属于上述问题：通过https://你的源站IP:443，如果可以访问并且浏览器左上角锁的标志中显示了你的域名ssl证书,证书详情内有你的域名信息，那么攻击者就知道这个ip是你的此域名的源ip。</p><p>解决：</p><p>宝塔面板用户可添加一个随意的网站1.1.1.1（域名或者IP随意），然后删除宝塔创建网站默认生成的全部文件，然后为这个随意添加的网站配置一个无效的证书（本文下方会为大家提供一个无效的证书使用），配置好证书之后在宝塔面板后台：【网站】-【默认站点】中心选择刚才添加的这个随意的网站作为默认站点。</p></blockquote><p><strong>7-cdn部署后，有历史老资源遗留</strong></p><blockquote><ol><li><strong>用户请求</strong>：当用户访问一个使用CDN的网站时，他们首先会与距离最近的CDN边缘节点（Edge Server）建立连接，而不是直接连接到网站的源服务器。</li><li><strong>CDN处理</strong>：<ul><li><strong>静态内容</strong>：如果请求的是静态内容，而且这个内容已经被缓存在CDN节点上，CDN会直接返回这些内容给用户，无需访问源服务器，如果没有，那么cdn请求源站拿到资源，再转发给用户，用户也拿不到源站ip。</li><li><strong>动态内容</strong>：对于动态内容的请求（例如用户提交的表单、实时数据更新等），CDN不能直接从缓存中提供内容。这时，CDN会根据配置将请求转发到源服务器。</li></ul></li><li><strong>源服务器处理</strong>：源服务器接收到请求后，处理动态内容生成（如数据库查询、页面渲染等），然后将生成的动态内容发送回CDN节点。</li><li><strong>CDN响应用户</strong>：CDN节点再将源服务器响应的动态内容转发给用户。在某些配置中，CDN也可能缓存这些动态内容的响应，依据特定的规则，如HTTP头部信息中的缓存控制指令。所以用户也拿不到源站IP</li></ol></blockquote><p>但是如果站点有一些资源没被cdn普及到，被攻击者发现了，那么这些资源的请求会直接请求源ip，就暴露了源ip。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>宝塔面板用户可添加一个随意的网站1.1.1.1（域名或者IP随意），然后删除宝塔创建网站默认生成的全部文件，然后为这个随意添加的网站配置一个无效的证书（本文下方会为大家提供一个无效的证书使用），配置好证书之后在宝塔面板后台：【网站】-【默认站点】中心选择刚才添加的这个随意的网站作为默认站点。</p><p>7-网站漏洞</p><blockquote><p>原理：攻击者利用网站的漏洞让我们的服务器去攻击者黑客设置的资源，建立连接就暴露了IP</p><p>解决方法：这个看情况而定了，解决漏洞即可。</p></blockquote><p>8-源服务器的遗留文件</p><p><strong>防御总结：</strong></p><blockquote><p>1-源服务器，如果你是宝塔面板就把能开的优化策略和免费的安全插件都搞起。</p><p>2-然后找一个防御ddos和cc的安全脚本安装上，比如基于iptables一类的开源免费脚本，或者宝塔的付费waf(有一个是基于nginx的，有一个是独立服务器部署的waf)（不漏源ip的话，可以不用设置）（如果站点上了cdn，cdn服务商一般也会自带这些的，但是cdn的是cdn的，万一源ip暴露，源服务器的防御脚本也能起一定作用）</p><p>3-套个cdn就行了（抵御ddos的四层攻击，国内大厂计量cdn注意七层http刷量，如果是cf那种无限流量就不怕）</p><p>4-cc攻击的话，cdn一般会防，还有1，2也都会防。</p><p>5-不要泄露源ip</p><p>国内ip走值得信任的小厂cdn（大厂计量害怕被刷量攻击），国外IP走cf，万一国内小厂cdn被击落，立马也换cf，再被击落用付费cf。更换期间上静态维护页。</p><p>6-cdn禁止回源，还有设置服务器只允许cdn的ip访问，可以最大程度防止cdn被击穿导致源ip泄露</p><p>7-一般直接禁止国外访问，实在要访问，把攻击者肉鸡最多的国家禁止访问。</p></blockquote><h3 id="XSS和CSRF和SQL注入"><a href="#XSS和CSRF和SQL注入" class="headerlink" title="XSS和CSRF和SQL注入"></a>XSS和CSRF和SQL注入</h3><p>XSS攻击主要是通过在公共站点中嵌入非法脚本，当其他用户访问这些页面时，这些脚本会被执行，从而影响用户的操作或窃取用户信息；CSRF攻击则是伪造用户的身份，向目标网站发送请求，这些请求通常与转账、发邮件、购物等操作相关</p><blockquote><p>xss：<a href="https://www.bilibili.com/video/BV1Qd4y1k7K4">https://www.bilibili.com/video/BV1Qd4y1k7K4</a></p><p><em>Cross Site Scripting</em>跨站脚本攻击是恶意用户通过用户的输入框注入恶意脚本到服务器，让e正常用户收到服务器的恶意脚本并执行。（不叫css是因为避免和前端的css重复，就叫了xss）</p><p><em>Cross-site request forgery</em>跨站点请求伪造是伪造用户请求，进行非法操作，比如qq邮箱如果被csrf，那么攻击者就可以冒充你删除你的邮件。</p><p>sql注入：<a href="https://www.bilibili.com/video/BV1ZR4y1Y745%EF%BC%8C%E9%80%9A%E4%BF%97%E8%AF%B4%EF%BC%9A%E5%A6%82%E7%99%BB%E5%85%A5%E8%B4%A6%E6%88%B7%EF%BC%8C%E9%BB%91%E5%AE%A2%E5%9C%A8%E7%99%BB%E5%85%A5%E6%A1%86%E5%86%85%E6%8F%92%E5%85%A5%E6%81%B6%E6%84%8Fsql%E5%AD%97%E7%AC%A6%EF%BC%8C%E6%AC%BA%E9%AA%97%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%A7%E8%A1%8Csql%EF%BC%8C%E4%BB%8E%E8%80%8C%E8%BE%BE%E5%88%B0%E9%AA%97%E5%8F%96%E8%B4%A6%E6%88%B7%E5%AF%86%E7%A0%81%E5%92%8C%E6%9D%83%E9%99%90%E7%AD%89%E6%93%8D%E4%BD%9C%E3%80%82">https://www.bilibili.com/video/BV1ZR4y1Y745，通俗说：如登入账户，黑客在登入框内插入恶意sql字符，欺骗服务器执行sql，从而达到骗取账户密码和权限等操作。</a></p></blockquote><p>这些玩意现在都是用框架组件开发的程序，一般很少有这种漏洞，就算有，随便启用一个防火墙也有过滤功能。</p><h3 id="dns污染"><a href="#dns污染" class="headerlink" title="dns污染"></a>dns污染</h3><p>这种是dns运营商的事情，我们管不着，出问题了我们找它们就行，腾讯云，阿里云什么的。</p><p><strong>防护</strong></p><p>一般现在用框架开发的程序都很少有这些漏洞，因为本身框架做了安全策略，还有配合waf防火墙，都可以进行有效防护。</p><p>sql防范：对用户的输入过滤等。</p><p>xss防范：对用户的输入（账户密码，评论等各种input框）做过滤，对输出做转义</p><p>csrf防范：使用token（因为有同源策略，其他站点拿不到另一个站点的token）；避免get请求；使用验证码等，但是cookie也有同源策略，为什么又被利用了呢？token也会被xss等方式劫持呀？攻防永无尽之，这里只是了解</p><h3 id="CDN的选择"><a href="#CDN的选择" class="headerlink" title="CDN的选择"></a>CDN的选择</h3><p>按理来说节点ip越多，发布地区越广，加速效果越好；</p><p>但是ping一些大厂官网会发现他们的ip一般就4-6个，也不多呀？</p><p>因为他们的架构不像普通网站，而且他们的一个ip可能能顶你10个ip（也可能一个ip就是一整个机房），他们公司有专门的部署架构。</p><blockquote><p>也可能会任播anycast。了解任播：<a href="https://www.bilibili.com/video/BV1894y1U7dz/">https://www.bilibili.com/video/BV1894y1U7dz/</a></p></blockquote><p>对于普通网站来说，还是选择节点多，分布广的CDN服务商较好，当然得实际测试（有的是质量不够数量来凑，也许20个ip的速度还没有10个的快），比如用站长之家去ping。</p><blockquote><p>如果是面向国外用户，秒选免费的cloudflare就行了，通俗说：上了这个cdn，免费的ddos不可能打的死，如果对方买高价付费ddos，你直接买一个cf的付费服务，一样能抗住，而且他攻击的成本比你防御还高很多。</p><p>可以国内外用户ip分开部署cdn，国内的部署一个性价比高的厂商，国外就用cf</p></blockquote><blockquote><p>国内用户访问通过国内cdn，国外用户访问通过cloudflare方法：</p><p>1-将要防护的域名的ns交给cloudflare，这样可以全站防护，但是国内用户就无法再使用国内的cdn（因为国外的dns服务商没有多线路解析的功能），而国内用户访问cloudflare也会很慢。（所以不推荐）</p><p>2-使用国内多线路解析，国内用户还是国内的cdn，国外用户请求通过cname方式接入cloudflare的cdn（推荐），但是cloudflare的免费套餐，不支持cname接入。</p><p>解决办法：<a href="https://www.3520.net/free-cargo/2326.html">https://www.3520.net/free-cargo/2326.html</a></p><p>遇到问题（提示网站重定向多次，无法访问）解决方法：<a href="https://www.3520.net/server/2829.html%EF%BC%8C%E5%A4%A7%E6%A6%82%E5%B0%B1%E6%98%AF%E6%8A%8Acloudflare%E5%86%85%E7%9A%84SSL/TLS%E6%94%B9%E6%88%90%E2%80%9C%E5%AE%8C%E5%85%A8%E2%80%9D%EF%BC%88%E4%BD%BF%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6%EF%BC%89">https://www.3520.net/server/2829.html，大概就是把cloudflare内的SSL/TLS改成“完全”（使用服务器自签证书）</a></p><p>cf配置参考：</p><p><a href="https://www.imydl.com/wp/16810.html">https://www.imydl.com/wp/16810.html</a></p><p><a href="https://www.imydl.com/wp/17658.html">https://www.imydl.com/wp/17658.html</a></p></blockquote><blockquote><p>多线路解析还可以分线路，比如电信，联通，移动，教育网，浏览器来源来分开解析，我们可以一个线路上一个国内cdn，原先是一个cdn抗，现在五六个cdn抗，自然防御力强很多。（平时默认开启一个cdn，遇到攻击了再开启多线路解析）</p></blockquote><blockquote><p>cloudflare优化后，国内访问速度其实还过得去，可以研究下优化和优选节点。</p><p>相比于国内高防cdn，cf特别良心了，速度优化还是不够用，可以升级cfpro，20美刀一个月，也比国内高防便宜，防御效果也好，速度pro又可以优化，基本上大差不差。</p></blockquote><p><strong>http刷量</strong></p><p>上cdn就有一个坏处，流量得花钱，四层协议的攻击流量费算不到我们头上，但是http刷量攻击流量费就得算我们头上了。</p><p>解决：</p><p>1-cdn配置限速等配置，不过这些配置一般不够用，还是会被刷一部分钱。</p><p>2-直接把cdn的缓存功能关了，然后资源请求放回到本身的真实服务器ip处理，本身服务器再配合nginx和openresty 精细化限速；也就是说只用cdn抗四层攻击；但是这样cdn的缓存功能就没有了。</p><p>3-上cloudflare，根本不怕被刷。</p><p>4-被打一次及时拉黑ip</p><p><strong>OSS存储桶</strong></p><p>存储服务最好和源服务器是同一地区，可以让网站更快，最好服务商也相同，可以节省一点流量。</p><p>价格区间：2024.3一年1T的腾讯cos，首单优化我只花了120</p><p>1-如果计量付费，记得开启防刷（防盗链，仅cdn的ip可访问等）</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>1-在修改东西之前一定要备份，要清楚的找到自己修改了什么，步骤都要日志记录。</p><p>2-nginx防火墙，各种插件防CC，防渗透插件等，cdn防火墙，这些功能的使用要清楚基本原理，否则互相冲突，正常访问都禁止了，你也不知道谁禁的，那就麻烦了。（比如要给cdn的ip加白名单，否则防火墙会拦截。）</p><blockquote><p>比如网站加cdn后，源服务器只和cdn通信，那源服务器上的这些cc的waf其实没用了对吗？，因为其实源服务器是和14个cdn节点在通信，但是这14个节点都加上白名单，也不能限速。</p><p>不对，很明显源服务器虽然只和cdn通信，但是源服务器的cc防火墙也能拦截客户端ip（因为cdn会把客户端ip当作参数传给源服务器），兼容的防火墙就能通过参数再去防御（限速封禁ip等）。</p></blockquote><p>3-cdn厂商一定要正规或值得信任，因为接入cdn解析，其实用户访问你域名获取的资源，cdn厂商是可以控制的。</p><h3 id="被攻击紧急措施"><a href="#被攻击紧急措施" class="headerlink" title="被攻击紧急措施"></a>被攻击紧急措施</h3><p>1-如果遇到长时间的ddos，且自己无法解决，为了防止百度等搜索引擎降低seo权重和k站，可以在百度平台提交闭站保护。</p><p>2-创建一个静态页面挂载在github或者gitee或者vercel上，让用户有起码的页面显示，（一般有月流量限制），ddos最多刷量，但是刷一个换个号继续部署就行。</p><p>3-全站接入cf，禁止国外访问，源站只允许cdn访问，如果需要国内高速访问就接入国内带有滑块验证的cdn。</p><blockquote><p>这还能被打死，肯定是付费攻击，站点没价值就上个cf硬抗，卡就卡吧。如果站点有价值，就上更好的cdn，不停的变换人机验证方式。</p></blockquote><p>4-如果源站泄露，找到泄露点修复，再更换源ip</p><h2 id="短信防刷"><a href="#短信防刷" class="headerlink" title="短信防刷"></a>短信防刷</h2><p>1-在服务商控制台或者本身程序前后端，限制IP和设备和手机号码上限，这些都是基本操作，应该只是增加攻击成本，对大佬来说基本上没啥用，实现自动刷只是时间问题。（有总比没有好，起码增加了攻击成本和门槛）</p><p>2-最后的关键点在于使用一个无法自动识别通过的人机识别交互，比如滑块识别验证码等。</p><blockquote><p>传统的验证码识别，现在有打码技术，所以需要选用最新的人机交互识别。只要攻击者必须人工识别验证码，无法自动化攻击，那么他也就不会攻击了，因为他的人工成本比我们还高。</p></blockquote><h2 id="站点优化"><a href="#站点优化" class="headerlink" title="站点优化"></a>站点优化</h2><p>1-视频统一无损压缩一次，大视频单独进行m3u8切片处理。</p><blockquote><p>小视频没必要进行m3u8切片处理，因为mp4本身也有类似切片的功能，一段1min的视频，大概会切成5份，每份20s，也够用了；进行切片分成如100份,反而画蛇添足。</p></blockquote><p>2-图片输出为webp</p><h2 id="证书部署问题"><a href="#证书部署问题" class="headerlink" title="证书部署问题"></a>证书部署问题</h2><p>1-如果是宝塔看到或服务器明确配置了新证书，但是用户访问就是原先过期的老证书，很可能是用的cdn服务商的证书没更新，需要联系cdn服务商。</p>]]></content>
      
      
      <categories>
          
          <category> 网站运营 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>英语美式口语-Alan</title>
      <link href="archives/d0c53967.html"/>
      <url>archives/d0c53967.html</url>
      
        <content type="html"><![CDATA[<h2 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h2><p>1-有的单词在百度查，根本没有美国口语那个意思，所以不要去在心里想着把英语翻译成中文，而是需要通过使用场景去理解和习惯。</p><p>2-学习英语要通过场景和图像去记忆，而不是死记单词。</p><p>比如apple词语，我们会第一时间想到它的图像，而不是在脑海中出现中文“苹果”再出现图像。</p><p>翻译成中文明显慢了一步，而且有时普通词典根本查不到，而理解和习惯是潜意识的。</p><blockquote><p>比如我们说：你怎么这么拉了，你g了。</p><p>美国人正常学中文也不可能理解到：你怎么这么落魄了，whack的意思。</p><p>只有他在中国待很久，理解那个场景了，才能明白</p><p>如ball，它有“球”也有“舞会”的意思，当我们看一个视频的对话：The ball is very round</p><p>我们查ball的意思，这个时候只需要记住“球”的意思就行了，没必要强行记住还有“舞会”的意思，因为没有用视频场景和句子去理解，强行记住过几天就忘了，完全是浪费时间。</p><p>或者找场景和句子去强化“舞会”的意思，如ball gown，The ball gown was a great success。</p><p>当没有时间去找场景和句子强化“舞会”的意思，那还不如不记。</p><p>一句话：不要死记单词的意思，毫无作用没两天就忘了。 要根据场景和句子去练习和理解。</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/english/63.png" alt="63"></p><p>如上图whack在美国其实表示拉跨的意思，但是我们的百度也查不到</p><p><strong>语言就是一个使用习惯，通过多次场景化的练习加深印象。</strong></p><blockquote><p>中文：别天天黑我啊。</p><p>外国人在学中文的时候可能不理解，黑不是一种颜色吗？不是一个形容词什么的吗？怎么还能做动词？</p><p>口语其实就是使用习惯，并没有太多的语法限制。</p><p>英语：u dont have the guts</p><p>这并不是你没有内脏和肠子的意思，而是你没那个胆子，你是个胆小鬼。</p><p>所以英文和中文也有很多相同之处。</p><p>问题：那为什么英文不是u dont have the heart？ 中文不是用：“你没心脏”。来表示没勇气?</p><p>这就是一种习惯，大家都默认的规定用法。我们习惯用”胆“表示勇气，而美国人习惯是用”guts“。</p><p>我们多使用，去记住和习惯这些句子就好。</p></blockquote><p>2-urban dictionary，一个收集解释俚语，也就是百度官方正规词典查不到的词的词典。</p><blockquote><p><a href="https://www.urbandictionary.com/">https://www.urbandictionary.com/</a></p></blockquote><p>3-同一个英语单词有看似多个毫不相干的意思，其实也有很多典故由来的，我们可以根据典故去理解记忆，也可以多使用习惯就好。</p><blockquote><p>3.1 如sweat是汗，sweater就是毛衣，穿毛衣很热容易出汗嘛。</p><p>3.2 fox是狐狸，那对应foxy就是狡猾的，salt是盐，salty就是咸的。</p><p>3.2.1单词fox虽然也有狡猾的意思，但大部分情况下是表示中性狐狸的意思，表示更进一步更具体的情感色彩语境，如表示狡猾的一般用foxy。（salt也有咸的意思，但是一般是表示“盐”，更具体的语境表示”咸的“还是用salty）</p><p>3.3 liver是肝脏的意思，可以理解为肝脏是活下去的必须器官。</p><p>那为什么心脏不叫liver？没有心脏也活不下去呀，这就是大众的使用习惯，记住就好。</p><p>3.4羽绒服downcoat，down不是向下吗？怎么表示的羽绒？因为羽毛大部分是往下的，也是因为习惯导致down也有羽绒的意思。</p><p>这就像汉语中拆解偏旁和组词一样，每个词语和单词都有由来的，大部分单词我们多使用记住就行了，没必要去拆解。一些复杂的单词，作为第二语言使用者，我们就可以通过拆解意思来理解记忆。</p><p>3.5虽然一些单词的由来和汉语相似，但也有本质区别，如汉语是象形字，“苹果”看起来就像一棵树的果子。而”downcoat“是因为羽绒一般向下所以”down“也有羽绒的意思，那么凭什么”down”是表示向下，“coat“表示衣服，”apple”表示苹果？</p><p>英语的形成很复杂，最终形成了大众接受的一些词根和使用习惯，然后进一步组成各种各样的单词，这些像“down”一样的“根单词”，强行记住就好。</p></blockquote><h2 id="入门英语"><a href="#入门英语" class="headerlink" title="入门英语"></a>入门英语</h2><h3 id="part-1"><a href="#part-1" class="headerlink" title="part 1"></a>part 1</h3><p>1.Are you about to _____ or something?</p><p>你这是要去_____之类的吗?</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/64.png" alt="64"></p><p>2-描述黑人可以直接说black，没有歧视的意思。</p><p>常用cause，聊天中直接打cuz，而不是我们书本上学的because</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/65.png" alt="65"></p><p>3-Vibe.(感觉) =vibration (频率/震动)</p><p>举例：在一个特定的场合，提醒一个人：Good vibes  only（这里只准带来好的感觉，不要传递负面消极的态度）</p><p>Bad vibes(不好的感觉)</p><p>u give me  really bad vibes 你真的让我很不舒服，让我恶心</p><blockquote><p>和u make me sick什么区别呢？</p><p>就像中文，我tm吐了啊，玩的这么垃圾；你让 我很不舒服。</p><p>不同语境不同场合不同语气强度，用的句子都不同，熟能生巧吧。</p></blockquote><p>埃隆马斯克的：don’t doubt your vibe，because its true 不要质疑你的直觉，因为它是对的。</p><blockquote><p>单词不要死记，而是通过场景去get那个意思和感觉。</p></blockquote><p>4-You know what I’m saying?</p><blockquote><p>不是说问句必须什么do u ，口语没那么严谨。</p><p>就像中文：你是沙贝吗？你沙贝？</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/english/66.png" alt="66"></p><p>它是一句口水话，filler word填充词，但是口语经常用到。</p><p>5-I don’t get it/you get it/he gets it</p><p>使用非常广泛</p><p>我没理解到你的意思，我想不通为什么你摇这样，也可以代表一件事情我没成功等等。</p><p>6-that‘s fucked up /messed up</p><p>太离谱了，太糟糕了。</p><blockquote><p>我的钱包今天被偷了</p><p>what？that‘s so messed up</p></blockquote><p>7-all lives matter/black lives matter/asian lives matter</p><p>源自于黑命贵的运动，不能歧视黑人和亚洲人。matter 更重要很重要的意思。</p><p>8- statistic(统计)/statistically(统计上的)</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/67.png" alt="67"></p><p>比直接说更严谨，从数字数据上分析得来结论。</p><p>9-What’s up/what up /how is it going/what’s good(哈喽最近怎么样)</p><blockquote><p>和中国人的：你吃饭了吗？一样常用。就是how are u的意思</p><p>回复：what’s up/what’s good/how’s it going?/how you doing?</p><p>别人问what’s up不一定要回复什么：not bad/fine thank u and u 。。。。</p><p>可以直接回复一样的话yeah，what‘s up</p></blockquote><p>10-cop就是police/police officer的口语化。</p><p>没有歧视的意思，是中性neutral的。</p><p>there‘s a cop/police over there 那有一个条子/警察</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/68.png" alt="68"></p><p>11-And shit=and stuff 之类的</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/69.png" alt="69"></p><p>12-pig在美国俚语里就是贬义的警察</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/70.png" alt="70"></p><p>13-Don’t hesitate to___</p><p>毫不犹豫的___</p><p>14-hood，hood=neighborhood街区的意思，但是美国特指贫民区，穷一点，治安差的社区</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/71.png" alt="71"></p><p>15-pull over(逮停) pull somebody over，当你喝酒了被交警截停等</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/72.png" alt="72"></p><p> buddy，dude，bro，homie</p><p>buddy一般指好友之间的称呼，译为“兄弟；哥们”，类似的用法有pal，mate，</p><p>也可用于陌生人之间的称呼，译为“老兄；喂”，一般用于男人之间；</p><p>dude则没有朋友的意思，可以广泛指任何人，可译为“老兄；伙计；家伙”，类似用法guy，man。</p><p>bro和buddy差不多，homie是很亲密的好友朋友。</p><p>16-strapped up(备枪)</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/73.png" alt="73"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/74.png" alt="74"></p><p>17-glock，格洛克手枪</p><p>18-I gotta go/i’m gonna have to let u go</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/75.png" alt="75"></p><p>gonna就是going to的习惯性连读缩写</p><p>gotta=go to</p><p>i gotta go 我得先撤了。</p><p>19-I get that a lot</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/76.png" alt="76"></p><p>I bet you get that a lot 我打赌你收到过很多这种反馈。</p><p>20-nerd(书呆子) / nerdy(书呆子的感觉)</p><p>nerd是书呆子是贬义的，nerdy是一种感觉，没那么贬义，一种小调侃。</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/77.png" alt="77"></p><p>21=Jacked/strong(很壮) u are jacked</p><p>口语on shit=卧槽</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/78.png" alt="78"></p><p>22-Baller(很有钱的人)im just a young baller我就是个大手脚花钱的人罢了</p><blockquote><p>由来是很多贫民窟的球星很穷，打球有名气后就有钱了，演变成富二代的意思</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/english/79.png" alt="79"></p><p>23-You know the drill你懂的</p><p>和u known what i am saying差不多的意思</p><p>i’m a young baller ，u known the drill</p><p>24-no way不可能</p><p>可以表示惊讶，你怎么做到的？</p><p>也可以表示别人发起一个请求，你表示你想得美</p><p>25-keep going on 继续保持</p><p>26-gang shit 牛的，牛掰哈哈</p><p> 27jacked强壮，u is</p><blockquote><p>故意把are换成is，美国黑人很喜欢这样</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/english/80.png" alt="80"></p><p>28-I can tell/see(我能看出来)/ I can’t tell(我看不出来)</p><blockquote><p>当你女朋友问你今天的outfit怎么样，你就可以说，beautiful，i can see，i can tell</p></blockquote><p>29-do something for fun</p><p>work out健身/lift撸铁，健身就是自己在家用keep也算健身，lift就是专门的去健身房举重撸铁那种。</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/81.png" alt="81"></p><p>30-hella=very（非常）</p><p>he‘s hella fast他跑的非常快</p><p>31-Loaded（很有钱）</p><p>一个盒子，往里面装东西，loaded就是装很满了，表示富有。</p><p>32-messed up/fucked up 搞砸了</p><p>i messed up我搞砸了</p><p>上面也有太离谱了的意思，不同语境不同意思，些许差别。</p><p>33-that is so clutch</p><blockquote><p>Clutch(完美解决问题需求) that‘s so clutch太爽了  dude i just found 30 dollars in my pocket，that’s so clutch我在口袋里找到30块钱，这正解决了我的问题，太爽了（比如小学没钱去黑网吧上网，刚好找到钱了）</p></blockquote><p>34-Flex(秀/炫耀) Flexing(炫耀)，flex百度是四肢弯曲的意思，延伸为就是展示肱二头肌，展示炫耀的意思。</p><blockquote><p>he likes to flex他喜欢炫耀</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/english/82.png" alt="82"></p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语美式发音-Alan</title>
      <link href="archives/8d171714.html"/>
      <url>archives/8d171714.html</url>
      
        <content type="html"><![CDATA[<p>TIPS：美式发音，等于美国人的普通话的发音习惯，不是学音标，这里也不遵循于音标。只是学习每个“音”的正确地道发音口型等。</p><p>water美式发音官方是[ˈwɔːtər]，但是我们需要把t改成d，因为我们学的不是“普通话”，而是美国人的习惯口音。</p><p>我们中国人大部分习惯口腔发音，而美国人通常是胸腔发音</p><h3 id="Th和T的发音"><a href="#Th和T的发音" class="headerlink" title="Th和T的发音"></a>Th和T的发音</h3><p>1-th要把舌头抵到牙齿上面，breadthe的th要发音</p><p>2-throw，当这种情况，r的发音要比th重，r为主，the为次</p><p>3-有的特殊情况，th发t的音，固定的记住即可。</p><blockquote><p>thomas，thompson，esther，thailand，thyme</p></blockquote><p>4-当t出现在两个元音（aeiou）之间的时候，t发d音</p><blockquote><p>water</p><p>can i get a wat(d)er?</p><p>better-bedder</p><p>butter-budder</p></blockquote><h3 id="R发音"><a href="#R发音" class="headerlink" title="R发音"></a>R发音</h3><p><strong>r在前面</strong></p><p>中文发音r，如果，瑞士，只需要把嘴巴嘟一下。</p><p>英语中，r除了嘴巴嘟一下，还需要把舌头往后拉</p><blockquote><p>raw，rose，research</p></blockquote><p><strong>当r在后面</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/8.png" alt="8"></p><p>我们不能吞音，far就念fa，r是啊的音，这是错误的。</p><p>正确的是r的音一定要舌头往后拉，发出r的音</p><blockquote><p>far  jar  bar   star</p></blockquote><p><strong>r在中间</strong></p><blockquote><p>marry  caring  zero berry betary</p></blockquote><p>也是注意r除了嘴巴嘟一下，还需要把舌头往后拉就行了</p><p><strong>r在单词第二个位置</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/9.png" alt="9"></p><blockquote><p>grape crack crab wreck brock brother trust  great product</p></blockquote><p>在我们发g的音时，就提前把嘴巴嘟起来，准备r的音。</p><h3 id="W发音"><a href="#W发音" class="headerlink" title="W发音"></a>W发音</h3><p> 就是嘴巴嘟嘟，嘟起来那个形状然后向后大幅张开嘴巴，就是正确的音</p><p>r的音是，嘴巴嘟起来，重点舌头后缩。</p><p>w的音是，嘴巴嘟起来，延音要让嘴巴往后拉。</p><blockquote><p>wife wow why  white woman week</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/english/10.png" alt="10"></p><h3 id="Q发音"><a href="#Q发音" class="headerlink" title="Q发音"></a>Q发音</h3><blockquote><p>q是kw的结合</p><p>queen quick</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/english/11.png" alt="11"></p><h3 id="S-amp-Z的发音"><a href="#S-amp-Z的发音" class="headerlink" title="S&amp;Z的发音"></a>S&amp;Z的发音</h3><p>注意：s是气流从牙齿中间经过发出的声音，没有舌头参与；  而th是舌头在牙齿中间。</p><p>s是辅音气音，没有真正的音发出来，就像蛇一样嘶嘶嘶嘶</p><p>z也是一样的口型，但是需要发出声音，多了点喉咙和口腔的震动。</p><p>1-当单词最后一个字母也是辅音气音的时候，字母s不发音</p><blockquote><p>pets treats cups greats</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/english/12.png" alt="12"></p><p>2-单词已经s，z，sh，ch，dg等结尾，复数加es，如何发音</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/13.png" alt="13"></p><blockquote><p>这时候这个s和es要发iz的音 </p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/english/14.png" alt="14"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/15.png" alt="15"></p><blockquote><p>bus-buses-busez</p></blockquote><p>2-如果一个词是元音结尾，变成复数加s的话，要发z的音</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/16.png" alt="16"></p><p>3-单词结尾需要发音的+z</p><blockquote><p>ng需要发音</p><p>rolls/z  pictures/z</p></blockquote><p>基本上都发z，除了单词结尾为气音的，如ops，pets</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/17.png" alt="17"></p><p>4-特殊</p><blockquote><p>is-iz    his-hiz  as-az  was -waz  these-theze  because-becauze</p><p>makes，虽然是e结尾，但是发音是mak，k是气音，所以还是makes不是makez</p></blockquote><h3 id="f与v的发音"><a href="#f与v的发音" class="headerlink" title="f与v的发音"></a>f与v的发音</h3><p>f和v发音动作相同：上牙齿轻轻触碰到下嘴唇</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/18.png" alt="18"></p><p>f是不发音的气音，V需要发音喉咙震动。</p><blockquote><p>five  face  free  laugh telephone</p><p>gh是f的音</p></blockquote><p>区别</p><p>一个发音一个不发音，知道这个区别，leave和leaf就很好区别。</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/19.png" alt="19"></p><p>特殊：</p><blockquote><p>of单独念为of，在句子里面为ov</p><p>all ov it</p><p>made ov  wood</p></blockquote><h3 id="sh发音"><a href="#sh发音" class="headerlink" title="sh发音"></a>sh发音</h3><p>上下嘴唇往外，让牙齿通过气流发声</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/20.png" alt="20"></p><p>1-气音不发音</p><blockquote><p>she shadow sheep shallow sure</p><p>lotion mission</p></blockquote><p>2-需要发音，感觉到喉咙震动</p><blockquote><p>vision visual version division casualL</p></blockquote><h3 id="L和FL的发音"><a href="#L和FL的发音" class="headerlink" title="L和FL的发音"></a>L和FL的发音</h3><p>发音：嘴巴张开， 舌尖抵到牙齿下面，发L的时候嘴巴要保存张开</p><p>错误发音：偷懒，只是舌头抵到上颚</p><blockquote><p>language alive color</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/english/22.png" alt="22"></p><p>单词最后的L发音</p><p>这个发音是舌头从开始到抵到牙齿下面的过程的动态发音。是最tricky的</p><blockquote><p>ball baskatball  tall call small will apple control people  </p><p>world 舌头又要缩又要抵下颚</p></blockquote><p><strong>FL</strong></p><p>FL的f是气音，重点在L</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/23.png" alt="23"></p><h3 id="单词尾音"><a href="#单词尾音" class="headerlink" title="单词尾音"></a>单词尾音</h3><p>tips：尾音千万不能吞，也没有用吞尾音来表现英文熟练度这个说法。</p><blockquote><p>如bad 和 bat，如果你吞了音，那么人家根本不知道你说的是哪个单词，只能靠猜。</p></blockquote><p><strong>b结尾</strong></p><blockquote><p>stub ，cab，slab，crab都不能吞音的</p></blockquote><p><strong>t结尾</strong></p><p>虽然是气音辅音，本来就没发出”声音“，但也是不能吞音的</p><blockquote><p>kate，it，thought，boat</p></blockquote><p><strong>d结尾</strong></p><blockquote><p>ride，hide，bad，card</p></blockquote><p><strong>动词后加ed变成过去式的发音技巧</strong></p><p>1-如果这个动词结尾是气音（p，k，等），那么加ed的发音就是t</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/24.png" alt="24"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/25.png" alt="25"></p><p>2-如果动词结尾发音，那么ed就发加d的音</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/26.png" alt="26"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/27.png" alt="27"></p><p>3-如果单词以t和d结尾，那么结尾加id（ed）</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/28.png" alt="28"></p><h3 id="CH和J和H"><a href="#CH和J和H" class="headerlink" title="CH和J和H"></a>CH和J和H</h3><p>1-CH</p><p>发这个音，嘴巴要嘟一点，舌头往后面拉一点。有点类似r的发音口型，但是声音不同。</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/29.png" alt="29"></p><p>2-J</p><p>他的发音口型和CH也是一样的，区别是CH不发音，J是发音的</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/30.png" alt="30"></p><p>3-H</p><p>Her，是有一股气吐出来的。</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/31.png" alt="31"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/32.png" alt="32"></p><h2 id="自己的补充"><a href="#自己的补充" class="headerlink" title="自己的补充"></a>自己的补充</h2><p><strong>ɪ和e的发音区别</strong></p><p>如six[sɪks]和sex[seks]</p><p>总体来说ɪ的发音是往上的，e的发音是往下的</p><p>ɪ的发音舌头是往上的，而e的发音是舌头接近抵在下颚牙齿上的</p><p><strong>l和n的发音区别</strong></p><p>light[laɪt]和night[naɪt]</p><p>l主要是口腔在发音，发音的时候，是“点对点”，舌头的一点接触上颚的一点，捏住鼻子毫不影响。</p><p>n是主要是鼻子发音，发音的时候，是“面对面”，舌头的大部分和上颚贴在一起，如果捏住鼻子就无法发音。</p><h3 id="常见品牌"><a href="#常见品牌" class="headerlink" title="常见品牌"></a>常见品牌</h3><p><img src="https://www.zhoudongqi.com/medias/picture/english/33.png" alt="33"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/34.png" alt="34"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/35.png" alt="35"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/36.png" alt="36"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/37.png" alt="37"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/38.png" alt="38"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/39.png" alt="39"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/40.png" alt="40"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/41.png" alt="41"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/42.png" alt="42"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/43.png" alt="43"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/44.png" alt="44"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/45.png" alt="45"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/46.png" alt="46"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/47.png" alt="47"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/48.png" alt="48"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/49.png" alt="49"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/50.png" alt="50"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/51.png" alt="51"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/52.png" alt="52"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/53.png" alt="53"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/54.png" alt="54"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/55.png" alt="55"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/56.png" alt="56"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/57.png" alt="57"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/58.png" alt="58"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/59.png" alt="59"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/60.png" alt="60"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/61.png" alt="61"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/62.png" alt="62"></p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识英语音标-英语兔</title>
      <link href="archives/4ceae954.html"/>
      <url>archives/4ceae954.html</url>
      
        <content type="html"><![CDATA[<h2 id="认识音标"><a href="#认识音标" class="headerlink" title="认识音标"></a>认识音标</h2><p>音标其实有很多种，有KK音标（美音），DJ音标（英音），韦氏音标，国际音标（IPA）。</p><p>发音也有美音和英音两种，如果一句话两个单词英音两个单词美音，虽然不影响交流，但是很怪，所以我们要区分。</p><p><strong>1-国际音标</strong></p><blockquote><p>是给所有语言注音的音标符合</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/english/1.png" alt="1"></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/3.png" alt="3"></p><blockquote><p>上图中只是国际音标的部分举例，没有包含所有国际音标细节。</p><p>国际音标共有107个单独字母、52个变音符号和4个超音段成分符号。如果把这些符号相互组合，可形成上千个符号，几乎可以表达人类能发出的任何正常声音。所以它的功能十分强大。国际音标早期称为万国音标，是一套以拉丁字母为基础，用来给各个语言标音的系统，它不仅能给英语标音，还能给法语，俄语甚至汉语标音。今天汉语拼音能够得到广泛使用，也有国际音标的功劳。</p><p>也就是说国际音标可以标注出世界上几乎所有语言的发音，但是我们只学英语，学国际音标就大材小用了，很多东西学了用不到，冗余了。</p><p>如：我学英语，没必要去学那种带俄罗斯的弹舌发音的音标。</p><p>而它可以标注所有语言，是优点也是缺点，因为范围太大，精准到一种语言，肯定比不过这种语言特有的标注体系。</p><p>如：你单纯学英语，国际音标肯定不用来专门学英语的DJ音标准确。</p></blockquote><p><strong>2-英音音标</strong></p><blockquote><p>参考国际音标而写，也就是从国际音标中挑选和改编了一部分组成DJ音 标。</p></blockquote><blockquote><p><em>DJ音标是英语国际音标的一种</em>,DJ发表的用于官方标记英式英语的发音，就像我们中国人的拼音。</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/english/2.png" alt="2"></p><p>因为DJ音标是参考国际音标的，最找发表在英语发音词典的1963年版本，所以也被称为IPA63，其中DJ的学生在修订了老师的音标发表了1988年版本，所以还有IPA88，这两种音标先后出现在过中国英语课本中。</p><p>它们有少量不同。</p><p><img src="https://www.zhoudongqi.com/medias/picture/english/4.png" alt="4"></p><p><strong>3-美音音标，kk音标</strong></p><blockquote><p>虽然说是美国人修订的美音音标，但是美国人基本不用，台湾人使用较多</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/english/5.png" alt="5"></p><p> <strong>4-韦氏音标</strong></p><blockquote><p>不同的词典出版商有自己的一套注音体系音标， 美国人从小到大基本上看的都是韦氏出版社的音标书，所以有韦氏音标。</p></blockquote><p><strong>区别</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/english/6.png" alt="6"></p><p><strong>知道这些有什么用？</strong></p><p>1-我们选定其中一种音标进行学习即可，这里只是为了提醒自己有时候可能遇到英语的同一个单词，可能一模一样的发音，在不同书籍上音标却有不同的写法。</p><p>2-当然同一个单词，美音和英音也有不同的发音，如water-wader。 但是大部分单词发音是一样的。</p><p>3-美国人英国人其实自己都可能不会读音标，它们音标的普及度远不如我们学中文的拼音，我们学音标是为了更好更快的学习一门流利的外语。</p><p> 4-我们这里选择DJ音标进行学习，因为它是作为牛津剑桥等权威词典的标注。</p><blockquote><p>但是我要学美音啊，不是要学KK音标吗？学英式音标干嘛？</p><p>kk音标虽然说是美式音标，但是使用的较少。</p><p>英式DJ音标更加权威，而且用英式音标精准的标注出美国人的发音也绰绰有余毫无压力，学起来也不像国际音标那么冗余。</p><p><strong>学音标的作用就是学正确发音</strong></p><p>kk音标虽然是美国官方音标，但是用的人太少</p><p>韦氏音标，虽然美国人都看的这本书，用的人多，但是权威不够，而且学了它，学英氏发音的时候有的就无法标注出来了。</p><p>DJ音标，即能让你学英氏发音，也可以精确的学美式发音，权威也够。</p></blockquote><p>问题：那老美学的韦氏音标，我学的DJ,那有老美想纠正我口语，教我看音标的时候，音标肯定有些许不同，怎么办？</p><blockquote><p>大概率不会遇到这种情景，虽然韦氏音标是美国人最多使用的音标，但实际上他们大部分人根本不认识音标。这个”最多“其实还是少部分人。</p><p>而我们作为外国人，我们没有耳濡目染的环境去学习发音。学音标可以更快的模仿最正确的发音，从而做到尽量不读错，读错了也可以自己根据音标去纠正。</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/english/7.png" alt="7"></p><p>如上KK音标的发音，用DJ音标也可以还原。</p><h2 id="DJ音标学习"><a href="#DJ音标学习" class="headerlink" title="DJ音标学习"></a>DJ音标学习</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html">【英语兔音标课(纯干货, 超详细!)】 https://www.bilibili.com/video/BV1iV411z7Nj<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows疑难杂症</title>
      <link href="archives/8258e2a0.html"/>
      <url>archives/8258e2a0.html</url>
      
        <content type="html"><![CDATA[<p>问题一：打出一个字必须清除覆盖一个字，非常难受</p><p>原因：不小心进入了覆盖模式，按一下键盘上的ins也就是insert键即可解除。</p><p>问题二：打游戏切换任务栏，如：从游戏切换回桌面，会黑屏几秒</p><p>原因：游戏帧数hz与桌面不一样，统一帧数即可。</p><p>问题三：平时的win快捷键失效。win+L锁屏，win+D返回桌面等。</p><p>原因：win键被不小心锁住了，按fn+win解锁即可。</p>]]></content>
      
      
      <categories>
          
          <category> 电脑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序_01</title>
      <link href="archives/e345326.html"/>
      <url>archives/e345326.html</url>
      
        <content type="html"><![CDATA[<h2 id="什么是小程序？"><a href="#什么是小程序？" class="headerlink" title="什么是小程序？"></a>什么是小程序？</h2><p>接下来的一周我学习的是微信原生小程序语法，而不是uniapp和taro框架。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1179.png" alt="1179"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1180.png" alt="1180"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1181.png" alt="1181"></p><p>小程序的优点：</p><p>1-不需要用户下载安装</p><p>2-可以动态更新功能，不像app一样更新一个版本上架应用商城还得有各种审核。</p><p><strong>怎么学习？</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1182.png" alt="1182"></p><p>不同平台的原生小程序学习的语言有些许微小差异，现在微信小程序流量最高，所以一般我们学习的是争对微信小程序的语法，后面我们也可以学习小程序框架如uniapp，taro，开发一套代码，在多个平台都可以上线小程序。（但是也存在一些兼容和显示适配问题需要调试，毕竟不是原生）</p><p><strong>uniapp</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1183.png" alt="1183"></p><p>uniapp是通过vue语法编写的，写了一套代码可以发布到安卓，苹果，小程序等多端部署，但是因为不是原生开发，做到跨平台多端部署的同时，有很多适配问题需要解决，比如在安卓和苹果手机上，页面有点不一样不利于用户体验的bug等。</p><p><strong>taro</strong></p><p>它的名字就是奥特曼-泰罗</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1184.png" alt="1184"></p><p>taro除了支持vue语法，还支持react语法，也能一套代码打包给多端使用。</p><p><strong>框架相比原生的缺点</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1185.png" alt="1185"></p><p>最主要的问题就是适配问题，用户体验差，我们在使用框架开发的时候，最好了解一下基础的原生语法，用来优化适配。</p><h2 id="原生小程序学习的东西"><a href="#原生小程序学习的东西" class="headerlink" title="原生小程序学习的东西"></a>原生小程序学习的东西</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1186.png" alt="1186">             </p><p>其中如WXML和html的对比</p><p>html: div —span—button–input</p><p>WXML：view—text—button—input</p><p>大同小异。</p><h2 id="编写小程序需要的环境"><a href="#编写小程序需要的环境" class="headerlink" title="编写小程序需要的环境"></a>编写小程序需要的环境</h2><p>小程序用什么编辑器开发？需要下载什么东西？</p><h3 id="申请APPID"><a href="#申请APPID" class="headerlink" title="申请APPID"></a>申请APPID</h3><p><a href="https://mp.weixin.qq.com/cgi-bin/wx?token=&amp;lang=zh_CN">https://mp.weixin.qq.com/cgi-bin/wx?token=&amp;lang=zh_CN</a></p><p>注册账号后会自动跳转小程序管理页面，在开发者管理里面有appid</p><p>注意：一个邮箱只能注册一个小程序账号也就只有一个appid，一个appid只能上架开发一款微信小程序，一个电话号码和身份证信息只能绑定五个邮箱注册的小程序账号。</p><p><strong>疑问：</strong></p><p>为什么要限制一个邮箱只能拥有一个小程序，同一个人的身份信息最大可以注册五个小程序就需要有五个邮箱，一点都不利于开发者用户体验。</p><p><strong>遇到问题：</strong></p><p>1-输入我的qq邮箱注册后，提示已注册。</p><p>2-但是我不记得密码，然后我找回密码。</p><p>3-又提示该邮箱已绑定微信，使用微信扫码登入即可</p><p>4-微信扫码，又提示该微信没有公众号或小程序服务</p><p>所以现在是一个死循环</p><p>5-因为我chorm首选语言是english，小程序注册页面全是英文，然后是提示邮箱已经注册</p><p>6-我把首选语言改成中文，再用同一个邮箱注册，居然又能注册了。</p><p>腾讯在这里绝对有逻辑问题，就算没有，这个引导找回密码也是真的失败。</p><p>估计是迭代的过程中，数据出现了问题，一个数据库里面这个邮箱已经注册了，但实际在最新的上面又没注册（我很久以前应该注册过，但是没有绑定微信，也没有开发过）</p><h3 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h3><p>微信开发者工具（必须安装，在写代码的时候有很多需要用到的功能，如模拟器实时效果视图，生成预览让我们在手机上可以看到当前开发效果）</p><p>vscode，我们也可以通过vscode编写小程序代码。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1187.png" alt="1187"></p><p>1-这个工具可以通过上面申请appid的网站进去找到小程序文档找到工具下载安装即可。</p><p>2-下载安装后，使用我们的微信进行扫码登入</p><p>注意：如上图需要填写appid，这就是我们要申请id的原因，作用应该就是用于身份认证，还要如果你通过小程序做坏事可以找到开发作者。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原生小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>清理电脑C盘</title>
      <link href="archives/7cbacec7.html"/>
      <url>archives/7cbacec7.html</url>
      
        <content type="html"><![CDATA[<p>我的战损版拯救者今天c盘空间爆红了。所以有了这一期的教程~~~</p><p>tips：软件everthing可以快速查找电脑所有文件，相比与此电脑搜索快很多。</p><h2 id="C盘和其他盘的区别"><a href="#C盘和其他盘的区别" class="headerlink" title="C盘和其他盘的区别"></a>C盘和其他盘的区别</h2><p><strong>为什么要清理c盘？</strong></p><p>电脑开机时会进行硬件自检和系统启动，同时也会扫描C盘上的文件和程序，以确保系统的正常运行。如果C盘中的文件过多或者C盘中的文件损坏，可能会导致开机时间变长或者系统无法正常启动。因此，保持C盘的清洁和整洁非常重要。</p><p><strong>为什么c盘爆红？</strong></p><p>虽然可以选择将软件安装到其他硬盘分区，但是大多数软件在安装时会默认将一些必要的文件和数据存储到系统盘（通常是C盘）的Program Files文件夹中，这些文件包括程序的可执行文件、库文件、配置文件等等。此外，一些软件还会在C盘的ProgramData文件夹中存储一些应用程序数据，如日志、缓存、临时文件等等。这些数据对于程序的正常运行是必要的，因此即使将软件安装到其他分区，也无法完全避免C盘上的数据存储。</p><blockquote><p>所以即使你软件都安装在D盘，C盘的大小还是会慢慢变大。</p></blockquote><p><strong>Tips</strong></p><p>有时我们使用软件，突然遇到冲突不兼容等问题，导致软件无法正常运行。</p><p>尝试卸载重新安装都没用，那么我们可以试试删除此软件在C盘中的userdata的用户数据。</p><p>如：植物大战僵尸本来你是想开挂，你导入了一个游戏无法识别的userdata数据，导致游戏崩了，因为这个userdata一直存在，因为不管你怎么重新卸载安装植物大战僵尸都是共用一个userdata，所以你一直会报错无法进入游戏。这个时候就需要删除导致错误的userdata。</p><p><strong>电脑都是固态硬盘，软件安装在c盘和d盘有区别吗，运行速度有区别吗？</strong></p><p>固态硬盘相比传统机械硬盘具有更快的读写速度，因此在固态硬盘上安装软件的运行速度会更快。但是，即使是在固态硬盘上，将软件安装到C盘和D盘上还是有一定的区别。</p><p>将软件安装到C盘上，可以使得软件的启动速度更快，因为C盘通常是系统盘，系统会优先加载C盘上的程序。而将软件安装到D盘上，则可以减少C盘的占用空间，使得系统盘更加干净整洁，从而提高系统的整体性能。</p><p>总的来说，将常用的软件安装到C盘上，将不常用的软件安装到D盘上，可以更好地平衡系统的性能和硬盘空间的利用。</p><blockquote><p>软件安装在C盘执行速度通常更快，但是因为c盘空间有限，太大也会影响开机速度等，所以我们只把重要软件，如编程环境node，java等安装在c盘。 qq，浏览器这些软件安装在D盘即可。</p></blockquote><h2 id="磁盘清理"><a href="#磁盘清理" class="headerlink" title="磁盘清理"></a>磁盘清理</h2><p>此电脑——C盘（右击）———属性———磁盘清理</p><p><img src="https://www.zhoudongqi.com/medias/picture/mix/10.png" alt="10"></p><p>其次就是清理回收站，回收站的内容是会占c盘空间的。</p><h2 id="电脑存储清理"><a href="#电脑存储清理" class="headerlink" title="电脑存储清理"></a>电脑存储清理</h2><p>windows设置———系统——-存储</p><p>这里会告诉你的c盘空间用在哪些方面了，比如安装了哪些应用，有哪些临时文件占了空间。</p><p>我们需要做的就是，把占空间大又不常用的软件卸载；删除无用的文档内容等等。</p><p><img src="https://www.zhoudongqi.com/medias/picture/mix/9.png" alt="9"></p><h2 id="360清理释放c盘"><a href="#360清理释放c盘" class="headerlink" title="360清理释放c盘"></a>360清理释放c盘</h2><p>一般人可能都说360很多弹窗广告什么的，但是我电脑全程都是没广告的，出现的第一次你设置好不再弹出等等即可。</p><p>360有很多实用功能，我通常后台打开火绒安全软件，需要360了再打开360，平时都是关闭状态。</p><p><img src="https://www.zhoudongqi.com/medias/picture/mix/11.png" alt="11"></p><p><img src="https://www.zhoudongqi.com/medias/picture/mix/12.png" alt="12"></p><p><strong>2024</strong></p><p>360软件里面新出了一个360清理pro的功能，挺好用的。</p><h2 id="分区助手"><a href="#分区助手" class="headerlink" title="分区助手"></a>分区助手</h2><p><a href="https://pc.qq.com/detail/3/detail_6203.html">https://pc.qq.com/detail/3/detail_6203.html</a></p><p><img src="https://www.zhoudongqi.com/medias/picture/mix/13.png" alt="13"></p><p>通常我们手动分区去增加c盘空间，可能会无法扩展卷</p><p>分区助手可以实现很多功能</p><p>1-把你d盘多余的空间分给c盘</p><p>2-从c盘转移文件夹或者安装的应用到其他盘符</p><p>​    我们通常默认把软件安装到c盘，事实上除了一些编程环境等如jave，node，git等，像qq，游戏这些软件我们最好安装在其他盘。</p><p>​    所以我们可以把从前安装在c盘的东西，转移到其他盘符。</p><p>3-磁盘碎片整理，擦除硬盘，磁盘测速等等等等。</p>]]></content>
      
      
      <categories>
          
          <category> 实用小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 清理C盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语系统基本语法-英语兔</title>
      <link href="archives/617cb552.html"/>
      <url>archives/617cb552.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://zhoudongqi.com/medias/picture/english/1.png" alt="1"></p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3_05_非父子通信&amp;生命周期</title>
      <link href="archives/55cb27f3.html"/>
      <url>archives/55cb27f3.html</url>
      
        <content type="html"><![CDATA[<h2 id="非父子通信"><a href="#非父子通信" class="headerlink" title="非父子通信"></a>非父子通信</h2><h3 id="Provide和Inject注入"><a href="#Provide和Inject注入" class="headerlink" title="Provide和Inject注入"></a>Provide和Inject注入</h3><p>provide：提供；inject：注入</p><p>应用场景：</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1226.png" alt="1226"></p><p>当有上图中这么多组件，加入要app传给banner，或者banner传给list，需要怎么办呢？</p><p>1-通过父子通信一个一个传递，可行但是非常麻烦，而且很难维护管理，因为这个组件树可能很深。</p><p>2-专门的状态管理库，如vuex/pinna，这个后面几天会学</p><p>3-就是现在所学的，provide/inject</p><p>4-事件总线</p><p><strong>了解provide/inject（实际开发用的较少，一般都是通过vuex和pinna）</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1227.png" alt="1227"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1228.png" alt="1228"></p><p>基本使用就是在父亲组件（只要在使用者的上层即可）写入provide，在使用者也就是子组件中写入inject即可。</p><p>缺点：数据是写死的，实际上一般数据是从服务器到达data内，然后再到达provide</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1229.png" alt="1229"></p><p>所以我们需要函数写法，让provide能取到data中的数据</p><blockquote><p>如果是对象写法，this是取不到data的数据的，函数写法可以因为vue底层和给methods一样给provide函数做了this指向修改绑定。</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1230.png" alt="1230"></p><p>这个响应式数据的意思就是，当父级的provide给子级的数据发生变化，子级里面使用到这个数据的地方会不会自动改变。（你直接修改代码发现变了只是因为浏览器刷新了一遍，你需要在不刷新的情况下通过事件变化数据来验证）</p><p>1-为什么computed用箭头函数，因为只有箭头函数沿用上一级的this，才能取到names</p><p>2-如上如果让子组件中接收数据的length（这个length已经是开辟了新的空间）发生变化，父组件provide中的数据是不变化的，因为改的不是同一个变量。</p><h3 id="事件总线eventbus"><a href="#事件总线eventbus" class="headerlink" title="事件总线eventbus"></a>事件总线eventbus</h3><p>bus在编程里面是总线的意思</p><p>为什么需要事件总线？</p><p>因为provide和inject只能实现有祖先层级关系的组件中通信，属于最上图的app传给banner，如果是banner传给list，就需要事件总线（当然状态管理库vuex/pinna也可以）</p><p>事件总线在最基本的父子通信中也可以使用，看起来写法似乎更简单，但是不推荐，因为不利于维护管理，一般只有跨层级较多间的组件通信才使用。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1231.png" alt="1231"></p><p>coderwhy老师在高级中教了自己怎么封装了事件总线的库，我看的是pink老师的高级，所以没学。</p><p>在这里我只学习hy-event-store库中事件总线的使用。</p><p>步骤：</p><p>1-npm install hy-event-store  安装这个库（王红元coderwhy老师自己写的库）</p><blockquote><p>我很少用new这种东西，所以不太熟悉类</p><p>类是对象的抽象,而对象是类的具体实例</p><p>JavaScript类就是一个可以创建很多相似对象的函数，也就是我们学的构造函数</p><p>Object（）函数就是JavaScript自带的构造函数，也就是JavaScript自带的一个“类”</p><p>用“类”创建的对象就是“实例”</p><p>如果一个创建了2个对象，那么他就有两个实例</p></blockquote><p>2-为什么有的导入import后面加大括号，有的不加？</p><p><a href="https://blog.csdn.net/qq_37388085/article/details/121860660%E8%BF%99%E4%B8%AA%E4%B8%9C%E8%A5%BF%E5%9C%A8%E6%A1%86%E6%9E%B6%E5%89%8D%E7%BD%AE%E8%AF%BE%E5%AD%A6%E8%BF%87%EF%BC%8C%E6%88%91%E5%BF%98%E8%AE%B0%E4%BA%86%E3%80%82">https://blog.csdn.net/qq_37388085/article/details/121860660这个东西在框架前置课学过，我忘记了。</a></p><p>默认导出的就可以不加括号，一个文件中只能有一个默认导出。</p><p>3-创建utils文件夹，创建一个js文件来存储需要从当前库导出的类。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> HYEventBus <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'hy-event-store'</span><span class="token keyword">const</span> eventBus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HYEventBus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> eventBus<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.1导入类HYEventBus，这个名字是固定的，就相对于 new object的object，是王红元老师自己写的一个类</p><p>3.2然后通过这个类创建一个eventBus对象，这个对象名字就是我们可以随便写的，自己记住是什么就好了</p><p>3.3导出eventBus这个事件总线对象，供其他组件使用</p><p>4.1其他组件使用eventBus这个类，发出者通过emit方法</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">   eventBus<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">"whyEvent"</span><span class="token punctuation">,</span> <span class="token string">"why"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">1.88</span><span class="token punctuation">)</span><span class="token comment">//通过emit方法发出通信，第一个为自定义事件名字，后面的是变量</span><span class="token comment">//注意你这个语句得写在export default&#123;&#125;里面，那么其他组件才能接收到，你直接写在script里，但是没有导出，那么其他组件是接收不到的，只在当前页面运行了一遍语句。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>4.2事件监听者通过on方法</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token comment">// fetch()</span>   <span class="token comment">// 事件监听</span>   eventBus<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"whyEvent"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> height</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"whyEvent事件在app中监听"</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> height<span class="token punctuation">)</span>     <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">name:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, age:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>age<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, height:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>height<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>created和unmounted是生命周期，后面会学到，这里知道监听写在这个里面即可。</p><p><strong>事件总线事件的取消</strong></p><p>应用场景:当我们给一个组件添加了事件总线的事件监听，但是当这个组件有时候需要被销毁也就是不需要这个组件显示了的时候，这个监听事件当然也要被销毁移除掉最好。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>   methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>     <span class="token function">whyEventHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"whyEvent在category中监听"</span><span class="token punctuation">)</span>     <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>   <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     eventBus<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"whyEvent"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>whyEventHandler<span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>   <span class="token function">unmounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"category unmounted"</span><span class="token punctuation">)</span>     eventBus<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">"whyEvent"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>whyEventHandler<span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>this.whyEventHandler就是事件监听后会执行的函数，在eventBus.off销毁的时候，需要指明销毁函数。</p><p>（这个东西是王红元老师封装好的库，和mitt（很久没维护了）这些常用的事件总线库是一样的，我们只需要知道怎么用，它要求的语法是怎么写，我们就怎么写记住就好）</p><p><strong>组件化知识补充</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1232.png" alt="1232"></p><p>最重要的也是必须会的是组件的生命周期和组件中的ref引用，其他的了解即可。</p><p>tips：相对路径符号</p><p>/代表整个电脑或者服务器的根目录</p><p>./代表当前文件相对路径下</p><p>../为上一层</p><p>@为src文件下(vue官方设置的别名)</p><p>那么上上层如何取到呢？</p><p>答：  ../../即可，上上上层就是../../../</p><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1233.png" alt="1233"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1234.png" alt="1234"></p><p>重要，必须理解，不然你根本无法判断什么时候在做什么。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1235.png" alt="1235"></p><h2 id="refs的使用"><a href="#refs的使用" class="headerlink" title="$refs的使用"></a>$refs的使用</h2><p>refs:References引用的意思</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1236.png" alt="1236"></p><p>应用场景：当我们在一些特殊情况，需要拿到元素dom对象或者子组件实例</p><p>注意：因为vue是声明式编程框架，我们千万不要在vue中去出现原生的js的dom操作语句，比如queryselector什么的，虽然也是可编译执行的，但是那就违背了框架的初衷。</p><p>那么实在要拿到这个dom对象或者子组件实例怎么办呢？又不能写原生dom语句。</p><p>答：使用vue框架提供的ref属性</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>h2 ref<span class="token operator">=</span><span class="token string">"title"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span> <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">"&#123; color: titleColor &#125;"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> message <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>    <span class="token operator">&lt;</span>button ref<span class="token operator">=</span><span class="token string">"btn"</span> @click<span class="token operator">=</span><span class="token string">"changeTitle"</span><span class="token operator">></span>修改title<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>banner ref<span class="token operator">=</span><span class="token string">"banner"</span><span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">import</span> Banner <span class="token keyword">from</span> <span class="token string">"./Banner.vue"</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>     components<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      Banner    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        message<span class="token operator">:</span> <span class="token string">"Hello World"</span><span class="token punctuation">,</span>        titleColor<span class="token operator">:</span> <span class="token string">"red"</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token function">changeTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1.不要主动的去获取DOM, 并且修改DOM内容</span>        <span class="token comment">// this.message = "你好啊, 李银河!"</span>        <span class="token comment">// this.titleColor = "blue"</span>        <span class="token comment">// 2.获取h2/button元素</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>title<span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>btn<span class="token punctuation">)</span>        <span class="token comment">// 3.获取banner组件: 组件实例</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>banner<span class="token punctuation">)</span>                <span class="token comment">// 3.1.在父组件中可以主动的调用子组件的对象方法</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>banner<span class="token punctuation">.</span><span class="token function">bannerClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">// 3.2.获取banner组件实例, 获取banner中的根元素（也就是最外层的div）</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>banner<span class="token punctuation">.</span>$el<span class="token punctuation">)</span>        <span class="token comment">// 3.3.如果banner template是多个根, 拿到的是第一个node节点</span>        <span class="token comment">// 注意: 开发中不推荐一个组件的template中有多个根元素</span>        <span class="token comment">// console.log(this.$refs.banner.$el.nextElementSibling)</span>        <span class="token comment">// 4.组件实例还有两个属性(了解):</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$parent<span class="token punctuation">)</span> <span class="token comment">// 获取父组件</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$root<span class="token punctuation">)</span> <span class="token comment">// 获取根组件 </span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style scoped<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1-给需要获取的元素或者组件加上属性ref</p><p>2-vue会把所有有ref属性的dom放到一个$refs的对象里面</p><p>3-获取的如果是组件，那么就是一个代理实例对象</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1237.png" alt="1237"></p><p>4-所以我们可以通过这个实例对象去调用子组件拥有的方法</p><p><strong>$parent和$root了解即可</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1238.png" alt="1238"></p><h2 id="动态组件"><a href="#动态组件" class="headerlink" title="动态组件"></a>动态组件</h2><p>需求：点击tab栏实现组件显示的切换</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1239.png" alt="1239"></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"tabs"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>template v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(item, index) in tabs"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"item"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>button <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"&#123; active: currentTab === item &#125;"</span>                 @click<span class="token operator">=</span><span class="token string">"itemClick(item)"</span><span class="token operator">></span>          <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"view"</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token number">1.</span>第一种做法<span class="token operator">:</span> v<span class="token operator">-</span><span class="token keyword">if</span>进行判断逻辑<span class="token punctuation">,</span> 决定要显示哪一个组件 <span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>template v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"currentIndex === 0"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>home<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>home<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>      <span class="token operator">&lt;</span>template v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"currentIndex === 1"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>about<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>about<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>      <span class="token operator">&lt;</span>template v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"currentIndex === 2"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>category<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>category<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span> <span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token number">2.</span>第二种做法<span class="token operator">:</span> 动态组件 component <span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> is中的组件需要来自两个地方<span class="token operator">:</span> <span class="token number">1.</span>全局注册的组件 <span class="token number">2.</span>局部注册的组件 <span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>component <span class="token operator">:</span>is<span class="token operator">=</span><span class="token string">"tabs[currentIndex]"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>component<span class="token operator">></span> <span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span>component name<span class="token operator">=</span><span class="token string">"why"</span>                  <span class="token operator">:</span>age<span class="token operator">=</span><span class="token string">"18"</span>                 @homeClick<span class="token operator">=</span><span class="token string">"homeClick"</span>                 <span class="token operator">:</span>is<span class="token operator">=</span><span class="token string">"currentTab"</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>component<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">'./views/Home.vue'</span>  <span class="token keyword">import</span> About <span class="token keyword">from</span> <span class="token string">'./views/About.vue'</span>  <span class="token keyword">import</span> Category <span class="token keyword">from</span> <span class="token string">'./views/Category.vue'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    components<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      Home<span class="token punctuation">,</span>      About<span class="token punctuation">,</span>      Category    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        tabs<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"home"</span><span class="token punctuation">,</span> <span class="token string">"about"</span><span class="token punctuation">,</span> <span class="token string">"category"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token comment">// currentIndex: 0</span>        currentTab<span class="token operator">:</span> <span class="token string">"home"</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token function">itemClick</span><span class="token punctuation">(</span><span class="token parameter">tab</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>currentTab <span class="token operator">=</span> tab      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function">homeClick</span><span class="token punctuation">(</span><span class="token parameter">payload</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"homeClick:"</span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style scoped<span class="token operator">></span>  <span class="token punctuation">.</span>active <span class="token punctuation">&#123;</span>    color<span class="token operator">:</span> red<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关键就是直接写component标签，里面有一个is属性，如下等于哪个组件名字就显示哪一个组件</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>component name<span class="token operator">=</span><span class="token string">"why"</span>                 <span class="token operator">:</span>age<span class="token operator">=</span><span class="token string">"18"</span>                @homeClick<span class="token operator">=</span><span class="token string">"homeClick"</span>                <span class="token operator">:</span>is<span class="token operator">=</span><span class="token string">"currentTab"</span><span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>component<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中组件中父传子传值和通信和原先是一样的，如上代码的传值与自定义事件监听。</p><h2 id="认识Keep-alive"><a href="#认识Keep-alive" class="headerlink" title="认识Keep-alive"></a>认识Keep-alive</h2><p>目的：提高性能，和保存数据</p><p>为什么？</p><p>1- 提高性能：如上一个tab动态组件切换案例，当home组件切换为about组件，home组件其实会经历unmounted被销毁了，当重新切换为home又会重新创建，如果是需要频繁切换，无疑会增加性能损耗。</p><p>所以我们可以让某一个组件在没被使用和显示时也保持存活。</p><p>2-保存数据：如about组件中在使用的时候data中用户使用有一些数据进行了变动，但是切换到about再切换为about，那么这些数据将会消失回到默认状态而不是用户使用后的状态。</p><p><strong>用法</strong></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"tabs"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>template v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(item, index) in tabs"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"item"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>button <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"&#123; active: currentTab === item &#125;"</span>                 @click<span class="token operator">=</span><span class="token string">"itemClick(item)"</span><span class="token operator">></span>          <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"view"</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> include<span class="token operator">:</span> 组件的名称来自于组件定义时name选项  <span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span>keep<span class="token operator">-</span>alive include<span class="token operator">=</span><span class="token string">"home,about"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>component <span class="token operator">:</span>is<span class="token operator">=</span><span class="token string">"currentTab"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>component<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>keep<span class="token operator">-</span>alive<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在需要保持存活的组件标签外加上keep-alive标签即可</p><p><strong>问题</strong>：在动态组件里，我想有的存活有的不存活怎么办呢？</p><p>使用如上代码的include属性，只有在include内有名字的组件才保持存活。注意这里include识别的不是当前组件导入的组件名称，而是以需要存活的子组件内的name为准，如下写法。</p><p>name:’home’</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token string">"home"</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        counter<span class="token operator">:</span> <span class="token number">0</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"home created"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">unmounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"home unmounted"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 对于保持keep-alive组件, 监听有没有进行切换</span>    <span class="token comment">// keep-alive组件进入活跃状态</span>    <span class="token function">activated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"home activated"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token comment">//不活跃状态</span>    <span class="token function">deactivated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"home deactivated"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>keep-alive的一些属性</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1241.png" alt="1241"></p><p>include就是需要存活的，exclude就是里面写了的不存活其他的存活。 </p><p><strong>需求补充：</strong></p><p>当我们保持存活后，home到about或者其他组件等动作就无法提供生命周期的created和unmounted函数监听到了，那么怎么办呢?</p><p>vue专门提供了另外两个方法</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// keep-alive组件进入活跃状态</span><span class="token function">activated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"home activated"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">//不活跃状态</span><span class="token function">deactivated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"home deactivated"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1242.png" alt="1242"></p><h2 id="Webpack代码分包"><a href="#Webpack代码分包" class="headerlink" title="Webpack代码分包"></a>Webpack代码分包</h2><p>一般npm run build即npm vue-cli-service bulid会通过webpack给代码打包，然后生成dist文件夹，然后我们再把dist部署到服务器供用户使用。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1243.png" alt="1243"></p><p>map文件是一种映射文件，给我们线上调试告诉我们哪一行代码出错的，现在先忽略，后续深入工程讲webpack高级会学习。</p><p><strong>为什么学习这个东西？为了首屏渲染速度</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1244.png" alt="1244"></p><p>如上，chunk就是组块分包的意思，vendors就是供应商，所以chunk.vendors就是保存了我们第三方库的js如vue.js和原先使用的第三方事件总线库hy-event-store.js；  app.xxxx就是我们自己写的js</p><p><strong>为什么有首屏渲染速度的问题？</strong></p><p>cw老师说后续ssr渲染课程也会学到（我先学完vue3找个实习后面再学这个），这里大概意思就是：</p><p>像上面的动态组件案例，当我们写了home，about，category很多组件，用户可以通过tab栏进行切换，但是用户在第一次加载的时候，只加载home页面，那么因为webpack把所有代码打包为了app.xx.js，用户就需要下载很多home页用不到的js代码，影响了加载速度。     所以我们需要分包。</p><p><strong>如何分包？</strong></p><p>工厂函数：专门生成某种对象的函数。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1245.png" alt="1245"></p><p>在导入的时候通过import函数导入即可，它可以异步导入还可以让webpack进行分包处理（这个函数返回的是一个promise对象）</p><p><strong>那么在普通的组件内是如何进行分包的呢？</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1246.png" alt="1246"></p><pre class="line-numbers language-js" data-language="js"><code class="language-js">工厂写法：<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> defineAsyncComponent <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>  <span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">'./views/Home.vue'</span>  <span class="token keyword">import</span> About <span class="token keyword">from</span> <span class="token string">'./views/About.vue'</span>  <span class="token comment">// import Category from './views/Category.vue'</span>  <span class="token comment">// const Category = import("./views/Category.vue")</span>  <span class="token keyword">const</span> AsyncCategory <span class="token operator">=</span> <span class="token function">defineAsyncComponent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">"./views/Category.vue"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1-vue为我们提供了一个defineAsyncComponent 定义异步组件的方法，我们先导入</p><p>2-通过这个方法声明异步组件（import函数导入返回一个promise对象）</p><p>3-注册组件</p><p>对象写法（少见，了解即可）</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1247.png" alt="1247"></p><h2 id="v-model的本质"><a href="#v-model的本质" class="headerlink" title="v-model的本质"></a>v-model的本质</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html">app.vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.input v-model  普通应用本质其实就是监听事件然后赋值--></span>    <span class="token comment">&lt;!-- &lt;input v-model="message">    &lt;input :value="message" @input="message = $event.target.value"> --></span>    <span class="token comment">&lt;!-- 2.组件的v-model: 默认modelValue --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>counter</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>appCounter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>counter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>counter</span> <span class="token attr-name">:modelValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>appCounter<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">@update:</span>modelValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>appCounter = $event<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>counter</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 3.组件的v-model: 自定义名称counter --></span>    <span class="token comment">&lt;!-- &lt;counter2 v-model:counter="appCounter" v-model:why="appWhy">&lt;/counter2> --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">import</span> Counter <span class="token keyword">from</span> <span class="token string">'./Counter.vue'</span>  <span class="token keyword">import</span> Counter2 <span class="token keyword">from</span> <span class="token string">'./Counter2.vue'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    components<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      Counter<span class="token punctuation">,</span>      Counter2    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        message<span class="token operator">:</span> <span class="token string">"Hello World"</span><span class="token punctuation">,</span>        appCounter<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>        appWhy<span class="token operator">:</span> <span class="token string">"coderwhy"</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html">Counter.vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>Counter: &#123;&#123; modelValue &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeCounter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改counter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      modelValue<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        type<span class="token operator">:</span> Number<span class="token punctuation">,</span>        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">0</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    emits<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"update:modelValue"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token function">changeCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"update:modelValue"</span><span class="token punctuation">,</span> <span class="token number">999</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html">counter2.vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>Counter: &#123;&#123; counter &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeCounter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改counter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- why绑定 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>why: &#123;&#123; why &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeWhy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改why的值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      counter<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        type<span class="token operator">:</span> Number<span class="token punctuation">,</span>        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">0</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      why<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        type<span class="token operator">:</span> String<span class="token punctuation">,</span>        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">""</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    emits<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"update:counter"</span><span class="token punctuation">,</span> <span class="token string">"update:why"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token function">changeCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"update:counter"</span><span class="token punctuation">,</span> <span class="token number">999</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function">changeWhy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"update:why"</span><span class="token punctuation">,</span> <span class="token string">"kobe"</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1248.png" alt="1248"></p><h2 id="认识Mixin（vue2常用，vue3已经不用）"><a href="#认识Mixin（vue2常用，vue3已经不用）" class="headerlink" title="认识Mixin（vue2常用，vue3已经不用）"></a>认识Mixin（vue2常用，vue3已经不用）</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1249.png" alt="1249"></p><p>应用场景: 如很多个组件有相同的optionsapi，那么就可以把相同的代码抽取到一个mixins.js文件内，然后复用即可。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1250.png" alt="1250"></p><p>如上，通过mixins:[xxxxx]，就导入了mixin里面的js，但是当混入的js中有data（）等，自己组件又写了data（）等会怎么样呢？</p><p>它们会合并，如果有命名冲突，则保留组件内的</p><p><strong>全局混入：所有组件都需要使用混入的js</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1251.png" alt="1251"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3_04_组件间的通信与插槽</title>
      <link href="archives/4e61e81f.html"/>
      <url>archives/4e61e81f.html</url>
      
        <content type="html"><![CDATA[<p><strong>vue.config.js</strong></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> defineConfig <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@vue/cli-service'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  transpileDependencies<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  configureWebpack<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    resolve<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 配置路径别名</span>      <span class="token comment">// @是已经配置好的路径别名: 对应的是src路径</span>      alias<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token string">"utils"</span><span class="token operator">:</span> <span class="token string">"@/utils"</span>       <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此文件中可以添加webpack的配置，如上代码，写入一个对象即可</p><p>其中alias是为路径起别名，如上配置后，在其他代码页面中路径写utils那么就是src下的utils</p><blockquote><p>@是内置的别名，代表项目src下的路径</p></blockquote><p> <strong>jsconfig文件的作用（了解）</strong></p><p>tips:其中vue.config.js是配置webpack的，当你对vue给你配置的webpack等打包配置不满意，你就可以在这里自己配置。</p><p>1-jsconfig的作用是为了让vscode我们的编辑器，更好的给我们代码提示。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1188.png" alt="1188"></p><blockquote><p>这里的@是什么意思？是内置@为src的底层代码吗？</p><p>​    不是的，我脑子不好使，这里想了半天；</p><p>​    @的内置底层代码肯定不是在这，而是在vue源码里面，这里只是个配置文件，</p></blockquote><blockquote><p>众所周知jsconfig的作用是为了让vscode我们的编辑器，更好的给我们代码提示，那这里的paths是什么作用？</p><p>​    当我们在vue.config.js中设置了别名，但是当我们写代码路径的时候，vscode并不知道我们设置了别名，如我们写utils，vscode就不会提示utils文件下有哪些子文件，导致我们需要自己手动输入子文件名称。</p><p>​    当我们在下图中的path告诉vscode，utils代表什么路径，它就会提示utils有哪些子文件了。</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1189.png" alt="1189"></p><pre class="line-numbers language-jsconfig.json" data-language="jsconfig.json"><code class="language-jsconfig.json">&#123;  &quot;compilerOptions&quot;: &#123;    &quot;target&quot;: &quot;es5&quot;,    &quot;module&quot;: &quot;esnext&quot;,    &quot;baseUrl&quot;: &quot;.&#x2F;&quot;,    &quot;moduleResolution&quot;: &quot;node&quot;,    &quot;paths&quot;: &#123;      &quot;@&#x2F;*&quot;: [        &quot;src&#x2F;*&quot;      ]    &#125;,    &quot;lib&quot;: [      &quot;esnext&quot;,      &quot;dom&quot;,      &quot;dom.iterable&quot;,      &quot;scripthost&quot;    ]  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>jsconfig.json我们一般不修改，使用默认即可。</strong></p><p>如上代码，target是告诉vscode当前项目代码最终打包为es5；</p><p>module是让当前模块化语法规则遵循最新；</p><p>baseurl就是当前项目所有页面代码的路径默认./是算从哪里开始（如代码paths中的src就是以此json文件为相对路径开始）;</p><p>lib就是告诉vscode我写的代码可能包含哪些语法，便于vscode给予我们代码提示。</p><blockquote><p>修改配置文件后，需要重新运行项目才能生效，修改代码不需要重新运行会热更新。</p></blockquote><p><strong>为什么main.js的template无法编译？</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createApp <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span> <span class="token comment">// 不支持template选项</span><span class="token comment">// import &#123; createApp &#125; from 'vue/dist/vue.esm-bundler' // compile代码</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span> <span class="token comment">// vue-loader: template -> createVNode过程</span><span class="token keyword">import</span> <span class="token string">"./utils/abc/cba/nba/index"</span><span class="token comment">/** * 1.jsconfig.json的演练 *   作用: 给VSCode来进行读取, VSCode在读取到其中的内容时, 给我们的代码更加友好的提示. * 2.引入的vue的版本 *   默认vue版本: runtime, vue-loader完成template的编译过程 *   vue.esm-bundler: runtime + compile, 对template进行编译 *  * 3.补充: 单文件Vue style是有自己的作用域 *   style -> scoped * 4.补充: vite创建一个Vue项目 */</span><span class="token comment">// 元素 -> createVNode: vue中的源码来完成</span><span class="token comment">// 导入的vue源码必须包含compile的代码</span><span class="token comment">// const App = &#123;</span><span class="token comment">//   template: `&lt;h2>Hello Vue3 App&lt;/h2>`,</span><span class="token comment">//   data() &#123;</span><span class="token comment">//     return &#123;&#125;</span><span class="token comment">//   &#125;</span><span class="token comment">// &#125;</span><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上代码，如果我们不是导入的app对象组件，而是在本页面自己const声明写根组件的app对象，那么对象里面就需要用到template，就会出现如下问题</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1190.png" alt="1190"></p><p>1-为什么呢？</p><p>因为从vue导入的creatApp方法无法解析编译template，需要从vue/dist/vue.esm-bundler导入</p><p>2-为什么呢？如下是元素转换为真实dom的过程</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1191.png" alt="1191"></p><p>我在上一篇博客中学习了diff算法，就知道了虚拟dom和真实dom，但是我们只知道元素如div会转换为vnode，然后虚拟节点vnode可以转换为虚拟dom或者转换为其他平台的控件什么的。</p><p>但是在元素如div转换为虚拟vnode的时候，有一个过程我不知道，那就是上图的通过compile编译为createVNode()函数,再变成虚拟vnode。p><p>3-所以导入的vue源码，必须包含能compile的代码才能解析template；vue/dist/vue.esm-bundler才有compile，vue里面是没有compile的；</p><p>4-那么为什么我在app.vue或者其他vue组件内，导入vue就行了，也没有compile啊？</p><p>因为在其他组件中（通常是.vue后缀），其实不是通过导入的vue源码实现编译的（它也实现不了，因为没有compile编译功能），而是通过webpack或者其他打包软件里面的vue-loader来实现编译的。（框架前置课学了，webpack打包里面有什么css-loder等等，我也记不太清了但是知道有这种东西）</p><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>vscode的vue插件，可以给我们代码提示，提升开发效率</p><p>1-vetur：大家在使用vue2的时候很受欢迎，也支持vue3，但是在编写vue3的一些新特性中会提示语法错误。</p><p>2-volar（Vue Language Features）：现在2022基本上都vue3开发，使用这个即可。</p><p>3-path intellisense，给予更好的代码提示</p><h2 id="组件中style的作用域"><a href="#组件中style的作用域" class="headerlink" title="组件中style的作用域"></a>组件中style的作用域</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1192.png" alt="1192"></p><p>众所周知，webpack是从main.js为入口开始打包代码（我们也可以在webpack配置里指定出入口），然后main.js里面有根组件，根组件下有一个组件树，它们都是.vue文件，都有自己独自的style，那它们是怎么生效的呢？</p><blockquote><p>如上图结构，不管是根组件app.vue还是AppHeader.vue和AppContent.vue,只要导入了，不分是谁注册了谁，它们写的style都是全局的，所有组件都生效。</p></blockquote><p>如果是这样的话，那么就十分难以维护，如写一个p标签的css，不同组件肯定需要不同的样式，那么最后必然样式冲突，我们自己都不知道生效的谁。怎么办呢？</p><blockquote><p>在各自组件的style中加上scoped属性即可把当前css作用域限定在当前页面中，它是怎么实现的呢？</p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">p</span><span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1193.png" alt="1193"></p><p>底层原理就是，当我们加上scoped后，其实vue自动帮我们给css需要生效的标签加上了一个独有属性data-v-xxxxx，把我们的css也多加了一层属性选择（交集选择器）。</p><p>scope（范围）</p><h2 id="快捷生成代码片段"><a href="#快捷生成代码片段" class="headerlink" title="快捷生成代码片段"></a>快捷生成代码片段</h2><p><a href="https://snippet-generator.app/">https://snippet-generator.app/</a></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1194.png" alt="1194"></p><p>我们原先刚学vue的时候也设置了代码片段，生成键也是vue，不会和这个冲突吗？</p><blockquote><p>原先我们配置的是html.json，现在配置的是vue文件的json，生效对应的文件不同，自然不会冲突。</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1195.png" alt="1195"></p><h2 id="vue项目的vite创建"><a href="#vue项目的vite创建" class="headerlink" title="vue项目的vite创建"></a>vue项目的vite创建</h2><p>方式一：我们当前常用的是通过vue的脚手架，也就是VueCLI通过命令 vue create demo ，就能创建一个名字为demo的项目（底层是基于webpack打包）</p><p>方式二：npm init vue @latest，npm就自动帮我们安装了一个本地工具：create-vue，可以通过create-vue为我们生成项目。（基于vite打包，是未来趋势，主要因为打包的很快，他不会自动安装依赖，需要我们自己npm install）</p><blockquote><p>注意：第一次接触到npm init是在框架前置课中学webpack，这个命令是生成package.json的，只有先npm init生成了package.json，然后install webpack才会生成node_modules文件夹</p><p>怎么package.json还在自己生成？不是自动有吗？</p><p>这是我原先单独学webpack的时候需要的，我们通过vueCLI生成的项目是自动有package.json的</p><p>其中npm安装了vueCLI，也就自动有了webpack功能，就像方式二安装了create-vue，也就自动有了vite</p></blockquote><blockquote><p>方式二这个项目没有名字？</p><p>我们通过命令后，它会询问一些问题，名字，需要的东西如ty，router等等，我们填上去即可</p></blockquote><p>这个方式我现在只是了解，在我学完小程序框架和vue几个项目后，会详细学习vite并深入工程化学习。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1196.png" alt="1196"></p><p>注意我们运行项目的时候，这里是npm run vite，通过vite打包，这个在框架前置课也学了。</p><p>我们原先通过脚手架生成的项目一般是serve，通过webpack打包</p><h2 id="组件间的通信"><a href="#组件间的通信" class="headerlink" title="组件间的通信"></a>组件间的通信</h2><h3 id="vue组件的嵌套关系"><a href="#vue组件的嵌套关系" class="headerlink" title="vue组件的嵌套关系"></a>vue组件的嵌套关系</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1197.png" alt="1197"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1198.png" alt="1198"></p><p>通俗来讲，比如一个列表组件，我们在多处使用，但是不是显示同样的数据，这个数据如何处理传递。就是学习组件通信的原因。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1199.png" alt="1199"></p><h3 id="父组件传递子组件"><a href="#父组件传递子组件" class="headerlink" title="父组件传递子组件"></a>父组件传递子组件</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1201.png" alt="1201"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1200.png" alt="1200"></p><p>如上图，父组件可以通过给予组件属性，传递数据到子组件，子组件可以通过props数组接收数据，并在插值语法中使用。</p><p>数组语法的弊端：</p><p>1-没有默认值</p><p>2-没有类型规范检查</p><p><strong>所以我们需要学props的对象写法</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1202.png" alt="1202"></p><p>如果我们在使用组件的时候，父组件没有传递值过来，默认的值就会显示上去。</p><p>required的为必传项，不传就会报警告，所以一般必传项没有默认值，上图中只是一种语法参考。</p><p>type一般有：string，number，boolean，arry，object，date，function，symbol</p><p>问题：如下我不管怎么传，都提示我传过来的是字符串，为什么？</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;AppHeader name&#x3D;&quot;zdq&quot; gender&#x3D;&quot;man&quot; age&#x3D;&quot;20&quot;&gt;&lt;&#x2F;AppHeader&gt;&lt;AppHeader name&#x3D;&quot;tyl&quot; gender&#x3D;&quot;man&quot; age&#x3D;&quot;21&quot;&gt;&lt;&#x2F;AppHeader&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>解决：</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;AppHeader name&#x3D;&quot;zdq&quot; gender&#x3D;&quot;man&quot; :age&#x3D;&quot;20&quot;&gt;&lt;&#x2F;AppHeader&gt;&lt;AppHeader name&#x3D;&quot;tyl&quot; gender&#x3D;&quot;man&quot; :age&#x3D;&quot;21&quot;&gt;&lt;&#x2F;AppHeader&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>加冒号的，说明后面的是一个变量或者表达式；没加冒号的后面就是对应的字符串字面量！</p><p><a href="https://blog.csdn.net/fifteen718/article/details/80329558">https://blog.csdn.net/fifteen718/article/details/80329558</a></p><p><strong>细节：对象类型的其他写法</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1203.png" alt="1203"></p><p>如果父组件传递过来的是一个对象或者数组，那么默认值我们必须写成如上的一个函数，函数再返回对象</p><p>至于为什么就是一些底层机制了，这里不研究了。</p><blockquote><p>注意：这里父组件给子组件传递了一个对象或数据后，对象在子组件的props内被接收，它并没有创建一个新对象，而是和父组件共用同一个对象，也就是指向同一个引用。</p><p>所以子组件修改了这个对象后，父组件内的此对象也会被修改</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"> <span class="token comment">// 2.props对象语法(必须掌握)</span>  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"我是默认name"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    age<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Number<span class="token punctuation">,</span>      required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">0</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    height<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Number<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">2</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 重要的原则: 对象类型写默认值时, 需要编写default的函数, 函数返回默认值</span>    friend<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Object<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">"james"</span> <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    hobbies<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Array<span class="token punctuation">,</span>      <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span><span class="token string">"篮球"</span><span class="token punctuation">,</span> <span class="token string">"rap"</span><span class="token punctuation">,</span> <span class="token string">"唱跳"</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    showMessage<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"我是showMessage"</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1204.png" alt="1204"></p><p>意思就是在父组件传值的时候可以写小驼峰也可以写短横线，在子组件写props的时候必须小驼峰</p><h3 id="非props的attribute"><a href="#非props的attribute" class="headerlink" title="非props的attribute"></a>非props的attribute</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1205.png" alt="1205"></p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">  &lt;show-info name&#x3D;&quot;why&quot; :age&#x3D;&quot;18&quot; :height&#x3D;&quot;1.88&quot;address&#x3D;&quot;广州市&quot; abc&#x3D;&quot;cba&quot; class&#x3D;&quot;active&quot; &#x2F;&gt;这段代码对应上一段代码段<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>当我们在父组件赋值后，但是在子组件的props没有设置接收，那么就会添加到子组件的根节点中（也就是子组件中最外层的div，我写的时候子组件没写div结果是没被添加）</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1206.png" alt="1206"></p><p>当我们不希望继承，就可以在组件的script里禁用</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>   inheritAttrs<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果有多个根节点，那么就会报错，我们需要通过$attrs手动告诉它哪个div需要绑定</p><p>应用场景的也不知道，coderwhy老师讲了什么我先记下来，后续可能用到。</p><h3 id="子组件传递给父组件"><a href="#子组件传递给父组件" class="headerlink" title="子组件传递给父组件"></a>子组件传递给父组件</h3><p><strong>一般场景：子组件发生了一个事件，父组件需要响应。</strong><br><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1208.png" alt="1208"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1207.png" alt="1207"></p><p>1-如上是一个加减计数器，当子组件的“加”按钮被点击，会触发事件，然后事件会执行this.$emit（）方法，把当前事件传递到根组件中（别管咋来的，$开头一般都是内置的方法，它就是会这样传）</p><p>2-其中add为事件名称，可以随便写，我们在根组件对应即可，第二个是需要传递的参数，如上参数传到根组件，根组件对应响应的事件函数可以接收到count，然后声明使用</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">methods<span class="token operator">:</span><span class="token punctuation">&#123;</span>   <span class="token function">addBtnCkick</span><span class="token punctuation">(</span><span class="token parameter">count</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token keyword">this</span><span class="token punctuation">.</span>counter<span class="token operator">+=</span>count   <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>记住根组件这里的addBtnCkick可以接收到子组件的count的值，但是根组件写coun也可以，随便写什么名字，这里是接收值然后重新声明了一个coun变量，而不是直接把子组件的count拿过来用了。</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">methods<span class="token operator">:</span><span class="token punctuation">&#123;</span>   <span class="token function">addBtnCkick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token keyword">this</span><span class="token punctuation">.</span>counter<span class="token operator">+=</span>count   <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>     报错，因为根本不知道count是什么，并没有定义变量来接收子组件的count值     我们只是习惯把这个变量写的和子组件传递过来变量值的变量名相同，如count     正确如下： methods<span class="token operator">:</span><span class="token punctuation">&#123;</span>   <span class="token function">addBtnCkick</span><span class="token punctuation">(</span><span class="token parameter">count</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token keyword">this</span><span class="token punctuation">.</span>counter<span class="token operator">+=</span>count   <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>所以这里也必须写一个变量名，因为函数的形参其实就是一种变量的声明，作用域为这个函数作用域，你不写的话就是 没有参数，自然就报错</p></blockquote><p>3-然后在根组件写事件监听，监听这个add事件（和监听click什么的一样，只是click是浏览器用户操作事件，这个add是来自子组件的自定义事件）</p><p>4-最后执行上图的addbtnclick函数完成需要的响应。</p><p><strong>自定义事件的参数与验证</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1209.png" alt="1209"></p><p>一般验证很少用，这是vue3新增的，我们即使写，也只写数组写法（这样在根组件监听的时候有代码提示，而且如果两个组件不是一个人开发，另一个人可以通过emits数组快速找到这里有哪些自定义事件）</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>   <span class="token comment">// 1.emits数组语法</span>   emits<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"add"</span><span class="token punctuation">,</span><span class="token string">"sub"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>   <span class="token comment">// 2.emmits对象语法</span>   <span class="token comment">// emits: &#123;</span>   <span class="token comment">//   add: function(count) &#123;</span>   <span class="token comment">//     if (count &lt;= 10) &#123;</span>   <span class="token comment">//       return true</span>   <span class="token comment">//     &#125;</span>   <span class="token comment">//     return false</span>   <span class="token comment">//   &#125;</span>   <span class="token comment">// &#125;,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上写了emits数组后，在根组件监听这些自定义事件的时候，打一个a，vscode就会提示add，方便不同组件不同人开发时的使用。（否则另一个人不知道用的组件有哪些事件，还得去源码仔细看）</p><h3 id="组件通信案例"><a href="#组件通信案例" class="headerlink" title="组件通信案例"></a>组件通信案例</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1240.png" alt="1240"></p><p>报错：</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1210.png" alt="1210"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1211.png" alt="1211"></p><p>一定要注意代码规范，一个空格报错，找的头脑发热。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">TabControl.vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab-control<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(item, index) in titles<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab-control-item<span class="token punctuation">"</span></span>           <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; active: index === currentIndex &#125;<span class="token punctuation">"</span></span>           <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>itemClick(index)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>&#123;&#123; item &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      titles<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        type<span class="token operator">:</span> Array<span class="token punctuation">,</span>        <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span><span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        currentIndex<span class="token operator">:</span> <span class="token number">0</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    emits<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"tabItemClick"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token function">itemClick</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">=</span> index        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"tabItemClick"</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token selector">.tab-control</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.tab-control-item</span> <span class="token punctuation">&#123;</span>    <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.tab-control-item.active</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 700<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.tab-control-item.active span</span> <span class="token punctuation">&#123;</span>    <span class="token property">border-bottom</span><span class="token punctuation">:</span> 3px solid red<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html">App.vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.tab-control --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tab-control</span> <span class="token attr-name">:titles</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[<span class="token punctuation">'</span>衣服<span class="token punctuation">'</span>, <span class="token punctuation">'</span>鞋子<span class="token punctuation">'</span>, <span class="token punctuation">'</span>裤子<span class="token punctuation">'</span>]<span class="token punctuation">"</span></span>                  <span class="token attr-name">@tab-item-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tabItemClick<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment">&lt;!-- &lt;tab-control :titles="['流行', '最新', '优选']"/> --></span>    <span class="token comment">&lt;!-- 2.展示内容 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>&#123;&#123; pageContents[currentIndex] &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">import</span> TabControl <span class="token keyword">from</span> <span class="token string">'./TabControl.vue'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    components<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      TabControl    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        pageContents<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">"衣服列表"</span><span class="token punctuation">,</span> <span class="token string">"鞋子列表"</span><span class="token punctuation">,</span> <span class="token string">"裤子列表"</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>        currentIndex<span class="token operator">:</span> <span class="token number">0</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token function">tabItemClick</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"app:"</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">=</span> index      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：</strong></p><p><strong>第一：</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>     <span class="token function">itemClick</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">=</span> index       <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"tabItemClick"</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span>     <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是从TabControl组件中发出的自定义tabItemClick，自然只能在这个组件中标签中监听到，如下</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.tab-control --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tab-control</span> <span class="token attr-name">:titles</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[<span class="token punctuation">'</span>衣服<span class="token punctuation">'</span>, <span class="token punctuation">'</span>鞋子<span class="token punctuation">'</span>, <span class="token punctuation">'</span>裤子<span class="token punctuation">'</span>]<span class="token punctuation">"</span></span>                  <span class="token attr-name">@tab-item-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tabItemClick<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment">&lt;!-- &lt;tab-control :titles="['流行', '最新', '优选']"/> --></span>    <span class="token comment">&lt;!-- 2.展示内容 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>&#123;&#123; pageContents[currentIndex] &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你不能说给上述代码中的h1也加个tabItemClick自定义监听事件，根本监听不到。</p><p><strong>第二：</strong></p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;h1&gt;&#123;&#123; pageContents[currentIndex] &#125;&#125;&lt;&#x2F;h1&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们可以看到这里插值语法用的是变量currentIndex，而不是index，为什么呢？</p><p>因为index的作用域只在methods，它没有写在data中，是无法被外面直接使用的，否则会报错。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1212.png" alt="1212"></p><h2 id="插槽Slot"><a href="#插槽Slot" class="headerlink" title="插槽Slot"></a>插槽Slot</h2><h3 id="插槽的作用"><a href="#插槽的作用" class="headerlink" title="插槽的作用"></a>插槽的作用</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1213.png" alt="1213"></p><p>简而言之就是当我们自己封装一个组件，如上的导航组件，其他人使用的时候，可能要的效果与控件是不同的，所以我们不能写死一个地方是button或者input，而是留下一个slot插槽让使用者自己来决定。</p><h3 id="插槽的基本使用"><a href="#插槽的基本使用" class="headerlink" title="插槽的基本使用"></a>插槽的基本使用</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1214.png" alt="1214"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">message.vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; title &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>我是默认插槽内容, 哈哈哈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      title<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        type<span class="token operator">:</span> String<span class="token punctuation">,</span>        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"我是title默认值"</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上，当我们封装一个组件，可以把内容通过slot标签形成插槽，其中slot标签内可以写默认内容，也就是当使用者不插入东西的时候，就显示，如上的p标签；当使用者自己插入元素就会替换默认内容p标签。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.内容是button --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>show-message</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>哈哈哈<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>我是按钮元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>show-message</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.内容是超链接 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>show-message</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百度一下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>show-message</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 3.内容是一张图片 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>show-message</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@/img/kobe02.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>show-message</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 4.内容没有传递 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>show-message</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>show-message</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">import</span> ShowMessage <span class="token keyword">from</span> <span class="token string">'./ShowMessage.vue'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    components<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      ShowMessage    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上是使用者插槽的语法，我们在组件标签内写入需要插入的一个元素即可（这里只有一个最基本的插槽）</p><p>如果我们有多个元素对应多个插槽，那么这些元素不会被逐个对应，而是都会被插入到一个插槽内</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1215.png" alt="1215"></p><p>我们理想的是，button对应插槽一，span对应插槽二，a对应插槽三，但实际上它会把所有插槽加上三个元素。</p><p><strong>那么如何实现多个插槽不同内容呢？那就是下面的具名插槽。</strong></p><h3 id="具名插槽-多个插槽的使用"><a href="#具名插槽-多个插槽的使用" class="headerlink" title="具名插槽/多个插槽的使用"></a>具名插槽/多个插槽的使用</h3><p>为什么多个插槽也叫具名插槽，因为面对多个插槽，我们一般会给它起具体名字，让它知道元素是要插入到哪个槽点。</p><p>一：赋予槽点名字，如下的name=‘left’</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1216.png" alt="1216"></p><p>二：使用者给插槽插入元素的语法，我们需要用template标签包裹需要插入槽点的标签，然后通过v-slot确定是插入哪一个槽点。（v-slot语法是官方规定的）</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1217.png" alt="1217"></p><p>注意：</p><p>1-v-slot是写在template里面的，不是写在button或者span什么的里面。</p><p>2-赋予name的插槽，只有当使用者通过v-slot指定后才会被插，这也是它的作用所在。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1218.png" alt="1218"></p><p>如果使用者给予的元素没有通过v-slot指定，那么都被插入到default插槽。</p><h3 id="动态插槽"><a href="#动态插槽" class="headerlink" title="动态插槽"></a>动态插槽</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1219.png" alt="1219"></p><p>也就是我不确定这个元素标签如button需要被插入到哪个槽点，就可以通过一个变量去动态修改它，随着一些事件响应让它变化。</p><p>一般都是插槽地点都是固定的，所以动态插槽应用场景较少。</p><p><strong>v-slot的语法糖</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1220.png" alt="1220"></p><p><strong>渲染作用域</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1221.png" alt="1221"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1222.png" alt="1222"></p><p>也就是说，一个vue文件里面用到的数据，如在插值语法中使用的数据，只能是当前文件下的props或者data里面的数据，不能跨文件使用。</p><h3 id="作用域插槽的使用（-难点）"><a href="#作用域插槽的使用（-难点）" class="headerlink" title="作用域插槽的使用（ 难点）"></a>作用域插槽的使用（ 难点）</h3><p><strong>需求：</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">子组件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab-control<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(item, index) in titles<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab-control-item<span class="token punctuation">"</span></span>           <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; active: index === currentIndex &#125;<span class="token punctuation">"</span></span>           <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>itemClick(index)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">:item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span> <span class="token attr-name">abc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cba<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>&#123;&#123; item &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1223.png" alt="1223"></p><p>如上案例，我们插槽了“button哈哈”给子组件，但是子组件里面的遍历出的三个button全部变成了“button哈哈”，如果我们需要它们的内容不同应该怎么办呢？</p><p>1-在app.vue通过插值语法修改需要插槽过去的内容</p><pre><code>  没用因为，你在这里再怎么修改，最终插值过去的还是相同内容的死数据</code></pre><p>2-利用父传子，让子组件通过props接收到需要动态修改的数据，然后修改</p><p>​        没用，因为在子组件插槽内修改的都为插槽默认数据，最终会被父组件插槽过来的内容替换。</p><p><strong>怎么办呢？</strong></p><p>上述案例是需要拿到子组件遍历出的item，然后对应动态修改在插槽内。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1224.png" alt="1224"></p><p>其中有一个这样的插槽语法，我们把需要从子组件传递出去的数据变量写在slot标签内，然后在父组件通过</p><p>v-slot：xx=“props”接收，其中props就是一个对象，名字可以自己定义。</p><p>注意：</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">:item&#x3D;“item”是声明一个需要传递到父组件prop对象的属性，等于当前子组件的item变量abc：“cba”是声明一个需要传递到父组件prop对象的属性，等于当前子组件随便写的一个字符串cba前面加了冒号就是一个表达式，不加冒号就是字符串字面量有的东西说不明白哈哈，这博客我自己复习用的，我能理解就成，大家还是得自己看视频<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>是不是可以具名槽点也能实现这个效果？</strong></p><p>不能，完全不是一个东西了，你还得仔细研究一下概念，上面其实是一个元素对一的槽点，只是遍历了三次，而不是具名槽点的多个元素对多个槽点。</p><h3 id="单个默认插槽的缩写"><a href="#单个默认插槽的缩写" class="headerlink" title="单个默认插槽的缩写"></a>单个默认插槽的缩写</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1225.png" alt="1225"></p><p>我们统一都写模板template，防止出错。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3_06_CompositionApi</title>
      <link href="archives/4a06c85e.html"/>
      <url>archives/4a06c85e.html</url>
      
        <content type="html"><![CDATA[<h2 id="Composition-API"><a href="#Composition-API" class="headerlink" title="Composition API"></a>Composition API</h2><p>以后开发不再用options api 而是composition api，这个api其实就是setup函数</p><p>compositionAPI：组合API</p><p>optionsAPI：选项API</p><h3 id="options和composition对比"><a href="#options和composition对比" class="headerlink" title="options和composition对比"></a>options和composition对比</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1252.png" alt="1252"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1253.png" alt="1253"></p><p>1-如上optionsAPI实际上就是在操控data中的数据，但是对它的操作遍布于各种api中，如methods，computed，watch等等。 弊端就是太分散了不利于分析代码等。</p><p>2-compositionAPI就是把对同个内容的操作全部写到一个函数内，然后这个函数还可以被很简单的抽取出进行复用。</p><h2 id="认识compositionApi"><a href="#认识compositionApi" class="headerlink" title="认识compositionApi"></a>认识compositionApi</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1254.png" alt="1254">            </p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1255.png" alt="1255"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1256.png" alt="1256"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- template中ref对象自动解包 --></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>数字:&#123;&#123; counter &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>ref<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token comment">//import &#123;reactive&#125; from "vue"</span><span class="token comment">//import &#123;reactive，ref&#125; from "vue" 这种写法同时导入也可以</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//注意此时counter其实就是一个ref对象了，而不是简单的100，所以想使用这个100，必须通过counter.value</span>      <span class="token keyword">let</span> counter <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>      <span class="token comment">// function add（）&#123;&#125;</span>      <span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        counter<span class="token punctuation">.</span>value <span class="token operator">+=</span><span class="token number">1</span>            <span class="token punctuation">&#125;</span>      <span class="token comment">// function sub（）&#123;&#125;</span>      <span class="token keyword">const</span> <span class="token function-variable function">sub</span> <span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        counter<span class="token punctuation">.</span>value <span class="token operator">-=</span><span class="token number">1</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">return</span><span class="token punctuation">&#123;</span>        counter<span class="token punctuation">,</span>        add<span class="token punctuation">,</span>        sub      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>步骤：</p><p>1-在script标签内书写setup函数</p><p>2-在setup函数中声明变量和使用箭头函数（普通函数也可以）声明会发生的事件</p><p><strong>3-setup中所有声明的东西，必须return返回出去才可以使用</strong></p><p>4-我们点击按钮发现没反应，其实普通数据counter已经变化了，但是它不是响应式数据不会被劫持代理，不会在页面上实时改变</p><p>5.1-导入vue提供的ref方法，使用ref包裹住数据，即可实现响应式。</p><p>5.1.1使用ref后，在script中必须通过counter.value才能取到真正的值，在template中的插值语法中不需要，因为有vue内部会自动解包。(解包就是自动取出其对象的value属性)</p><blockquote><p>//注意此时counter其实就是一个ref对象了，而不是简单的100，所以想使用这个100，必须通过counter.value</p></blockquote><p>5.2通过reactive函数</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1257.png" alt="1257"></p><p>react就是回应，反应的意思，reactive就是响应式，因为我们在setup中写的数据是普通数据，不会像在optionsAPI的data中的数据那样被vue劫持，所以是不会在页面中自动响应更新的。</p><p>需要我们手动通过reactive劫持（其实data响应式原理的底层也是通过reactive函数），注意：<strong>reactive函数必须传入复杂类型的参数，</strong>如上的传入对象，而不是是简单的字符串或者一个数字值。      </p><p><strong>什么时候用ref，什么时候用reactive</strong></p><p>这里是coderwhy老师总结出的经验，我以后也就这样写，其实只要你需要响应式数据，ref和reactive都可以完成，但是各有各的优点。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>      账号: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>account.username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      密码: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>account.password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>      账号: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      密码: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>show-info</span> <span class="token attr-name">:name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">:age</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>show-info</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> onMounted<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>  <span class="token keyword">import</span> ShowInfo <span class="token keyword">from</span> <span class="token string">'./ShowInfo.vue'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    components<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      ShowInfo    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        message<span class="token operator">:</span> <span class="token string">"Hello World"</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 定义响应式数据: reactive/ref</span>      <span class="token comment">// 强调: ref也可以定义复杂的数据</span>      <span class="token keyword">const</span> info <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>value<span class="token punctuation">)</span>      <span class="token comment">// 1.reactive的应用场景</span>      <span class="token comment">// 1.1.条件一: reactive应用于本地的数据</span>      <span class="token comment">// 1.2.条件二: 多个数据之间是有关系/联系(聚合的数据, 组织在一起会有特定的作用)</span>      <span class="token keyword">const</span> account <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        username<span class="token operator">:</span> <span class="token string">"coderwhy"</span><span class="token punctuation">,</span>        password<span class="token operator">:</span> <span class="token string">"1234567"</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> username <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">"coderwhy"</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> password <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">"123456"</span><span class="token punctuation">)</span>      <span class="token comment">// 2.ref的应用场景: 其他的场景基本都用ref(computed)</span>      <span class="token comment">// 2.1.定义本地的一些简单数据</span>      <span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> counter <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">"why"</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span>      <span class="token comment">// 2.定义从网络中获取的数据也是使用ref</span>      <span class="token comment">// const musics = reactive([])</span>      <span class="token keyword">const</span> musics <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> serverMusics <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"海阔天空"</span><span class="token punctuation">,</span> <span class="token string">"小苹果"</span><span class="token punctuation">,</span> <span class="token string">"野狼"</span><span class="token punctuation">]</span>        musics<span class="token punctuation">.</span>value <span class="token operator">=</span> serverMusics      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        account<span class="token punctuation">,</span>        username<span class="token punctuation">,</span>        password<span class="token punctuation">,</span>        name<span class="token punctuation">,</span>        age      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>来自本地的，有关联的数据就用reactive，为什么呢？</p><p>因为有关联的数据，比如账号密码，你使用reactive的方法就直接account.username和account.password即可，更方便使用。</p></blockquote><blockquote><p>其他场景一般都用ref函数</p><p>比如来自服务器的数据，使用ref的话，如上代码直接music.value=serverMusics即可，如果是使用reactive函数，那么你没法去把服务器的数据搞进去，或者说需要一个一个遍历进去，很麻烦。</p></blockquote><p><strong>hooks文件夹是什么？</strong></p><p><a href="https://blog.csdn.net/JaneLittle/article/details/127127644">https://blog.csdn.net/JaneLittle/article/details/127127644</a></p><p><code>vue3</code> 借鉴 <code>react hooks</code> 开发出了 Composition API ，所以也就意味着 Composition API 也能进行自定义封装 <code>hooks</code>。</p><p><code>vue3</code> 中的 <code>hooks</code> 就是函数的一种写法，就是将文件的一些单独功能的<code>js</code>代码进行抽离出来，放到单独的js文件中，或者说是一些可以复用的公共方法/功能。其实 <code>hooks</code> 和 <code>vue2</code> 中的 <code>mixin </code>有点类似，但是相对 <code>mixins</code> 而言， <code>hooks</code> 更清楚复用功能代码的来源, 更清晰易懂。</p><h2 id="安装Vue-devtool"><a href="#安装Vue-devtool" class="headerlink" title="安装Vue-devtool"></a>安装Vue-devtool</h2><p>作用：方便调试</p><p>1-直接在chorm商店下载（某些原因正常情况下打不开）</p><p>安装后如果不生效，重启下浏览器</p><p>2-找个安装教程手动安装，去github下载源码然后打包，拖到chorm拓展内。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1258.png" alt="1258"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1259.png" alt="1259"></p><h2 id="认识readonly只读函数（了解）"><a href="#认识readonly只读函数（了解）" class="headerlink" title="认识readonly只读函数（了解）"></a>认识readonly只读函数（了解）</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1260.png" alt="1260"></p><p>它的原理就是劫持了对象的set方法，让它无法被修改。</p><p><strong>问题：</strong>子组件可以修改来自父组件通过父子通信，传递过来的数据，即修改props内的数据（如对象）。</p><p>规范准则：虽然这是可行的，但是不符合单项数据流的准则，如父组件将此数据传递给了3个子组件，然后其中一个子组件修改了数据，那么父组件根本不知道是谁改的，非常不利于维护。            这个准则在react内也要遵守</p><p><strong>实在要修改这个数据呢？</strong></p><p>在子组件内通过emit发送自定义事件给父组件，由父组件进行修改。</p><p><strong>问题：</strong>当其他人在编写子组件的时候，他不知道这个单向数据流的准则，修改了数据应该怎么避免呢？</p><p><strong>解决：</strong>在父组件内使用readonly函数包裹住需要传出到子组件的数据即可。那么这个数据将不能被修改。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">app.vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>App: &#123;&#123; info &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>show-info</span> <span class="token attr-name">:info</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span>              <span class="token attr-name">:roInfo</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>roInfo<span class="token punctuation">"</span></span>              <span class="token attr-name">@changeInfoName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeInfoName<span class="token punctuation">"</span></span>             <span class="token attr-name">@changeRoInfoName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeRoInfoName<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>show-info</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> reactive<span class="token punctuation">,</span> readonly <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>  <span class="token keyword">import</span> ShowInfo <span class="token keyword">from</span> <span class="token string">'./ShowInfo.vue'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    components<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      ShowInfo    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 本地定义多个数据, 都需要传递给子组件</span>      <span class="token comment">// name/age/height</span>      <span class="token keyword">const</span> info <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        name<span class="token operator">:</span> <span class="token string">"why"</span><span class="token punctuation">,</span>        age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>        height<span class="token operator">:</span> <span class="token number">1.88</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token keyword">function</span> <span class="token function">changeInfoName</span><span class="token punctuation">(</span><span class="token parameter">payload</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        info<span class="token punctuation">.</span>name <span class="token operator">=</span> payload      <span class="token punctuation">&#125;</span>      <span class="token comment">// 使用readOnly包裹info</span>      <span class="token keyword">const</span> roInfo <span class="token operator">=</span> <span class="token function">readonly</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span>      <span class="token keyword">function</span> <span class="token function">changeRoInfoName</span><span class="token punctuation">(</span><span class="token parameter">payload</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        info<span class="token punctuation">.</span>name <span class="token operator">=</span> payload      <span class="token punctuation">&#125;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        info<span class="token punctuation">,</span>        changeInfoName<span class="token punctuation">,</span>        roInfo<span class="token punctuation">,</span>        changeRoInfoName      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html">showinfo.vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>ShowInfo: &#123;&#123; info &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 代码没有错误, 但是违背规范(单项数据流) --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info.name = <span class="token punctuation">'</span>kobe<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>ShowInfo按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 正确的做法: 符合单项数据流--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showInfobtnClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>ShowInfo按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 使用readonly的数据 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>ShowInfo: &#123;&#123; roInfo &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 代码就会无效(报警告) --></span>    <span class="token comment">&lt;!-- &lt;button @click="roInfo.name = 'james'">ShowInfo按钮&lt;/button> --></span>    <span class="token comment">&lt;!-- 正确的做法 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>roInfoBtnClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>roInfo按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// reactive数据</span>      info<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        type<span class="token operator">:</span> Object<span class="token punctuation">,</span>        <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token comment">// readonly数据</span>      roInfo<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        type<span class="token operator">:</span> Object<span class="token punctuation">,</span>        <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    emits<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"changeInfoName"</span><span class="token punctuation">,</span> <span class="token string">"changeRoInfoName"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">function</span> <span class="token function">showInfobtnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">"changeInfoName"</span><span class="token punctuation">,</span> <span class="token string">"kobe"</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">function</span> <span class="token function">roInfoBtnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">"changeRoInfoName"</span><span class="token punctuation">,</span> <span class="token string">"james"</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        showInfobtnClick<span class="token punctuation">,</span>        roInfoBtnClick      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当readonly后，就算是父组件本身也无法修改如上代码的roInfo，但是是可以通过原始info修改的。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1261.png" alt="1261"></p><h3 id="方法补充（了解）"><a href="#方法补充（了解）" class="headerlink" title="方法补充（了解）"></a>方法补充（了解）</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1262.png" alt="1262"></p><p>什么叫shallow呢，就是浅层，shallowReactive就是浅层响应，如上图代码，当firend内的name属性变化，那么浅层响应就不会被修改。</p><p><strong>toRefs函数</strong></p><p><strong>作用</strong>：如下当我们使用reactive函数后，在template中每次都需要通过info.name,info.age等等来取值，有的人想直接写name和age怎么办呢？</p><p>答：我们可以将此对象解构</p><p><strong>出现问题：解构后，数据会变成普通数据，没有响应式的功能</strong></p><p>解决：使用toRef函数再进行解构。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>info: &#123;&#123; name &#125;&#125; - &#123;&#123; age &#125;&#125; - &#123;&#123; height &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age++<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>height = 1.89<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改height<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> reactive<span class="token punctuation">,</span> toRefs<span class="token punctuation">,</span> toRef <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> info <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          name<span class="token operator">:</span> <span class="token string">"why"</span><span class="token punctuation">,</span>          age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>          height<span class="token operator">:</span> <span class="token number">1.88</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token comment">// reactive被解构后会变成普通的值, 失去响应式</span>        <span class="token comment">//多个解构</span>        <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> age <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">toRefs</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span>        <span class="token comment">//单个解构</span>        <span class="token keyword">const</span> height <span class="token operator">=</span> <span class="token function">toRef</span><span class="token punctuation">(</span>info<span class="token punctuation">,</span> <span class="token string">"height"</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          name<span class="token punctuation">,</span>          age<span class="token punctuation">,</span>          height        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1263.png" alt="1263"></p><h3 id="为什么setup函数内无法使用this？"><a href="#为什么setup函数内无法使用this？" class="headerlink" title="为什么setup函数内无法使用this？"></a>为什么setup函数内无法使用this？</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1265.png" alt="1265"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1266.png" alt="1266"></p><p>所以并不是原先官方文档说的setup之前，data和computed等没有被做解析，而是：</p><p>它内部源码，没有给setup绑定this，原先的optionsApi的methods，computed什么的都通过appy和bind等绑定了this。</p><p><strong>问题：</strong>没有this，那我如何this.$emit呢？</p><p>setup（props，context）里有两个默认参数，第一个就是父组件传递进来的数据，第二个就包含了：</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1267.png" alt="1267"></p><h2 id="setup中的对应原optionsApi的功能函数的使用"><a href="#setup中的对应原optionsApi的功能函数的使用" class="headerlink" title="setup中的对应原optionsApi的功能函数的使用"></a>setup中的对应原optionsApi的功能函数的使用</h2><h3 id="computed函数使用"><a href="#computed函数使用" class="headerlink" title="computed函数使用"></a>computed函数使用</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1268.png" alt="1268"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; fullname &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setFullname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>设置fullname<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; scoreLevel &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> reactive<span class="token punctuation">,</span> computed<span class="token punctuation">,</span> ref <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 1.定义数据</span>      <span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        firstName<span class="token operator">:</span> <span class="token string">"kobe"</span><span class="token punctuation">,</span>        lastName<span class="token operator">:</span> <span class="token string">"bryant"</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token comment">// const fullname = computed(() => &#123;</span>      <span class="token comment">//   return names.firstName + " " + names.lastName</span>      <span class="token comment">// &#125;)</span>      <span class="token keyword">const</span> fullname <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">const</span> tempNames <span class="token operator">=</span> newValue<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span>          names<span class="token punctuation">.</span>firstName <span class="token operator">=</span> tempNames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>          names<span class="token punctuation">.</span>lastName <span class="token operator">=</span> tempNames<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> names<span class="token punctuation">.</span>firstName <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> names<span class="token punctuation">.</span>lastName        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fullname<span class="token punctuation">)</span>      <span class="token keyword">function</span> <span class="token function">setFullname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        fullname<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">"coder why"</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// 2.定义score</span>      <span class="token keyword">const</span> score <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">89</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> scoreLevel <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> score<span class="token punctuation">.</span>value <span class="token operator">>=</span> <span class="token number">60</span> <span class="token operator">?</span> <span class="token string">"及格"</span><span class="token operator">:</span> <span class="token string">"不及格"</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        names<span class="token punctuation">,</span>        fullname<span class="token punctuation">,</span>        setFullname<span class="token punctuation">,</span>        scoreLevel      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// const fullname = computed(() => &#123;</span>   <span class="token comment">//   return names.firstName + " " + names.lastName</span>   <span class="token comment">// &#125;)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如上即computed在setup中的基本使用，其中默认只设置了get，没有set，如果要设置set如下</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> fullname <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> tempNames <span class="token operator">=</span> newValue<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span>        names<span class="token punctuation">.</span>firstName <span class="token operator">=</span> tempNames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        names<span class="token punctuation">.</span>lastName <span class="token operator">=</span> tempNames<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> names<span class="token punctuation">.</span>firstName <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> names<span class="token punctuation">.</span>lastNamejs      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中computed（）返回的也是一个ref对象，我们给fullname赋值，需要通过fullname.value</p><h3 id="ref获取元素dom的使用"><a href="#ref获取元素dom的使用" class="headerlink" title="ref获取元素dom的使用"></a>ref获取元素dom的使用</h3><p>原先学了ref在optionsapi中是通过给标签设置ref属性，如</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; color: titleColor &#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; message &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeTitle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>banner</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>banner<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后所有的拥有ref属性的标签的dom会存在与this.$ref这个对象中，如</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>title<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>btn<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>那么在setup 函数中无法使用this，应该怎么办呢？</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">app.vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 1.获取元素 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>titleRef<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnRef<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 2.获取组件实例 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>show-info</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showInfoRef<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>show-info</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getElements<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>获取元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref<span class="token punctuation">,</span> onMounted <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>  <span class="token keyword">import</span> ShowInfo <span class="token keyword">from</span> <span class="token string">'./ShowInfo.vue'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    components<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      ShowInfo    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> titleRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> btnRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> showInfoRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment">// mounted的生命周期函数</span>      <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>titleRef<span class="token punctuation">.</span>value<span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>btnRef<span class="token punctuation">.</span>value<span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>showInfoRef<span class="token punctuation">.</span>value<span class="token punctuation">)</span>        showInfoRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">showInfoFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token keyword">function</span> <span class="token function">getElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>titleRef<span class="token punctuation">.</span>value<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        titleRef<span class="token punctuation">,</span>        btnRef<span class="token punctuation">,</span>        showInfoRef<span class="token punctuation">,</span>        getElements      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们可以引入一个ref函数（compositionapi就是函数编程，那么optionsapi都会变成函数）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> titleRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> btnRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> showInfoRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后使用这个函数，主要变量名需要和需要获取dom的标签中ref属性的值相同（我刚学也不知道原理，只学怎么用）</p><p>然而我们发现直接获取</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>titleRef<span class="token punctuation">.</span>value<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>btnRef<span class="token punctuation">.</span>value<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>showInfoRef<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>是获取不到的，因为在setup（）执行的过程中，dom可能还没有被完全加载，所以需要加上onMounted已挂载的钩子函数</p><p>注意：在optionsapi中是mounted()，在setup中是onMounted()</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>titleRef<span class="token punctuation">.</span>value<span class="token punctuation">)</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>btnRef<span class="token punctuation">.</span>value<span class="token punctuation">)</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>showInfoRef<span class="token punctuation">.</span>value<span class="token punctuation">)</span>       showInfoRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">showInfoFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如何获取组件的实例？</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">showinfo.vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>ShowInfo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// methods: &#123;</span>    <span class="token comment">//   showInfoFoo() &#123;</span>    <span class="token comment">//     console.log("showInfo foo function")</span>    <span class="token comment">//   &#125;</span>    <span class="token comment">// &#125;</span>    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">function</span> <span class="token function">showInfoFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"showInfo foo function"</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        showInfoFoo      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一样的，加ref属性即可，然后再使用ref()函数声明</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 2.获取组件实例 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>show-info</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showInfoRef<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>show-info</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> showInfoRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>而且我们拿到组件的实例，也就是showInfoRef后，还可以在app.vue中通过这个实例调用shpwinfo.vue组件内的方法,如</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">showInfoRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">showInfoFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="组件的生命周期函数"><a href="#组件的生命周期函数" class="headerlink" title="组件的生命周期函数"></a>组件的生命周期函数</h3><h3 id="Provide-Inject使用"><a href="#Provide-Inject使用" class="headerlink" title="Provide/Inject使用"></a>Provide/Inject使用</h3><h3 id="watch-watchEffect"><a href="#watch-watchEffect" class="headerlink" title="watch/watchEffect"></a>watch/watchEffect</h3><h3 id="自定义Hook联系"><a href="#自定义Hook联系" class="headerlink" title="自定义Hook联系"></a>自定义Hook联系</h3><h3 id="script-setup-语法糖"><a href="#script-setup-语法糖" class="headerlink" title="script setup 语法糖"></a>script setup 语法糖</h3><p>vue3.2版本才有</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3_03_v-model&amp;&amp;组件开发</title>
      <link href="archives/16519384.html"/>
      <url>archives/16519384.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、v-model组件化"><a href="#一、v-model组件化" class="headerlink" title="一、v-model组件化"></a>一、v-model组件化</h2><h3 id="1-1v-model的基本原理"><a href="#1-1v-model的基本原理" class="headerlink" title="1.1v-model的基本原理"></a>1.1v-model的基本原理</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1147.png" alt="1147"></p><p>双向绑定和响应式数据是两个不同的概念</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1148.png" alt="1148"></p><p>双向绑定数据，通俗说，如上我一个input输入框，我们可以通过message给它设置默认value，但是当用户在输入框改变value的时候，我们要取得这个新value，那么怎么取得呢？</p><p><strong>方式一：</strong>手动实现，如上图中，每次用户输入东西改变value都会触发input事件，我们让这个事件触发一个methods方法，然后改变message拿到最新值即可 ；       但是这样太繁琐了</p><p><strong>方式二：****通过v-model实现双向绑定</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">我们直接在input中写入指令，v-model="message"即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>那么message自动就有了双向绑定，vue底层会帮我们去进行input，单选框，多选框，等等各种标签互换数据。</p><h3 id="1-2-v-model的初步使用"><a href="#1-2-v-model的初步使用" class="headerlink" title="1.2 v-model的初步使用"></a>1.2 v-model的初步使用</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.手动的实现了双向绑定 --></span>    <span class="token comment">&lt;!-- &lt;input type="text" :value="message" @input="inputChange"> --></span>    <span class="token comment">&lt;!-- 2.v-model实现双向绑定 --></span>    <span class="token comment">&lt;!-- &lt;input type="text" v-model="message"> --></span>    <span class="token comment">&lt;!-- 3.登录功能 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>account<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      账号:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>account<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>account<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      密码:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loginClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123;message&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          message<span class="token operator">:</span> <span class="token string">"Hello Model"</span><span class="token punctuation">,</span>          account<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>          password<span class="token operator">:</span> <span class="token string">""</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function">inputChange</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function">loginClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">const</span> account <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>account          <span class="token keyword">const</span> password <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>password          <span class="token comment">// url发送axios网络请求</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>account<span class="token punctuation">,</span> password<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上代码，我们实际开发中的登入，就是通过双向绑定，拿到用户的账户密码，然后通过axios发送请求即可</p><p><strong>注意：</strong>如果是单个i标签如input和这个data中的变量绑定，只需要和optionsApi中的data中返回的变量名一样就好了，此变量会自动记录input等可以输入内容的标签的内容，如果是多个标签绑定同一个data中的属性，就需要写value属性。</p><p>上面代码account变量，还有一个id为account，其实没什么联系，id删了不影响双向绑定（这里代码id是和lable标签配合使用，lable for必须和id一样）</p><p>tips：复习一下，单选框是需要name属性的，两个name属性相同的单选框，只能选取一个</p><h3 id="1-3-textarea的双向绑定"><a href="#1-3-textarea的双向绑定" class="headerlink" title="1.3 textarea的双向绑定"></a>1.3 textarea的双向绑定</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>输入的内容: &#123;&#123;content&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          content<span class="token operator">:</span> <span class="token string">""</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上代码中textarea的name属性，input也有，这个name是用于表单提交数据的，我们这里是双向绑定获取变量，自动提交数据，所以name不写也可以。</p><h3 id="1-4-v-model绑定checkbox"><a href="#1-4-v-model绑定checkbox" class="headerlink" title="1.4 v-model绑定checkbox"></a>1.4 v-model绑定checkbox</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1150.png" alt="1150"></p><p>如果只是单选框的话，双向绑定的是一个布尔值，选中的话就是true，不选中就是false</p><p>如果是多选框进行双向绑定，那么data中返回的值 应该是一个数组，多选框的input全部绑定同一个变量，而且必须有value值</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.checkbox单选框: 绑定到属性中的值是一个Boolean --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>agree<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>agree<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isAgree<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 同意协议    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>单选框: &#123;&#123;isAgree&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.checkbox多选框: 绑定到属性中的值是一个Array --></span>    <span class="token comment">&lt;!-- 注意: 多选框当中, 必须明确的绑定一个value值 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobbies<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>请选择你的爱好:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sing<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sing<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobbies<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sing<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 唱      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jump<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jump<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobbies<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jump<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 跳      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rap<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobbies<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> rap      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>basketball<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>basketball<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobbies<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>basketball<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 篮球      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>爱好: &#123;&#123;hobbies&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          isAgree<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>          hobbies<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>为什么必须要value值？</strong></p><p>当我们input的type为text，或者textarea这些单个框里面的内容，那么就不需要value值，双向绑定的就是data中的属性和单个框里面的内容。</p><p>但是多选框不一样，都是checkbox类型的input，都绑定同一个data中的属性，如果点击了就是true，那么多checkbox类型的input，怎么区分是哪个多选框被点击了？     所以我们必须有一个东西来区分，所以要value。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1151.png" alt="1151"></p><p><strong>注意：</strong></p><p>这里的用户协议单选框也是checkbox生成的，但是没有和其他input绑定相同的v-model，所以和其他多选框没有联系，那么它也不需要value，如果被勾选就是true，不勾选就是false</p><p><strong>为什么第一个也是多选框，为什么和下面的爱好多选框不一样？</strong></p><p>在原生html中，我们需要把爱好多选框全部加一个name属性，表示它们是一起的，建立一个联系</p><p>但是在vue中，v-model自带了这个联系</p><p>我们可以给data中的属性一个默认值，那么页面的input中也会默认选中拥有和默认值一样的value的那个input</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1152.png" alt="1152"></p><h3 id="1-5v-model绑定radio"><a href="#1-5v-model绑定radio" class="headerlink" title="1.5v-model绑定radio"></a>1.5v-model绑定radio</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>male<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>male<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>male<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 男      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>female<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>female<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>female<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 女      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>性别: &#123;&#123;gender&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          gender<span class="token operator">:</span> <span class="token string">"female"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 因为radio也是多个input绑定同一个data中的属性，如上图的的v-model=”gender”</p><p>所以它也必须写上 value</p><p>html中我们单选框必须通过name来识别哪几个单选框是一起的，然后<strong>互斥</strong>，这里v-model底层帮我们已经实现了这个逻辑。</p><h3 id="1-6v-model绑定select"><a href="#1-6v-model绑定select" class="headerlink" title="1.6v-model绑定select"></a>1.6v-model绑定select</h3><p>select中的name属性也是原生中用于做提交数据的，我们也可以不写</p><p>复习：多选框和单选框默认选中都是写checked，select下拉框默认选中是写selected</p><p><strong>不同点：</strong>那些input单选多选，v-model都是写在input里面，select标签v-model必须写在select标签里面，而不是选项option里面。</p><p><strong>知识点</strong>：select标签是有一个属性multiple的，可以多选option，size属性是让多选的select在页面中显示出多少个option，这些在黑马的三剑客里面没学过。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- select的单选 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fruit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>apple<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>苹果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>orange<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>橘子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>banana<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>香蕉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>单选: &#123;&#123;fruit&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>                               <span class="token comment">&lt;!-- select的多选 --></span>    <span class="token comment">&lt;!-- 多选在操作的时候需要按住ctrl --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">multiple</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fruits<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>apple<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>苹果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>orange<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>橘子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>banana<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>香蕉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>多选: &#123;&#123;fruits&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          fruit<span class="token operator">:</span> <span class="token string">"orange"</span><span class="token punctuation">,</span>          fruits<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-7v-model的值绑定过程"><a href="#1-7v-model的值绑定过程" class="headerlink" title="1.7v-model的值绑定过程"></a>1.7v-model的值绑定过程</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1153.png" alt="1153"></p><p>什么是值绑定，意思就是说1.6中的代码，option一般不是写死的，而是从服务器来的数据，我们通过v-for去遍历，叫做值绑定。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.select的值绑定 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">multiple</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fruits<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in allFruits<span class="token punctuation">"</span></span>               <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.value<span class="token punctuation">"</span></span>               <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.value<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        &#123;&#123;item.text&#125;&#125;      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>多选: &#123;&#123;fruits&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.checkbox的值绑定 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobbies<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>请选择你的爱好:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in allHobbies<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.value<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">:for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.value<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">:id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.value<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobbies<span class="token punctuation">"</span></span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.value<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> &#123;&#123;item.text&#125;&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>爱好: &#123;&#123;hobbies&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 水果</span>          allFruits<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span> value<span class="token operator">:</span> <span class="token string">"apple"</span><span class="token punctuation">,</span> text<span class="token operator">:</span> <span class="token string">"苹果"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> value<span class="token operator">:</span> <span class="token string">"orange"</span><span class="token punctuation">,</span> text<span class="token operator">:</span> <span class="token string">"橘子"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> value<span class="token operator">:</span> <span class="token string">"banana"</span><span class="token punctuation">,</span> text<span class="token operator">:</span> <span class="token string">"香蕉"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>          fruits<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token comment">// 爱好</span>          allHobbies<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span> value<span class="token operator">:</span> <span class="token string">"sing"</span><span class="token punctuation">,</span> text<span class="token operator">:</span> <span class="token string">"唱"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> value<span class="token operator">:</span> <span class="token string">"jump"</span><span class="token punctuation">,</span> text<span class="token operator">:</span> <span class="token string">"跳"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> value<span class="token operator">:</span> <span class="token string">"rap"</span><span class="token punctuation">,</span> text<span class="token operator">:</span> <span class="token string">"rap"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> value<span class="token operator">:</span> <span class="token string">"basketball"</span><span class="token punctuation">,</span> text<span class="token operator">:</span> <span class="token string">"篮球"</span> <span class="token punctuation">&#125;</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>          hobbies<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-8-v-model的修饰符"><a href="#1-8-v-model的修饰符" class="headerlink" title="1.8 v-model的修饰符"></a>1.8 v-model的修饰符</h3><p><strong>.lazy</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1154.png" alt="1154"></p><p><strong>v-number</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1155.png" alt="1155"></p><p>1-如上图的代码，当我们的input是type=“text”那么，虽然我们默认的message给的是number数字，但是当用户在input中输入数字后，会变成string类型。如果我们需要它是number类型，就可以加上number修饰符</p><blockquote><p>情况：</p><p>如果用户输入sss111，即使加了number修饰符，message还是会是字符串类型，message=”“sss111”</p><p>如果用户输入1111ss，那么message是数字型，message=1111</p><p>和parseint类型，它能去除后面的字符串，剩余的数字变成整形，但是无法去除前面的字符</p></blockquote><p>2-input可以设置type=”number”那么用户只能输入数字（vue3中用户输入后还是nu mber类型，vue2中即使设置了type=number，还是会变成字符串类型）</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1156.png" alt="1156"></p><p><strong>trim修饰符</strong></p><p>trim：修剪，割掉，剪下</p><p>去除用户输入的空格，用户在输入的时候，是能看到自己打了空格的，如在数据提交的时候，我们接收的是无空格的。</p><p>如用户注册账户名字为：jin    nian，如果加了trim修饰符，那么服务器收到的就是jinnian</p><p>而且如果这个input有input或者文本改变事件，输入空格，因为有trim，这些事件根本不会触发。</p><p><strong>修饰符可以多个一起使用，修饰符在实际开发中，也用的不太多</strong>  ，点击事件也可以多个</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model.lazy.trim</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>//v-on:click.stop.prevent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.lazy: 绑定change事件  --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model.lazy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>message: &#123;&#123;message&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.number: 自动将内容转换成数字 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model.number</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>counter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>counter:&#123;&#123;counter&#125;&#125;-&#123;&#123;typeof counter&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>counter2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>counter2:&#123;&#123;counter2&#125;&#125;-&#123;&#123;typeof counter2&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 3.trim: 去除收尾的空格 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model.trim</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>content: &#123;&#123;content&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 4.使用多个修饰符 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model.lazy.trim</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>content: &#123;&#123;content&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          message<span class="token operator">:</span> <span class="token string">"Hello Vue"</span><span class="token punctuation">,</span>          counter<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>          counter2<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>          content<span class="token operator">:</span> <span class="token string">""</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      watch<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function">content</span><span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"content:"</span><span class="token punctuation">,</span> newValue<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-9vue组件化"><a href="#1-9vue组件化" class="headerlink" title="1.9vue组件化"></a>1.9vue组件化</h3><p>搞明白组件化，什么全局组件，局部组件，只要搞清除它们和根组件的关系就好了。</p><p>1-根组件就是传入const app =Vue.createApp()的那个对象</p><p>2-app就是根组件的组件名，经过ceateApp这个函数方法底层一系列运作，app就可以挂载到html里面了</p><p>3-全局组件就是在根组件下生成的，如app.componet(‘组件名字’，组件对象)，这个名字和对象和根组件是一样的原理。</p><p>tips:模板是template，不是templete</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1157.png" alt="1157"></p><p> <strong>注册全局组件</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.内容一: --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>product-item</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>product-item</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 2.内容二: --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>product-item</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>product-item</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 3.内容三: --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>product-item</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>product-item</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 组件product-item的模板 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>product<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>我是商品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>商品图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>商品价格: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>¥9.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>商品描述信息, 9.9秒杀<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">/*      1.通过app.component(组件名称, 组件的对象)      2.在App组件的模板中, 可以直接使用product-item的组件    */</span>    <span class="token comment">// 1.组件: App组件(根组件)</span>    <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token comment">// 2.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>    <span class="token comment">// 3.注册一个全局组件</span>    <span class="token comment">// product-item全局组件</span>    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"product-item"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>      template<span class="token operator">:</span> <span class="token string">"#item"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中有有个component方法，第一个参数是要注册的组件的名字，第二个参数是组件的对象代码，我们可以直接写代码，也可以抽取出去，如上的app.component，我们可以写为</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">const demo =&#123;    template: "#item"  &#125;  app.component("product-item", demo)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>其中template我们知道里面是写html标签代码的，我们也可以通过id选择器抽取出去，如上的#item就是从</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>product<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>我是商品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>商品图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>商品价格: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>¥9.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>商品描述信息, 9.9秒杀<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过id选择器找到的数据。</p><p><strong>注意：</strong>因为你注册的组件是从根组件app中分支出来的，所以你的组件标签必须写在被app绑定了的盒子内如下</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>product-item</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>product-item</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>你必须写在这里面，才能显示在浏览器中（全局组件可以写在其他组件的template中，但是如果要显示在浏览器中，组件标签必须写在根组件app绑定的盒子中）</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1158.png" alt="1158"></p><p><strong>组件自己的逻辑和组件名称</strong></p><p>逻辑：逻辑的意思就是注册的组件里面，也是可以写methods和data和watch等等optionApi的</p><p>组件名称：</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1159.png" alt="1159"></p><blockquote><p>注册组件名称一般有两种，斜杠分隔单词或者大驼峰书写</p><p><em>问题：我们发现在页面中用大驼峰，浏览器提示不认识这个标签</em></p><p>因为我们现在的代码写在html中，html中的标签是不区分大小写的，我们写大驼峰自然没有作用</p><p>但是在以后的.vue文件中，我们把标签写在template中，就可以用大驼峰了</p><p>在实际开发中我们多用斜杠书写组件名字。</p></blockquote><p><em>注意：</em>注册的全局组件是无法使用根组件app中的optionApi的，如app的data中的变量，在全局组件中的template中无法使用。 </p><p>  局部组件也不能使用，也就是说不管是什么父子组件关系，这些组件的data都是互相独立的，</p><p><strong>注册局部组件</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1160.png" alt="1160"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>home-nav</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>home-nav</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>product-item</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>product-item</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>product-item</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>product-item</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>product-item</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>product-item</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>product<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>product<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123;title&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>商品描述, 限时折扣, 赶紧抢购<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>价格: &#123;&#123;price&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>收藏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>-------------------- nav start ---------------<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>我是home-nav的组件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>product-item</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>product-item</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>-------------------- nav end ---------------<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> ProductItem <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      template<span class="token operator">:</span> <span class="token string">"#product"</span><span class="token punctuation">,</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          title<span class="token operator">:</span> <span class="token string">"我是product的title"</span><span class="token punctuation">,</span>          price<span class="token operator">:</span> <span class="token number">9.9</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 1.1.组件打算在哪里被使用</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// components: option api</span>      components<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        ProductItem<span class="token punctuation">,</span>        HomeNav<span class="token operator">:</span> <span class="token punctuation">&#123;</span>          template<span class="token operator">:</span> <span class="token string">"#nav"</span><span class="token punctuation">,</span>          components<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            ProductItem          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          message<span class="token operator">:</span> <span class="token string">"Hello Vue"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>区别：</p><p>1-局部组件是在原根组件的optionApp中写一个components对象，键是组件名，值是组件的optionApi内容</p><p>2-全局组件是app.components(组件名，组件内容)</p><p>3-全局组件生成的标签可以写入其他组件的template内，局部组件只能写入生成它的组件内的template</p><h2 id="二、Vue脚手架"><a href="#二、Vue脚手架" class="headerlink" title="二、Vue脚手架"></a>二、Vue脚手架</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1161.png" alt="1161"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1162.png" alt="1162"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1163.png" alt="1163"></p><h3 id="vue脚手架的安装与使用"><a href="#vue脚手架的安装与使用" class="headerlink" title="vue脚手架的安装与使用"></a>vue脚手架的安装与使用</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1164.png" alt="1164"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1166.png" alt="1166"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">创建命令为vue create xxx(文件名字)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第一次创建项目,它会问你下载包的地址,下图中为镜像源,下载较快,我们选no就是用默认源,下载较慢但是版本肯定更准确.</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1167.png" alt="1167"></p><p>这里他们已经给我们准备好了两个预设,包含了babel和eslint,我们也可以选最后一个选择为手动选择特性</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1168.png" alt="1168"></p><p>然后会自动出现如下一些命令行界面,我们进行相应选择即可,空格为选中,再按空格为取消选中,a为全部选中</p><p>如下就是选中此项目,你会用到什么技术,脚手架自动给你配置环境</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1165.png" alt="1165"></p><p>然后选择vue的版本</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1169.png" alt="1169"></p><p>然后会提示bable的配置写入package.json还是单独的文件,我们一般选单独文件,更容易维护</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1170.png" alt="1170"></p><p>然后会提示,我们是否保存当前预设</p><p>什么叫预设呢,就是你刚刚设置的这些脚手架选项,就像你玩王者荣耀和吃鸡的时候,那套操作配置或者符文配置,我们再设置一个名称,下次类型项目就可以直接用这套预设.</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1171.png" alt="1171"></p><p>最后会让我们选择包管理器,一般现在还是用npm,但是一些公司慢慢向pnpm转型,好处在以往博客也写了,但是我们这里还是用npm,因为我也是初学.</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1172.png" alt="1172"></p><p>项目创建后的配置</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1173.png" alt="1173"></p><p>其中vue.config.js和webpack.config.js是差不多作用的</p><p><strong>browserslistrc</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1174.png" alt="1174"></p><p>这个是配置打包后的代码是否需要兼容浏览器的,事实上它也是一个工具,它会自动去caniuse网站去查询各种浏览器版本的一些信息.</p><p>如上大于1%,意思就是兼容浏览器占市场份额1%以上的浏览器</p><p>last 2 version就是最后两个本吧</p><p>not dead的意思是当前浏览器还在维护,还在市场上存在</p><p>not ie 11 就是不需要去兼容ie11</p><p>事实上在开发中,很多人根本不认识这玩意,都是使用默认的.</p><p><strong>js.config.json</strong></p><p>这个文件是给开发工具vscode来用的</p><p>方便vscode给我们更友好的代码提示，比如你在此文件里面写自己用了那些包，vscode就会识别到，然后给予相应提示。</p><p>总结:</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1175.png" alt="1175"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>以考促学_web二级</title>
      <link href="archives/aaf691bc.html"/>
      <url>archives/aaf691bc.html</url>
      
        <content type="html"><![CDATA[<h2 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a>选择题</h2><p><strong>一定要看清楚题目</strong></p><p>叶子的节点和度数怎么算</p><p>前序中序区别</p><p>replace方法和indexOf方法</p><p>1-bgcolor是body标签的一个属性，可以设置颜色，background-color是css，其中css中优先级更高。</p><p>2-超链接a中有一个目标为_top,它的应用场景是：当此网页是一个iframe内嵌在另一个父级网页，那么点击这个超链接会在父级网页进行跳转，而不是在iframe内跳转。</p><p>3-sub何sup标签分别对应了下标和上标</p><p>4-input有一个类型是hidden，可以隐藏当前input控件，但可以和表单form一起提交。</p><p>5-前中后序</p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1177.png" alt="1177" style="zoom:33%;" /><p>6-表格中的cellspacing和cellpadding；其实在html5中这个属性已经不支持了，奈何可考试不与时俱进。</p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1176.png" alt="1177" style="zoom: 80%;" /><p>7-indexof（）方法</p><p><a href="https://wenku.baidu.com/view/1ac4a74cac1ffc4ffe4733687e21af45b207fe75.html">https://wenku.baidu.com/view/1ac4a74cac1ffc4ffe4733687e21af45b207fe75.html</a></p><p>通俗来说它可以给数组和字符串使用，参数为要寻找的数据项，作用为找到数据项在字符串或者数组中第一次出现的位置（计数从0开始，字符串也是从0开始）</p><p>8-replace（）方法</p><p><a href="https://www.runoob.com/jsref/jsref-replace.html">https://www.runoob.com/jsref/jsref-replace.html</a></p><p>一般两个参数，第一个为要找到的需要被替换的字符串，第二个参数就是替换上去的字符串</p><p>第一个参数可以写正则表达式的g去匹配多个，如果没有g就是只替换一个。</p><h2 id="第一套"><a href="#第一套" class="headerlink" title="第一套"></a>第一套</h2><p>1-跨文件的跳转锚链接，可以通过a标签的name属性使用，我以前只知道通过id来跳。原理一样的，但是二级题库里面答案是name，考的时候最好写name属性来跳。</p><p>如：./2.htm/#end</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">2.html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>end<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>永远无怨的是我的双眼<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在填空的时候记得也加上href</p><p>2.1新知识window.close()关闭窗口</p><p>2.2confirm()提示框，这里是不能用alert()的，因为alert不返回值，用confirm用户点击确定后会返回一个true给if语句，从而执行下面的关闭窗口语句</p><p>2.3我们还要掌握时间对象now = new Date(); 其中获取时间为getHours()</p><p>2.4<strong>注意web二级这里写的都是行内式的js事件</strong>，不像我们新的es6都是添加监听事件如：对象.addEventListener(“click”,function(){})和 对象.click=function(){}</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">function</span> <span class="token function">closeWin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//在此处添加代码</span><span class="token comment">// **********Found**********</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">"确定要退出吗？"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">// **********Found**********</span>window<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">morning</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// **********Found**********</span>hour <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>hour <span class="token operator">></span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>window<span class="token punctuation">.</span>status<span class="token operator">=</span><span class="token string">"早上好!"</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>window<span class="token punctuation">.</span>status<span class="token operator">=</span><span class="token string">"下午好！"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- **********Found********** --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>morning()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- **********Found********** --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>关闭窗口<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>closeWin()<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.1这道题主要要我们逆转一个字符串，我们按照给我们的代码思路填空即可。</p><p>3.2这里用到了str.split(“,”)也就是把字符串通过逗号一个一个分开，返回一个数组</p><p>3.3我们拿到数组后，写一个for循环，把新字符串从数组大到下重新相加即可（最后加”,”是让字符串中也有逗号，因为题目有要求，这个代码也不是我们写的，我们根据原有代码写就好了，<strong>然后再打开浏览器验证</strong>）</p><p>3.4如下代码是截取字符串，包前不包后，目的是把for循环生成的新字符串中的最后一个逗号清除。</p><pre class="line-numbers language-htm;" data-language="htm;"><code class="language-htm;">newstr&#x3D;newstr.substring(0,newstr.length-1)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token function">reverse</span><span class="token punctuation">(</span><span class="token string">'a,b,c,d,e,f,g'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">alert</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">==</span> <span class="token string">'g,f,e,d,c,b,a'</span><span class="token punctuation">)</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">// 在此处加入代码，完成字符串翻转功能</span><span class="token comment">// **********Found**********</span><span class="token keyword">var</span> spl <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> newstr<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token comment">// **********Found**********</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span>spl<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">// **********Found**********</span>newstr<span class="token operator">+=</span>spl<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">','</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// **********Found**********</span>newstr<span class="token operator">=</span>newstr<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>newstr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">return</span> newstr<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>str<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>foo()<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4.1这种综合题目其实挺烦的，你必须按照它的思路来，而不是实现效果即可，它的答案是卡死的</p><p>4.2我们最好先仔细看一遍需求，然后看给的代码，通过运行顺序和他给我们的注释来识别它的哪个变量是什么东西，明白它这个代码的大概逻辑再写，然后反复检查，反正时间够用。</p><p>4.3注意它这里用了定时器递归，所以得写setTimeout千万别写setInterval</p><p>4.4代码要求什么状态栏等于什么，我们就写window.status=””，事实上在现在的浏览器默认设置上，这行代码根本不生效。</p><p>4.5注意如下写法，我们一般是通过获取元素dom来操作，它这里直接通过name获取，我没见过</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">document.lefttime.left.value = curtime;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>直接通过name值来选择获取了form中的input，我测试了它貌似只能在form和input都有name的情况下使用，我单独给a标签什么的设置一个name是取不到的。</p><p>参考：<a href="https://blog.csdn.net/csm0912/article/details/84134934">https://blog.csdn.net/csm0912/article/details/84134934</a></p><p><strong>这是十多年前的写法，识别度很差，这二级说实话真的拉跨，不是为了学分我是真不会考，这种空直接跳，不用浪费时间</strong></p><p>4.6一个空不会写就算了，题目说一个空就是一个空，千万不要自作聪明去给其他代码标签什么的加东西</p><p><strong>你能改的只有规定的空！！否则直接零分</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span> <span class="token name">PUBLIC</span> <span class="token string">"-//W3C//DTD XHTML 1.0 Transitional//EN"</span> <span class="token string">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xhtml<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content-type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/html;charset=utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>未标题页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- **********Found********** --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>begintimer()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JavaScript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> limit<span class="token operator">=</span><span class="token string">"1:59"</span><span class="token keyword">var</span> parselimit<span class="token operator">=</span>limit<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// **********Found**********</span>parselimit<span class="token operator">=</span>parselimit<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">+</span>parselimit<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">begintimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>parselimit<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//下面是限制时间到了后去的连接页面,自己修改。</span>window<span class="token punctuation">.</span>location<span class="token operator">=</span><span class="token string">"1.htm"</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span> parselimit<span class="token operator">-=</span><span class="token number">1</span><span class="token comment">// **********Found**********</span>curmin<span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>parselimit<span class="token operator">/</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cursec<span class="token operator">=</span>parselimit<span class="token operator">-</span>curmin<span class="token operator">*</span><span class="token number">60</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>curmin<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span>curtime<span class="token operator">=</span><span class="token string">"你剩下"</span><span class="token operator">+</span>curmin<span class="token operator">+</span><span class="token string">"分"</span><span class="token operator">+</span>cursec<span class="token operator">+</span><span class="token string">"秒的时间。"</span><span class="token keyword">else</span>curtime<span class="token operator">=</span><span class="token string">"你剩下"</span><span class="token operator">+</span>cursec<span class="token operator">+</span><span class="token string">"秒的时间。"</span><span class="token comment">//下一句需要设置定时器</span><span class="token comment">// **********Found**********</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">"begintimer()"</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token comment">//下一句告诉访问者剩余的时间，在文本框中显示。</span>document<span class="token punctuation">.</span>lefttime<span class="token punctuation">.</span>left<span class="token punctuation">.</span>value<span class="token operator">=</span>curtime<span class="token punctuation">;</span><span class="token comment">//下一句告诉访问者剩余的时间，在状态栏中显示。</span><span class="token comment">// **********Found**********</span>window<span class="token punctuation">.</span>status<span class="token operator">=</span>curtime<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lefttime<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第二套"><a href="#第二套" class="headerlink" title="第二套"></a>第二套</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span> 图像用于超级链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>欢迎进入宠物世界:<span class="token comment">&lt;!-- ********FOUND********* --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span> www.petsWorld.com/turtles.htm <span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- ********FOUND********* --></span>&lt;img src="turtle.jpg" width="800" height="600"  /* ********FOUND********* */title = 欢迎点击图片进入一个新的世界 /* ********FOUND********* */alt = 可爱的小乌龟><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上，title是当鼠标移入显示的文字，alt是图片无法加载时，代替的文字</p><p><strong>其中可爱的乌龟，没有加引号，以防万一，我们就没必要自作聪明去加上了，我们只需要写我们的空</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1120.png" alt="1120"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- **********Found********** --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">p.small</span> <span class="token punctuation">&#123;</span><span class="token property">line-height</span><span class="token punctuation">:</span> 80%<span class="token punctuation">;</span><span class="token comment">/* **********Found********** */</span><span class="token property">font-size</span><span class="token punctuation">:</span> 25pt<span class="token punctuation">&#125;</span><span class="token selector">#big</span> <span class="token punctuation">&#123;</span><span class="token property">line-height</span><span class="token punctuation">:</span> 200%<span class="token punctuation">;</span><span class="token comment">/* **********Found********** */</span><span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token property">letter-spacing</span><span class="token punctuation">:</span> 20px <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- **********Found********** --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这个段落拥有更小的行高。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>这个段落拥有更小的行高。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- **********Found********** --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>big<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这个段落拥有更大的行高。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>这个段落拥有更大的行高。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中style中写type，右对齐使用float，说实话题目的文字描述也很难看懂，为什么右对齐我以为text-align呢</p><p><strong>所以我们写完一定要在浏览器打开，看看有没有达到题目要求的效果图的预期效果。</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>简单html知识<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FORM</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- *********Found********* --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TABLE</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>  <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#dddddd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TR</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- *********Found********* --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TD</span> <span class="token attr-name">align</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>  <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>B</span><span class="token punctuation">></span></span>个人信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>B</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TR</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TD</span><span class="token punctuation">></span></span>姓名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TD</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>INPUT</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TR</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TD</span><span class="token punctuation">></span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TD</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- *********Found********* --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>INPUT</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span>   <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>   <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TR</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- *********Found********* --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TD</span><span class="token punctuation">></span></span>性别：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TD</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>INPUT</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>INPUT</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span>  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TR</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TD</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TD</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- *********Found********* --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>INPUT</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token attr-name">type</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>INPUT</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>重写<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TABLE</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FORM</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1121.png" alt="1121"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>对数组排序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"> <span class="token keyword">function</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//生成一个m、n之间的整数 </span><span class="token comment">/* **********Found********** */</span><span class="token keyword">var</span> i<span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* **********Found********** */</span><span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token operator">-</span>m<span class="token punctuation">)</span><span class="token operator">*</span>i<span class="token operator">+</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 四舍五入得到整数 */</span><span class="token punctuation">&#125;</span> <span class="token keyword">function</span> <span class="token function">getRandomArr</span><span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span>n<span class="token punctuation">,</span>l</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//m：生成随机整数的最小值，n：生成随即整数的最大值，l：生成的数组的长度 </span><span class="token keyword">var</span> resultArr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>l<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">/* **********Found********** */</span>resultArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将生成的随机整数放入数组</span><span class="token punctuation">&#125;</span> <span class="token keyword">return</span> resultArr<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token function">getRandomArr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* **********Found********** */</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"排序之前的数组是："</span> <span class="token operator">+</span> a <span class="token operator">+</span> <span class="token string">"\n"</span> <span class="token operator">+</span> <span class="token string">"排序之后的数组是："</span> <span class="token operator">+</span> a<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html">/* **********Found********** */resultArr.push(rand(1,99)); //将生成的随机整数放入数组<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>就像这一空，rand(1,99)，它题目中也没有要求，我们怎么判断写多少？</strong></p><p>我们要根据它的其他代码来判断，它写了var a = getRandomArr(1,99,8);我们自然也写1和99即可</p><p><strong>综合题</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1122.png" alt="1122"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HTML</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HEAD</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TITLE</span><span class="token punctuation">></span></span>CSS+JS控制文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TITLE</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>HEAD</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BODY</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>STYLE</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">BODY</span> <span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 8pt<span class="token punctuation">;</span> <span class="token property">font-family</span><span class="token punctuation">:</span> Arial<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token comment">/* **********Found********** */</span>    <span class="token selector">.datahead</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 12pt<span class="token punctuation">;</span> <span class="token property">font-family</span><span class="token punctuation">:</span> Arial<span class="token punctuation">;</span> <span class="token property">background-color</span><span class="token punctuation">:</span> #00ccff<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token comment">/* **********Found********** */</span>    <span class="token selector">#dataitem</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 8pt<span class="token punctuation">;</span> <span class="token property">font-family</span><span class="token punctuation">:</span> Arial<span class="token punctuation">;</span> <span class="token property">background-color</span><span class="token punctuation">:</span> #00ff00<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>STYLE</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SCRIPT</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">function</span> <span class="token function">fnChangeStyle</span><span class="token punctuation">(</span><span class="token parameter">sValue</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">/* **********Found********** */</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>sValue<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"CLEAR"</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  sValue<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'oScratch'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span>sValue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token comment">//alert(jskdkdf);&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'oScratch'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span>sValue<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SCRIPT</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>H1</span><span class="token punctuation">></span></span>请用样式表控制下列文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>H1</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- *********Found********* --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DIV</span> <span class="token attr-name">ID</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>oScratch<span class="token punctuation">"</span></span> <span class="token style-attr"><span class="token attr-name">STYLE</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">border</span><span class="token punctuation">:</span> 5px solid<span class="token punctuation">;</span> <span class="token property">border-color</span><span class="token punctuation">:</span> #101010<span class="token punctuation">;</span> <span class="token property">background-color</span><span class="token punctuation">:</span> #CFCFCF<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 12pt<span class="token punctuation">;</span> <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'Arial'</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>  为进一步适应新时期计算机应用技术的发展和人才市场需求的变化，教育部考试中心对NCRE考试体系进行调整，改革考试科目、考核内容和考试形式。从2013年下半年考试开始，将实施2013年版考试大纲，并按新体系开考各个考试级别。    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DIV</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>P</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TABLE</span> <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TR</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TD</span> <span class="token attr-name">CLASS</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>datahead<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>请选择你喜欢的颜色：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TD</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TR</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- *********Found********* --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TD</span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SELECT</span> <span class="token attr-name">ID</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataitem<span class="token punctuation">"</span></span> <span class="token attr-name">onchange</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fnChangeStyle(this.options[this.options.selectedIndex].text)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OPTION</span><span class="token punctuation">></span></span>Red    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OPTION</span><span class="token punctuation">></span></span>White    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OPTION</span><span class="token punctuation">></span></span>Blue    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OPTION</span><span class="token punctuation">></span></span>Yellow    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OPTION</span><span class="token punctuation">></span></span>Silver    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OPTION</span><span class="token punctuation">></span></span>Gold    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OPTION</span><span class="token punctuation">></span></span>CLEAR THIS RUNTIME STYLE    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SELECT</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TR</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TABLE</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>1-这种综合填空代码，我们一定得明白它给我们代码的逻辑再动手写，它定义了什么变量，在标签里面写了什么属性，分别对应了什么作用。</strong></p><p>2-这代码写的真的不行，还不如我自己来实现这个效果，简单多了，这里必须按照它的填空来写，哎。</p><h2 id="第三套"><a href="#第三套" class="headerlink" title="第三套"></a>第三套</h2><p>已经考过，太简单了。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1178.png" alt="1178"></p><h2 id="新增试题"><a href="#新增试题" class="headerlink" title="新增试题"></a>新增试题</h2>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web二级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3_02_optionsApi</title>
      <link href="archives/bc7bc313.html"/>
      <url>archives/bc7bc313.html</url>
      
        <content type="html"><![CDATA[<p>后续会学习setup，这些api都不会再使用了，但是我们必须学会这些基础，才能更好的学习setup</p><h2 id="v-on指令绑定事件"><a href="#v-on指令绑定事件" class="headerlink" title="v-on指令绑定事件"></a>v-on指令绑定事件</h2><p>以前我们就写过@click=“”，其实@是v-on:的语法糖</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1117.png" alt="1117"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1118.png" alt="1118"></p><p><strong>基本使用</strong></p><p>v-on不仅可以绑定click事件，原先学的dom事件都可以绑定，只是click事件比较常用。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">.box</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>      <span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.基本的写法 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>divClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.语法糖写法(重点掌握) --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>divClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 3.绑定的方法位置, 也可以写成一个表达式(不常用, 不推荐) --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; counter &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>increment<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!-- 这里counter++就直接是点击这个按钮会发生的程序，而不是有一个counter++名字的函数>>    &lt;button @click="counter++">+1&lt;/button>    &lt;!-- 4.绑定其他方法(掌握) --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span> <span class="token attr-name">@mousemove</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>divMousemove<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 5.元素绑定多个事件(掌握) --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>divClick<span class="token punctuation">"</span></span> <span class="token attr-name">@mousemove</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>divMousemove<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- &lt;div class="box" v-on="&#123; click: divClick, mousemove: divMousemove &#125;">&lt;/div> --></span>    <span class="token comment">&lt;!-- &lt;div class="box" @="&#123; click: divClick, mousemove: divMousemove &#125;">&lt;/div> --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          counter<span class="token operator">:</span> <span class="token number">0</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function">divClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"divClick"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>counter<span class="token operator">++</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function">divMousemove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"divMousemove"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>increment<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!--</span> <span class="token attr-name">这里counter++就直接是点击这个按钮会发生的程序，而不是有一个counter++名字的函数</span><span class="token punctuation">></span></span>><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>counter++<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如上，click里面不一定要绑定一个methods里的函数，也可以直接写表达式进去。(不建议，阅读性很差)</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"> <span class="token comment">&lt;!-- &lt;div class="box" v-on="&#123; click: divClick, mousemove: divMousemove &#125;">&lt;/div> --></span>  <span class="token comment">&lt;!-- &lt;div class="box" @="&#123; click: divClick, mousemove: divMousemove &#125;">&lt;/div> --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>divClick<span class="token punctuation">"</span></span> <span class="token attr-name">@mousemove</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>divMousemove<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>v-on可以同时绑定多个事件，如上代码，通常用第三种。</p><p><strong>v-on的传递参数</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1123.png" alt="1123"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.默认传递event对象 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn1Click<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.只有自己的参数 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn2Click(<span class="token punctuation">'</span>why<span class="token punctuation">'</span>, age)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 3.自己的参数和event对象 --></span>    <span class="token comment">&lt;!-- 在模板中想要明确的获取event对象: $event --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn3Click(<span class="token punctuation">'</span>why<span class="token punctuation">'</span>, age, $event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          message<span class="token operator">:</span> <span class="token string">"Hello Vue"</span><span class="token punctuation">,</span>          age<span class="token operator">:</span> <span class="token number">18</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1.默认参数: event对象</span>        <span class="token comment">// 总结: 如果在绑定事件的时候, 没有传递任何的参数, 那么event对象会被默认传递进来</span>        <span class="token function">btn1Click</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"btn1Click:"</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token comment">// 2.明确参数:</span>        <span class="token function">btn2Click</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"btn2Click:"</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token comment">// 3.明确参数+event对象</span>        <span class="token function">btn3Click</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"btn3Click:"</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> event<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>情况一：在事件绑定的时候不传入参数，也就是函数不加括号写东西进去，那么自动有一个默认参数event，里面包含了点击等各种信息。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn1Click<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>//前提是methods里面的函数写了一个形参如btn1Click(event)，如果是btn1Click()，那么也是没有event能在方法中被使用。  methods: &#123;        // 1.默认参数: event对象        // 总结: 如果在绑定事件的时候, 没有传递任何的参数, 那么event对象会被默认传递进来        btn1Click(event) &#123;          console.log("btn1Click:", event)        &#125;      &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>情况二：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn2Click(<span class="token punctuation">'</span>why<span class="token punctuation">'</span>, age)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>传入参数，上面的语句，虽然加了括号，但是不会直接去执行btn2Click这个函数，vue已经对它进行过特殊处理了</p><p>只有当事件触发的时候，它会把参数传递给methods里面声明的函数，然后执行。</p><p>但是我们传入了参数，默认参数event就会消失。如果我们既要传递自己的参数又要默认参数event，就是情况三</p><p>情况三：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn3Click(<span class="token punctuation">'</span>why<span class="token punctuation">'</span>, age, $event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>event必须前面加一个$符号，就能传入默认参数，这是vue规定的，记住就好。</p><h2 id="绑定事件v-on的修饰符用法"><a href="#绑定事件v-on的修饰符用法" class="headerlink" title="绑定事件v-on的修饰符用法"></a>绑定事件v-on的修饰符用法</h2><p>修饰符就可以自动帮我们完成一些操作，比如.stop就是阻止冒泡  .prevent就是阻止默认行为</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click.stop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h2><p><strong>v-if和v-else的demo</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 模板语法 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>names.length > 0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in names<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;item&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>当前names没有数据, 请求获取数据后展示<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          names<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上，v-if=“”中的条件成立的时候，才渲染li，不成立的话渲染一行h2,其中v-if和if语句一样成立与否看里面语句返回的布尔值。</p><p><strong>判断对象中的数据是否为空</strong></p><p>上面代码用了v-if和v-else，其中数据是数组，我们可以通过数组.length来判断有没有数据，那么对象怎么判断呢</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Object.keys(info).length<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们可以通过获取此对象的key来判断有没有数据，它会返回一个数组</p><p><strong>v-else-if</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>score > 90<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>优秀<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>score > 80<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>良好<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>score >= 60<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>及格<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>不及格<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          score<span class="token operator">:</span> <span class="token number">40</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1124.png" alt="1124"></p><p>也就是说，如果条件不成立，它不是通过上面dispaly;none来隐藏这个对象，它在浏览器中是根本就不会出现这个标签。</p><h2 id="template元素的使用"><a href="#template元素的使用" class="headerlink" title="template元素的使用"></a>template元素的使用</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1125.png" alt="1125"></p><p>也就是说，我们以前写指令，比如v-if，如果我们需要让这个指令控制多个元素的显示，一般通过div包裹这些元素（vue2中都是这样做），但是这样就会在浏览器中多出一个没必要的div标签，增加了性能损耗</p><p>所以在vue3有一个template标签元素，专门用来包括多个标签写指令，但是在浏览器中不会渲染它，节省了性能</p><p><strong>注意：</strong>你写了标签在template里面，那么必须给template写v-if等指令，否则不显示template内的内容。</p><p>而且template不能和v-show使用</p><h2 id="小案例二维码的显示和隐藏"><a href="#小案例二维码的显示和隐藏" class="headerlink" title="小案例二维码的显示和隐藏"></a>小案例二维码的显示和隐藏</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">img</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>切换<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isShowCode<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://game.gtimg.cn/images/yxzj/web201706/images/comm/floatwindow/wzry_qrcode.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          isShowCode<span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>isShowCode <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isShowCode        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="v-show的使用"><a href="#v-show的使用" class="headerlink" title="v-show的使用"></a>v-show的使用</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1126.png" alt="1126"></p><p>v-show和v-if作用一样，条件成立则显示元素。</p><p>1-v-show不成立的时候，浏览器中是由dom元素的，只是用display：none隐藏了，但是v-if就是直接消耗，标签直接无了</p><blockquote><p>注意这里是display：none不是display：hidden。</p><p>hidden隐藏后dom元素标签还存在，只是东西不见了，但是还占标准流。</p><p>none是不占标准流了，也就是说none后其他元素会顶替它的位置</p></blockquote><p>2-所以v-show不能使用template，因为template根本不会出现在浏览器中，那么v-show就无法通过给template来设置display来达到隐藏和显示效果，所以只能用div。</p><p>3-当一个元素需要经常判断显示隐藏就用v-show，因为如果用v-if就要来回创建销毁dom，会频繁引起回流重绘，导致性能降低。</p><h2 id="模板语法二"><a href="#模板语法二" class="headerlink" title="模板语法二"></a>模板语法二</h2><h3 id="v-for列表渲染"><a href="#v-for列表渲染" class="headerlink" title="v-for列表渲染"></a>v-for列表渲染</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1127.png" alt="1127"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">.item</span> <span class="token punctuation">&#123;</span>      <span class="token property">margin-top</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.item .title</span> <span class="token punctuation">&#123;</span>      <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.电影列表进行渲染 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>电影列表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>movie in movies<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; movie &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.电影列表同时有索引 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(movie, index) in movies<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;index + 1&#125;&#125; - &#123;&#123; movie &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 3.遍历数组复杂数据 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>商品列表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in products<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>商品: &#123;&#123;item.name&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>价格: &#123;&#123;item.price&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>秒杀: &#123;&#123;item.desc&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 1.movies</span>          movies<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"星际穿越"</span><span class="token punctuation">,</span> <span class="token string">"少年派"</span><span class="token punctuation">,</span> <span class="token string">"大话西游"</span><span class="token punctuation">,</span> <span class="token string">"哆啦A梦"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token comment">// 2.数组: 存放的是对象</span>          products<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">110</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"Macbook"</span><span class="token punctuation">,</span> price<span class="token operator">:</span> <span class="token number">9.9</span><span class="token punctuation">,</span> desc<span class="token operator">:</span> <span class="token string">"9.9秒杀, 快来抢购!"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">111</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"iPhone"</span><span class="token punctuation">,</span> price<span class="token operator">:</span> <span class="token number">8.8</span><span class="token punctuation">,</span> desc<span class="token operator">:</span> <span class="token string">"9.9秒杀, 快来抢购!"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> id<span class="token operator">:</span> <span class="token number">112</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"小米电脑"</span><span class="token punctuation">,</span> price<span class="token operator">:</span> <span class="token number">9.9</span><span class="token punctuation">,</span> desc<span class="token operator">:</span> <span class="token string">"9.9秒杀, 快来抢购!"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1-基本使用</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>movie in movies<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; movie &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>谁用了v-for，谁就会被渲染出多个，所以这里是写到li里面而不是ul里面</p><p>2-不仅遍历数据，还遍历索引，用括号即可。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(movie, index) in movies<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;index + 1&#125;&#125; - &#123;&#123; movie &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="v-for渲染类型"><a href="#v-for渲染类型" class="headerlink" title="v-for渲染类型"></a>v-for渲染类型</h3><p><strong>v-for也可以遍历对象和字符串和数字</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1128.png" alt="1128"></p><p>1-遍历对象，只写一个参数就是值value，写两个第二个是key，第三个是index索引（遍历数组的话，第一个是值，第二个是索引，没有键）</p><p>2-也可以遍历字符串，如abcd遍历在li，第一个li就是a，第二个li是b……</p><p>3-遍历数字的话，如上图二的代码，就是遍历1，2，3，4，5。。。。10</p><p>4-索引是从0开始的。</p><p><strong>注意</strong>：v-for是写在需要遍历的标签上，如上是写在li而不是ul里面。</p><h3 id="数组更新的检测"><a href="#数组更新的检测" class="headerlink" title="数组更新的检测"></a>数组更新的检测</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1129.png" alt="1129"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in names<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; item &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeArray<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改数组<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          names<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"abc"</span><span class="token punctuation">,</span> <span class="token string">"cba"</span><span class="token punctuation">,</span> <span class="token string">"nba"</span><span class="token punctuation">,</span> <span class="token string">"aaa"</span><span class="token punctuation">,</span> <span class="token string">"ccc"</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function">changeArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 1.直接将数组修改为一个新的数组</span>          <span class="token comment">// this.names = ["why", "kobe"]</span>          <span class="token comment">// 2.通过一些数组的方法, 修改数组中的元素</span>          <span class="token comment">// this.names.push("why")</span>          <span class="token comment">// this.names.pop()</span>          <span class="token comment">// this.names.splice(2, 1, "why")</span>          <span class="token comment">// this.names.sort()</span>          <span class="token comment">// this.names.reverse()</span>          <span class="token comment">// 3.不修改原数组的方法是不能侦听(watch)</span>          <span class="token keyword">const</span> newNames <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>names<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item <span class="token operator">+</span> <span class="token string">"why"</span><span class="token punctuation">)</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>names <span class="token operator">=</span> newNames        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也就是说，当我们使用v-for渲染一个数组中的内容，这个数组发生改变，那么渲染也会发生改变</p><p>但是如果是使用map这些方法，没有修改原数组，就不会被重新渲染</p><p>tips：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in names<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; item &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中的in在vue3中新增了一个写法，就是把in写成of，效果和作用是一样的。</p><h3 id="v-for的key属性"><a href="#v-for的key属性" class="headerlink" title="v-for的key属性"></a>v-for的key属性</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1130.png" alt="1130"></p><p>所以说key是用于在虚拟dom的diff算法中，来识别新老vnode的</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">注意：一般在v-for遍历的标签中加key属性，它和下面语句的key不同<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>（item，key，index） in object<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; item &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>一个是标签属性，一个是遍历对象里面的属性名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1131.png" alt="1131"></p><blockquote><p>vnode并不是那个node环境，而是虚拟节点，它本质上是javascript对象 </p></blockquote><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1132.png" alt="1132"></p><p>当我们在template中写了div这些元素代码，首先会形成一个vnode，它本质是一个对象，然后浏览器解析这些vnode对象就会形成一个虚拟dom，然后虚拟dom通过diff虚拟dom算法会决定哪些dom需要修改，哪些不需要，再生成真实dom</p><blockquote><p><strong>VNode是javascript对象,VNode表示Virtual DOM(虚拟DOM)中的虚拟节点</strong></p></blockquote><p><strong>为什么不直接创建真实dom</strong></p><p><strong>1-方便diff算法</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1134.png" alt="1134"></p><p>虚拟dom的diff会去比较新数据和老数据，遇到相同的就直接复用，不同的再重新生成虚拟dom，然后再生成真实dom</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1136.png" alt="1136"></p><p><strong>过程一：如果不设置key属性</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1137.png" alt="1137"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1135.png" alt="1135"></p><p>如果我们是插入一个数据，而且不设置key属性，那么插入前的数据会复用，但是插入后的地方入上图插入f，会把原来c的vdom给f（li元素的dom不变，但是修改内容），然后原来d的vdom再给c，然后会发现原来e的vdom没位置了，就会再生成一个vnode来接收e；</p><p> 那么明显这种算法的效率很低，如果是追加数据，相较于初数据，就在后面添加还好，如果 是插入的话，那么插入位置，原来的vdom全部要发生改变。  所以我们需要设置key属性</p><p><strong>过程二：设置了key属性</strong></p><p>key一般是绑定id，因为key是不能变的，是用来识别前后两次数据内容是否一样，如果key会变，那么它毫无意义</p><p>如果我们设置了key属性，那么abcde都有key，当我们插入f，abcde都会直接复用，在b后面再生成一个f的vnode即可。    可以大大节约性能</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1138.png" alt="1138"></p><p><strong>2-方便跨平台</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1133.png" alt="1133"></p><p>因为虚拟dom树由一个个vnode组成，所以说它本质是一个js对象，我们可以把这个对象通过不同的解析方式在不同平台解析，可以在浏览器形成我们现在学的虚拟dom，也可以渲染到移动端上，而且不是以h5形式而是以原生的iOS或者安卓组件，甚至vr设备上。</p><h2 id="options-Api"><a href="#options-Api" class="headerlink" title="options Api"></a>options Api</h2><p>optionsApi就是data和methods和template那些东西</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1139.png" alt="1139"></p><h3 id="computed计算属性使用"><a href="#computed计算属性使用" class="headerlink" title="computed计算属性使用"></a>computed计算属性使用</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 插值语法表达式直接进行拼接 --></span>    <span class="token comment">&lt;!-- 1.拼接名字 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; firstName + " " + lastName &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; firstName + " " + lastName &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; firstName + " " + lastName &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.显示分数等级 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; score >= 60 ? '及格': '不及格' &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 3.反转单词显示文本 --></span>      <span class="token comment">&lt;!-- 通过split把字符串以空格分开转化为数组，通过reverse反转数组，再通过join把数组变成字符串以空格隔开--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; message.split(" ").reverse().join(" ") &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 1.姓名</span>          firstName<span class="token operator">:</span> <span class="token string">"kobe"</span><span class="token punctuation">,</span>          lastName<span class="token operator">:</span> <span class="token string">"bryant"</span><span class="token punctuation">,</span>          <span class="token comment">// 2.分数: 及格/不及格</span>          score<span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>          <span class="token comment">// 3.一串文本: 对文本中的单词进行反转显示</span>          message<span class="token operator">:</span> <span class="token string">"my name is why"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1140.png" alt="1140"></p><p><strong>方法一：抽取方法到methods中</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 插值语法表达式直接进行拼接 --></span>    <span class="token comment">&lt;!-- 1.拼接名字 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; getFullname() &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; getFullname() &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; getFullname() &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.显示分数等级 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; getScoreLevel() &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 3.反转单词显示文本 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; reverseMessage() &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 1.姓名</span>          firstName<span class="token operator">:</span> <span class="token string">"kobe"</span><span class="token punctuation">,</span>          lastName<span class="token operator">:</span> <span class="token string">"bryant"</span><span class="token punctuation">,</span>          <span class="token comment">// 2.分数: 及格/不及格</span>          score<span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>          <span class="token comment">// 3.一串文本: 对文本中的单词进行反转显示</span>          message<span class="token operator">:</span> <span class="token string">"my name is why"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function">getFullname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function">getScoreLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>score <span class="token operator">>=</span> <span class="token number">60</span> <span class="token operator">?</span> <span class="token string">"及格"</span><span class="token operator">:</span> <span class="token string">"不及格"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function">reverseMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>split是把字符串按照设置字符分割为数组；join是把数组变成字符串，通过设置的字符分隔。</p><p>​          return this.message.split(“ “).reverse().join(“ “)</p><p>为什么要转换为数组？</p><p>因为reserve方法是给数组用的，字符串用不了</p></blockquote><p><strong>方法二：使用计算属性computed</strong></p><p>响应式数据通俗说，就是用了data里面的数据；  computed也属于optionsApi</p><p>computed里面和methods一样也可以直接通过this来使用data里面返回的变量（因为vue底层通过bind等重定向了this）</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1141.png" alt="1141"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.methods --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; getFullname() &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; getFullname() &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; getFullname() &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.computed --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; fullname &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; fullname &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; fullname &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 修改name值 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeLastname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改lastname<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          firstName<span class="token operator">:</span> <span class="token string">"kobe"</span><span class="token punctuation">,</span>          lastName<span class="token operator">:</span> <span class="token string">"bryant"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function">getFullname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"getFullname-----"</span><span class="token punctuation">)</span>          <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function">changeLastname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>lastName <span class="token operator">=</span> <span class="token string">"why"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function">fullname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"computed fullname-----"</span><span class="token punctuation">)</span>          <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>我们乍一看，好像和写在methods里面的方法没什么区别呀？</strong></p><p>1-写在computed可以更易读，数据处理就在conputed，触发事件就在methods</p><blockquote><p>2-computed写在大胡子语法里面，不需要加（） 。</p></blockquote><h3 id="computed和methods区别"><a href="#computed和methods区别" class="headerlink" title="computed和methods区别"></a>computed和methods区别</h3><p>computed和methods最大的区别是，computed是有缓存的。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1142.png" alt="1142"></p><p>也就是说，如果我们用methods中的函数来显示数据，不同的地方用了多少次这个数据，这个函数就会被调用多少次。</p><p>但是如果用computed那么只要一个地方使用了，运行一次函数，其他地方再使用，将不会再运行函数，而是直接用缓存去显示（vue底层自己的优化）,只有数据发生变化，才会再次调用函数。</p><h3 id="computed的set和get"><a href="#computed的set和get" class="headerlink" title="computed的set和get"></a>computed的set和get</h3><p>下面是计算属性的完整写法，一般开发很少这样写。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; fullname &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setFullname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>设置fullname<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          firstname<span class="token operator">:</span> <span class="token string">"coder"</span><span class="token punctuation">,</span>          lastname<span class="token operator">:</span> <span class="token string">"why"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 语法糖的写法</span>        <span class="token comment">// fullname() &#123;</span>        <span class="token comment">//   return this.firstname + " " + this.lastname</span>        <span class="token comment">// &#125;,</span>                <span class="token comment">// 完整的写法:</span>        fullname<span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstname <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastname          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> names <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>firstname <span class="token operator">=</span> names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>lastname <span class="token operator">=</span> names<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function">setFullname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>fullname <span class="token operator">=</span> <span class="token string">"kobe bryant"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完整写法下，其实是写成一个对象，如上代码，当我们通过this.fullname给他赋值的时候，这个值实际上去到了set方法的value中（在运行的时候，只执行get一遍，当我们触发上面代码的设置fullname值的事件，会执行一遍set，再执行一遍get）</p><p>如下代码，如果computed没有set属性，那么 this.fullname就是get返回的值</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">this.fullname = "kobe bryant"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果我们人为设置了this.fullname属性的值，那么这个值就会变成set属性对应函数的参数传递到set内（set属性对应的函数的语句是自己编写的，我们如果自己不写set，也就不会去设置fullname属性的值）</p><p>在实际开发中，我们都不用set，所以get和set都可以省略成一个语法糖的形式，如fullname（）{return this.firstname + “ “ + this.lastname}</p><p>为什么在使用的时候可以直接写fullname使用，不需要加括号调用呢？，如</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; fullname &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可能是get方法有内置的一些机制。（现在我们记住就好了，后续会研究底层）</p><blockquote><p>为什么computed里面的“函数”在插值语法里面不要想methods函数一样写小括号呢？</p><p>因为我们开发中一般不设置set，那么其实就只有一个get属性对应的函数，js对象的高级写法就可以省略成语法糖的样子，只是进行了两重省略。平时对象的高级写法只省略了一次。</p></blockquote><h3 id="侦听器watch选项使用"><a href="#侦听器watch选项使用" class="headerlink" title="侦听器watch选项使用"></a>侦听器watch选项使用</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1143.png" alt="1143"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123;message&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeMessage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改message<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// Proxy -> Reflect</span>    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          message<span class="token operator">:</span> <span class="token string">"Hello Vue"</span><span class="token punctuation">,</span>          info<span class="token operator">:</span> <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">"why"</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function">changeMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token string">"你好啊, 李银河!"</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>info <span class="token operator">=</span> <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">"kobe"</span> <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      watch<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1.默认有两个参数: newValue/oldValue</span>        <span class="token function">message</span><span class="token punctuation">(</span><span class="token parameter">newValue<span class="token punctuation">,</span> oldValue</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"message数据发生了变化:"</span><span class="token punctuation">,</span> newValue<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function">info</span><span class="token punctuation">(</span><span class="token parameter">newValue<span class="token punctuation">,</span> oldValue</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 2.如果是对象类型, 那么拿到的是代理对象</span>          <span class="token comment">// console.log("info数据发生了变化:", newValue, oldValue)</span>          <span class="token comment">// console.log(newValue.name, oldValue.name)</span>          <span class="token comment">// 3.获取原生对象</span>          <span class="token comment">// console.log(&#123; ...newValue &#125;)</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Vue<span class="token punctuation">.</span><span class="token function">toRaw</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1-如上代码，比如监听data中的message，我们就在watch对象中写一个message(){}，你侦听哪个数据a就把函数写成什么名字； 别问为什么，底层就是这样设置的，得去研究源码。</p><p>当message发生改变，那么就会自动执行watch中的message()函数</p><p>2-如果我们要获取到数据改变的数据和当前最新的数据，可以写两个参数，newValue和oldValue（随便命名，第一个是新数据，第二个是老数据）</p><h3 id="watch中的immediate和deep"><a href="#watch中的immediate和deep" class="headerlink" title="watch中的immediate和deep"></a>watch中的immediate和deep</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; info.name &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeInfo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          info<span class="token operator">:</span> <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">"why"</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function">changeInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 1.创建一个新对象, 赋值给info</span>          <span class="token comment">// this.info = &#123; name: "kobe" &#125;</span>          <span class="token comment">// 2.直接修改原对象某一个属性</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>info<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"kobe"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      watch<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 默认watch监听不会进行深度监听</span>        <span class="token comment">// info(newValue, oldValue) &#123;</span>        <span class="token comment">//   console.log("侦听到info改变:", newValue, oldValue)</span>        <span class="token comment">// &#125;</span>        <span class="token comment">// 进行深度监听</span>        info<span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token function">handler</span><span class="token punctuation">(</span><span class="token parameter">newValue<span class="token punctuation">,</span> oldValue</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"侦听到info改变:"</span><span class="token punctuation">,</span> newValue<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newValue <span class="token operator">===</span> oldValue<span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token comment">// 监听器选项:</span>          <span class="token comment">// info进行深度监听</span>          deep<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>          <span class="token comment">// 第一次渲染直接执行一次监听器</span>          immediate<span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token comment">//下面是vue2写法，了解一下</span>        <span class="token string">"info.name"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">newValue<span class="token punctuation">,</span> oldValue</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"name发生改变:"</span><span class="token punctuation">,</span> newValue<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>   </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1-如上的监听info，如果我们不需要配置什么的，直接写info（）{}即可，这是完整写法的语法糖</p><p>2-但是不配置，默认其实是浅监听，也就是说当上面代码info对象没有重新赋值，只是修改了里面的某个属性，是监听不到的，我们需要通过完整写法，设置deep：true</p><p>3-完整写法中有一个handler函数（不写完整写法，那么这个handler函数就通过对象的高级写法省略了，如果写完整写法，那么这个函数必须叫handler这是vue底层设置的，其实handler也是一个对象的高级写法，已经省略一次了），immediate配置是让第一次渲染直接执行一次监听器</p><h3 id="监听器的其他写法"><a href="#监听器的其他写法" class="headerlink" title="监听器的其他写法"></a>监听器的其他写法</h3><p>了解即可，很少很少使用</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1144.png" alt="1144"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1145.png" alt="1145"></p><h2 id="阶段性综合案例"><a href="#阶段性综合案例" class="headerlink" title="阶段性综合案例"></a>阶段性综合案例</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1146.png" alt="1146"></p><p><strong>这种综合案例和我们实际开发中的项目都是一样的，我们需要先写出页面，然后再去考虑逻辑，添加事件等等</strong></p><p><strong>注意我们要去使用vue，不要自己习惯性的去操作dom</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">table</span> <span class="token punctuation">&#123;</span>      <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span>      <span class="token comment">/* text-align: center; */</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">thead</span> <span class="token punctuation">&#123;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> #f5f5f5<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">th, td</span> <span class="token punctuation">&#123;</span>      <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #aaa<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 8px 16px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.active</span> <span class="token punctuation">&#123;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.搭建界面内容 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>books.length<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>序号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>书籍名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>出版日期<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>价格<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>购买数量<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>          <span class="token comment">&lt;!-- 注意这里是如何绑定id的，key也是一个属性，所以需要v-bind --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(item, index) in books<span class="token punctuation">"</span></span>               <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.id<span class="token punctuation">"</span></span>              <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rowClick(index)<span class="token punctuation">"</span></span>              <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; active: index === currentIndex &#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>&#123;&#123; index + 1 &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>&#123;&#123; item.name &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>&#123;&#123; item.date &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>&#123;&#123; formatPrice(item.price) &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.count &lt;= 1<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>decrement(index, item)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>              &#123;&#123; item.count &#125;&#125;              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>increment(index, item)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>removeBook(index, item)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>移除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>总价: &#123;&#123; formatPrice(totalPrice) &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>购物车为空, 请添加喜欢的书籍~<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>商场中有大量的IT类的书籍, 请选择添加学习, 注意保护好自己的头发!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./data/data.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          books<span class="token operator">:</span> books<span class="token punctuation">,</span>          currentIndex<span class="token operator">:</span> <span class="token number">0</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token comment">// computed</span>      computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function">totalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 1.直接遍历books</span>          <span class="token comment">// let price = 0</span>          <span class="token comment">// for (const item of this.books) &#123;</span>          <span class="token comment">//   price += item.price * item.count</span>          <span class="token comment">// &#125;</span>          <span class="token comment">// return price</span>          <span class="token comment">// 2.reduce(自己决定,遍历方法很多种，选你最熟练的)</span>          <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">preValue<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> preValue <span class="token operator">+</span> item<span class="token punctuation">.</span>price <span class="token operator">*</span> item<span class="token punctuation">.</span>count          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//这里是格式化价格，就是把所有价格前加一个￥</span>        <span class="token comment">//我们也可以直接把￥写在template里面，但是需要写很多个</span>        <span class="token comment">//当某一天这个￥要变成$，那么就更难改了，如果我们封装一个方法，那么就只需要改下面一处</span>        <span class="token function">formatPrice</span><span class="token punctuation">(</span><span class="token parameter">price</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> <span class="token string">"¥"</span> <span class="token operator">+</span> price        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token comment">// 监听-和+操作</span>        <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"点击-"</span><span class="token punctuation">)</span>          <span class="token comment">// this.books[index].count--</span>          item<span class="token punctuation">.</span>count<span class="token operator">--</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function">increment</span><span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"点击+:"</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span>          <span class="token comment">// this.books[index].count++</span>          item<span class="token punctuation">.</span>count<span class="token operator">++</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function">removeBook</span><span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function">rowClick</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">=</span> index        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>data.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> books <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    name<span class="token operator">:</span> <span class="token string">'《算法导论》'</span><span class="token punctuation">,</span>    date<span class="token operator">:</span> <span class="token string">'2006-9'</span><span class="token punctuation">,</span>    price<span class="token operator">:</span> <span class="token number">85.00</span><span class="token punctuation">,</span>    count<span class="token operator">:</span> <span class="token number">1</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>    id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>    name<span class="token operator">:</span> <span class="token string">'《UNIX编程艺术》'</span><span class="token punctuation">,</span>    date<span class="token operator">:</span> <span class="token string">'2006-2'</span><span class="token punctuation">,</span>    price<span class="token operator">:</span> <span class="token number">59.00</span><span class="token punctuation">,</span>    count<span class="token operator">:</span> <span class="token number">1</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>    id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>    name<span class="token operator">:</span> <span class="token string">'《编程珠玑》'</span><span class="token punctuation">,</span>    date<span class="token operator">:</span> <span class="token string">'2008-10'</span><span class="token punctuation">,</span>    price<span class="token operator">:</span> <span class="token number">39.00</span><span class="token punctuation">,</span>    count<span class="token operator">:</span> <span class="token number">1</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>    id<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>    name<span class="token operator">:</span> <span class="token string">'《代码大全》'</span><span class="token punctuation">,</span>    date<span class="token operator">:</span> <span class="token string">'2006-3'</span><span class="token punctuation">,</span>    price<span class="token operator">:</span> <span class="token number">128.00</span><span class="token punctuation">,</span>    count<span class="token operator">:</span> <span class="token number">1</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>    id<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    name<span class="token operator">:</span> <span class="token string">'《你不知道JavaScript》'</span><span class="token punctuation">,</span>    date<span class="token operator">:</span> <span class="token string">'2014-8'</span><span class="token punctuation">,</span>    price<span class="token operator">:</span> <span class="token number">88.00</span><span class="token punctuation">,</span>    count<span class="token operator">:</span> <span class="token number">1</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>邂逅Vue3_01_MVVM模板语法</title>
      <link href="archives/9fa8673d.html"/>
      <url>archives/9fa8673d.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>无论学习什么东西，你想记住它，就得赋予意义！</strong></p><p><strong>对于前后端来说，就是找到此知识点运用在何种需求，思考为什么要这样做，学了它有什么用？</strong></p><p><strong>学IT就得自己去敲代码，用的多了就记住了，反复去看去记是没用的，过两天就忘。</strong></p></blockquote><p><strong>问题：</strong></p><p>vue代码块在hexo生成的网页中因为highlight插件的原因，无法正确高亮，我将用html代替</p><p>如下图，实际上这是一段vue代码，但为了在网页中实现代码高亮，便于阅读，我将用html代替</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1271.png" alt="1271"></p><p>tips：</p><p>1-编辑文件文字的时候，突然点一个地方，如果写入必须删了那个字，而不能插入。是因为进入了“覆盖(Overwrite)”模式。切换“插入/覆盖”的默认快捷键是Insert。</p><p>2-f5是刷新网页，但是会走缓存，ctrl+f5是强制刷新重新获取资源。</p><p>3-在最新的vscode中，！已经无法自动生成html模板了（可以在设置的use inline completions中打开），我们可以输入doc生成</p><h2 id="认识Vue"><a href="#认识Vue" class="headerlink" title="认识Vue"></a>认识Vue</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1092.png" alt="1092"></p><p>渐进式表示你这个项目不止可以使用vue，也可以使用原生代码，或者其他js库开发，也可以全部用vue开发（在实际开发中一般整个项目全用vue）。</p><p><strong>vue在前端的位置</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1093.png" alt="1093"></p><p>1-Angular编写门槛高，写它必须会TypeScript，在国内使用较少，可以不学。</p><p>2-React是必学的，但是和Vue相比，得先学Vue，如果时间紧迫react可以等找到工作了再学也没有问题（一般工资18k以上必须会react）</p><p>3-Vue框架是当前中国市场开发项目使用最多的前端框架，必须学习。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1094.png" alt="1094"></p><p><strong>2022学vue2还是vue3？</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1095.png" alt="1095"></p><p>vue3是向下兼容的，基础和概念都一模一样的，而且现在的新项目都是vue3和ty结合</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1096.png" alt="1096"></p><p>Vue3相比Vue2，性能更好，包体积更小，支持typescript，有更好的API设计</p><h2 id="Vue的使用"><a href="#Vue的使用" class="headerlink" title="Vue的使用"></a>Vue的使用</h2><p>1-在初学VUE基础语法的使用，我们通过cdn引入或者下载源码js文件手动引入</p><p>2-在后续我们会通过npm引入，或者Vuecli脚手架直接创建Vue项目</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1097.png" alt="1097"></p><h3 id="cnd引入"><a href="#cnd引入" class="headerlink" title="cnd引入"></a>cnd引入</h3><p>记住你引入vue的时候，必须放在其他script的上面，因为是从上到下执行的，你不先引入vue的代码，后面的script根本没法执行。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>我是原生的html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/vue@next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">//创造app</span>        <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            template<span class="token operator">:</span> <span class="token string">'&lt;h2>vue初体验&lt;/h2>'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token comment">//挂载</span>        app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>template模板，mount挂载嵌入</p><p>1-我们写入原生的html</p><p>2-通过script引入vue的cdn文件，<a href="https://unpkg.com/vue@next%E6%98%AF%E6%9C%80%E6%96%B0%E7%9A%84vue%E6%BA%90%E7%A0%81cdn">https://unpkg.com/vue@next是最新的vue源码cdn</a></p><p>3-Vue是一个全局对象，里面有一个createApp函数方法，注意Vue.createApp()必须大写V</p><p>4-在方法内传入一个对象，对象中有一个template属性，里面反引号加入原生的html代码</p><p>5-createApp会返回一个对象，我们需要定义一个变量接收</p><p>6-接收的对象会有一个mount函数，把它的内容挂载到html的标签上，通过id选中识别（只要是选择器都可以）。</p><p>注意：这个mount函数是挂载，不是后加，比如上面是挂载到div中，如果div起初就有内容，会被覆盖掉。</p><blockquote><p>遇到问题，或者样式没按预期发展，我们第一时间得去看控制台输出了什么提示，不要逮着代码去找原因，也许就是一个字母写错了，你看一年也找不出来。</p></blockquote><p><strong>本地引入</strong></p><p>本地引入就把远程的cdn里面的代码复制下来，然后创造lib/vue.js粘贴进去就好了，然后引入。</p><p>本地引入速度是比cdn快的，cdn毕竟要请求网络，然后下载源码。</p><h3 id="动态展示数据"><a href="#动态展示数据" class="headerlink" title="动态展示数据"></a>动态展示数据</h3><p><strong>插值语法</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我这里写再多内容都没用，会被下面的app挂载覆盖<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/vue@next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> app <span class="token operator">=</span>Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">            &lt;a>&#123;&#123;title&#125;&#125;&lt;/a>            &lt;h2>&#123;&#123;message&#125;&#125;&lt;/h2></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>            <span class="token function-variable function">data</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span><span class="token punctuation">&#123;</span>                    title<span class="token operator">:</span><span class="token string">"插值语法"</span><span class="token punctuation">,</span>                    message<span class="token operator">:</span><span class="token string">"你好VUE"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'.demo'</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>我们通过写一个data属性（这个template和data不能随便命名的，这是vue底层规定的，必须这样写）</strong></p><p><strong>然后data属性规定是一个函数，函数内return一个对象，包含了需要使用的变量等</strong></p><p>然后通过两个大括号写入数据。</p><p><strong>动态的列表数据</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我这里写再多内容都没用，会被下面的app挂载覆盖<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/vue@next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">            &lt;h2>&#123;&#123;title&#125;&#125;&lt;/h2>            &lt;ul>                &lt;li v-for="item in movies"> &#123;&#123;item&#125;&#125;&lt;/li>               &lt;/ul></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>            <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                    title<span class="token operator">:</span> <span class="token string">"插值语法"</span><span class="token punctuation">,</span>                    message<span class="token operator">:</span> <span class="token string">"你好VUE"</span><span class="token punctuation">,</span>                    movies<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'超体'</span><span class="token punctuation">,</span> <span class="token string">"盗梦空间"</span><span class="token punctuation">,</span> <span class="token string">'了不起的盖茨比'</span><span class="token punctuation">]</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'.demo'</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们可以有多少数据就写多少个li标签，然后,……..写入进去，当前这是不可能的太麻烦了</p><p>我们可以通过v-for=“item in movies”来遍历数据，然后插入列表。</p><p><strong>计数器功能实现</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1098.png" alt="1098"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jishuqi<span class="token punctuation">"</span></span> <span class="token attr-name">app</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/vue@next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">        &lt;h2>当前计数：&#123;&#123;counter&#125;&#125;&lt;/h2>        &lt;button @click="jia" >+1&lt;/button>        &lt;button @click="jian" >-1&lt;/button>        </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>            <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                    counter<span class="token operator">:</span> <span class="token number">0</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token function-variable function">jia</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>counter<span class="token operator">++</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function-variable function">jian</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>counter<span class="token operator">--</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#jishuqi"</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1-通过template把样式写好</p><p>2-学习新的一个属性，methods，里面写一个对象，包含不同的方法函数。</p><p>3-在标签里面通过@click=”方法名”来实现调用，而不是以前的原生dom截取监听事件。</p><p><strong>问题：上面代码你这个jian里面的this怎么能控制我data里面的counter？</strong></p><p>因为这些vue底层通过proxy和bind方法这些，重定向了this的指向，这里的this可以代理data里面函数返回的那个对象，我们知道就好了，深入源码底层的时候就全明白了。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1107.png" alt="1107"></p><p><strong>代码重构</strong></p><p>我们template也可以直接删，然后把样式标签直接写在要挂载的那个标签内</p><p>如果我们写了template默认是会覆盖掉挂载标签的内容的，<em>不写template就默认挂载标签内容为模板</em></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jishuqi<span class="token punctuation">"</span></span> <span class="token attr-name">app</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>当前计数：&#123;&#123;counter&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jia<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jian<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/vue@next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                    counter<span class="token operator">:</span> <span class="token number">0</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token function-variable function">jia</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>counter<span class="token operator">++</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function-variable function">jian</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>counter<span class="token operator">--</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#jishuqi"</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>声明式编程和命令式编程</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1100.png" alt="1100"></p><p>1-我们原生的js就是命令式编程，一步一步的写入命令，操作dom</p><p>2-vue和小程序和react都是声明式编程，你声明了一些东西，互相绑定好数据关系即可</p><p>3-声明式编程底层也是去操作dom，但是不需要我们本人去写了。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1101.png" alt="1101"></p><h2 id="MVVM模型"><a href="#MVVM模型" class="headerlink" title="MVVM模型"></a>MVVM模型</h2><p>modol模型通俗来说就是数据</p><p>view就是html这些视图</p><p>controller就是js，是来控制东西的，让视图和数据结合绑定起来</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1102.png" alt="1102"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1103.png" alt="1103"></p><p>在vue中，vue框架就担任了view-modol的角色，它即会底层操作dom也会把view视图和model数据结合起来。</p><blockquote><p>简单的说，Controller所要担任的任务更加全面，包括了很多的业务逻辑。而ViewModel则简化甚至剔除了业务逻辑，主要的工作就只是把Model中的数据组装成适合View使用的数据。<br>相对于Vue来说，Angular确实算得上MVC框架。其实吧，对于前端来说，只需要很少甚至不需要业务逻辑，所以MVC这种后端设计结构其实并不适合。所以随着MVP、MVVM这种弱化业务逻辑的结构在前端领域变得越来越流行。</p></blockquote><blockquote><p>MVC<br>路由至控制器内,需要在控制器自己处理model(data), 然后进行重新渲染生成view(UI)</p><p>MVVM<br>数据驱动式，一旦model有变化, 其view(UI)就会改变.</p></blockquote><h2 id="data属性"><a href="#data属性" class="headerlink" title="data属性"></a>data属性</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1105.png" alt="1105"></p><p>data数据是如何被展示的</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1104.png" alt="1104"></p><p>首先在html渲染中，发现了两个大括号这种插入语法，就说明需要用到了data里面返回的数据对象，然后vue底层会对这个对象进行监听劫持，在vue2中是通过defineproperty，在vue3是通过proxy，一旦发现data内返回的数据对象发生改变，马上在view视图也就是html中也改变。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123;message&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeMessage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>改变message内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/vue@next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span><span class="token punctuation">&#123;</span>                    message<span class="token operator">:</span><span class="token string">'你好世界'</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            methods<span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token function-variable function">changeMessage</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token operator">=</span><span class="token string">'你好瑾年'</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">//这种写法也可以，但是不能写箭头函数</span>                <span class="token comment">// changeMessage()&#123;</span>                 <span class="token comment">//   this.message='你好瑾年'</span>               <span class="token comment">// &#125;</span>            <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'.demo'</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面为什么可以data(){}这样写？不是应该data:function(){}吗？</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">https://www.cnblogs.com/zsh-blogs/p/12963108.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="methods属性"><a href="#methods属性" class="headerlink" title="methods属性"></a>methods属性</h2><p>methods属性中的对象是不能写成箭头函数的，在js高级我们知道箭头函数的this是沿用与上一层的this（一般结构下会指向全局window），那么就无法调用到data里面的数据了。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1106.png" alt="1106"></p><h2 id="vscode生成代码片段"><a href="#vscode生成代码片段" class="headerlink" title="vscode生成代码片段"></a>vscode生成代码片段</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1109.png"></p><p>代码片段就是按几个键，直接生成一个html或者js或者c等等文件的模板</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1108.png" alt="1108"></p><p>选择html.json,然后进入网站snippet-generator.app，复制以后每次要一键生成的代码，然后生成json代码复制到html.json中</p><p>下图中的vueapp就是模板快捷字符，我们只需要在编辑器输入vueapp就能生成这个代码</p><p>create vue app是这段json的描述，随便写什么无伤大雅。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1110.png" alt="1110"></p><h2 id="模板template语法"><a href="#模板template语法" class="headerlink" title="模板template语法"></a>模板template语法</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1111.png" alt="1111"></p><h3 id="插值语法"><a href="#插值语法" class="headerlink" title="插值语法"></a>插值语法</h3><p>1-查找语法也叫大胡子语法，因为两个大括号很想一个大胡子</p><p>2-{ { } }中不仅可以写简单的变量，还可以写成表达式，甚至是三元运算符和有返回值的函数</p><p>为什么可以呢？因为表达式和运算符和函数调用后，最终都会返回一个值的，显示就显示那个值。</p><p>3-但是它里面不能定义语句，如{ {const i =1 }  },很简单因为它没有返回值出来。</p><p><strong>注意：</strong> 使用插值语法必须让它和vue有联系，你如果直接写html写一个p标签，里面就写插值语法是没用的，必须有挂载。</p><p>其次是template后是反引号``，不是双引号。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.基本使用 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; message &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>当前计数: &#123;&#123; counter &#125;&#125; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.表达式 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>计数双倍: &#123;&#123; counter * 2 &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>展示的信息: &#123;&#123; info.split(" ") &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 3.三元运算符 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; age >= 18? "成年人": "未成年人" &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 4.调用methods中函数 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; formatDate(time) &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 5.注意: 这里不能定义语句 --></span>    <span class="token comment">&lt;!-- &lt;h2>&#123;&#123; const name = "why" &#125;&#125;&lt;/h2> --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          message<span class="token operator">:</span> <span class="token string">"Hello Vue"</span><span class="token punctuation">,</span>          counter<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>          info<span class="token operator">:</span> <span class="token string">"my name is why"</span><span class="token punctuation">,</span>          age<span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>          time<span class="token operator">:</span> <span class="token number">123</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function-variable function">formatDate</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">date</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> <span class="token string">"2022-10-10-"</span> <span class="token operator">+</span> date        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="v-once了解"><a href="#v-once了解" class="headerlink" title="v-once了解"></a>v-once了解</h3><p>v-once，v-for,v-text等等都是写在标签内的，它算是标签的一个属性。</p><p>v-once表示此标签内的内容（包括此标签包含的后代标签），只渲染一次，后续你怎么操作让它改变，都改不了的。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 指令: v-once --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-once</span><span class="token punctuation">></span></span>      &#123;&#123; message &#125;&#125;      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>数字: &#123;&#123;counter&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>&#123;&#123;message&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeMessage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>改变message<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          message<span class="token operator">:</span> <span class="token string">"Hello Vue"</span><span class="token punctuation">,</span>          counter<span class="token operator">:</span> <span class="token number">100</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function-variable function">changeMessage</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token string">"你好啊, 李银河"</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>counter <span class="token operator">+=</span> <span class="token number">100</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>counter<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="v-text了解"><a href="#v-text了解" class="headerlink" title="v-text了解"></a>v-text了解</h3><p>它是用于改变元素的contenttext的，和大胡子语法{ { } }差不多，而且没那么灵活。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span> aa &#123;&#123;message&#125;&#125; bbb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>aaa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          message<span class="token operator">:</span> <span class="token string">"Hello Vue"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如上代码，  &lt; h 2  v-text=”message”&gt;aaa &lt; /h 2&gt;</p></blockquote><p>我们可以把data里面的返回值写入h2元素标签，但是它是指定的一个值，即使h2里面有‘’aaa‘，也会被message变量的值覆盖。  所以没有{ { } }灵活</p><h3 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h3><p>它可以给一个标签插入html代码并解析</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>&#123;&#123; content &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          content<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;span style="color: red; font-size: 30px;">哈哈哈&lt;/span></span><span class="token template-punctuation string">`</span></span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如上把content变量写入h2中，在浏览器中会把content中的代码变成h2的子元素，也就是&lt; h  2&gt;<sp a n>哈哈哈</span>&lt; / h 2 &gt;</p></blockquote><p>但是如果起初h2里面就有内容，会被v-html的内容覆盖。</p><h3 id="v-pre"><a href="#v-pre" class="headerlink" title="v-pre"></a>v-pre</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1112.png" alt="1112"></p><p>也就是说，加了v-pre会让插值语法{ { } }失效，而在用户浏览器页面显示出两个大括号</p><p>应用场景：我们 就需要显示两个大括号，不需要插值语法</p><h3 id="v-cloak了解"><a href="#v-cloak了解" class="headerlink" title="v-cloak了解"></a>v-cloak了解</h3><p>cloak遮盖，斗篷。它需要配合css一起使用。 </p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">[v-cloak]</span> <span class="token punctuation">&#123;</span>      <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-cloak</span><span class="token punctuation">></span></span>&#123;&#123;message&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 1.创建app</span>      <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token comment">// data: option api</span>        <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>            message<span class="token operator">:</span> <span class="token string">"Hello Vue"</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token comment">// 2.挂载app</span>      app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上，我们给vue的代码设置一个定时器，模拟js文件没加载完的情况</p><p>1-当我们没有加载完vue源码和代码的话，那么   &lt;h 2 v-cloak&gt;&lt;/h 2&gt;就会在页面直接显示出，用户看到就会非常突兀。</p><p>2-我们可以加一个v-cloak，然后通过属性选择器[v-cloak]设置一个css样式，就会生效到被加cloak的标签，通常加  display: none;让原来的消失。</p><p>3-当和vue相关的代码加载完毕，v-cloak的样式会自动清除，显示出Hello Vue</p><p>在实际.vue开发中不常用，初期学vue的基础代码会用到。</p><h3 id="v-memo了解"><a href="#v-memo了解" class="headerlink" title="v-memo了解"></a>v-memo了解</h3><p>memo备忘录的意思</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1113.png" alt="1113"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-memo</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[name, age]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>姓名: &#123;&#123; name &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>年龄: &#123;&#123; age &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>身高: &#123;&#123; height &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateInfo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>改变信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          name<span class="token operator">:</span> <span class="token string">"why"</span><span class="token punctuation">,</span>          age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>          height<span class="token operator">:</span> <span class="token number">1.88</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function-variable function">updateInfo</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">20</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token operator">=</span><span class="token number">173</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"kobe"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>它是一个v3.2的新特性，和react里面的memo函数基本上一样的功能</p><p>也就是指定了&lt; div v-memo=”[name, age]”&gt;那么只有当[]内的内容有改变，也就是name和age其中一个改变或者都改变的时候，这个div才会重新渲染。</p><p>当height被单独改变的时候，是不会被渲染到div内的。</p><h3 id="v-bind的绑定属性（重要）"><a href="#v-bind的绑定属性（重要）" class="headerlink" title="v-bind的绑定属性（重要）"></a>v-bind的绑定属性（重要）</h3><p>bind绑定，使结合到一起；attribute属性</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1114.png" alt="1114"></p><p>也就是说，原先的都是插入内容，比如{ { } }你写到属性里面是没用的</p><p><strong>绑定基本属性</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>switchImage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>切换图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.绑定img的src属性 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showImgUrl<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 语法糖: v-bind -> : --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showImgUrl<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.绑定a的href属性 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>href<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百度一下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          imgUrl1<span class="token operator">:</span> <span class="token string">"http://p1.music.126.net/agGc1qkogHtJQzjjyS-kAA==/109951167643767467.jpg"</span><span class="token punctuation">,</span>          imgUrl2<span class="token operator">:</span> <span class="token string">"http://p1.music.126.net/_Q2zGH5wNR9xmY1aY7VmUw==/109951167643791745.jpg"</span><span class="token punctuation">,</span>          showImgUrl<span class="token operator">:</span> <span class="token string">"http://p1.music.126.net/_Q2zGH5wNR9xmY1aY7VmUw==/109951167643791745.jpg"</span><span class="token punctuation">,</span>          href<span class="token operator">:</span> <span class="token string">"http://www.baidu.com"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function-variable function">switchImage</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>showImgUrl <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>showImgUrl <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>imgUrl1 <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>imgUrl2<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>imgUrl1        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">mg</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;&#123;showImgUrl&#125;&#125;</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span> //无效<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">mg</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showImgUrl<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>//有效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>也就是说插入大胡子语法只能运用中内容上，属性要动态修改，必须通过v-bind来动态绑定</p><p>v-bind:也可以直接缩写为:</p><p>这是它的一种语法糖，也就是缩写的意思，让我们少些点代码</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">mg</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showImgUrl<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>//有效<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>问题：为什么内容不用绑定？</p><p>因为大胡子语法写在标签内容里面，这些内容其实也是绑定了的（挂载），我们没有写template，这些内容就默认为template</p><p>内容和属性需要不同的绑定方法，这是框架的约束性，它就是这样设置的。你属性想使用data里面返回的值，就得绑定。</p><p><strong>绑定class属性</strong></p><p>问题：绑定class不也是个属性，直接用v-bind不就好了？</p><p>如果你就一个类名是可以的，但是实际中通常有很多个类名，有时需要添加，有时这个类名不需要添加</p><p>所以就需要用到class属性的对象语法和数组语法来动态绑定。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span> isActive ? <span class="token punctuation">'</span>active<span class="token punctuation">'</span>: <span class="token punctuation">'</span><span class="token punctuation">'</span> <span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>这里通过v-bind语法糖绑定属性使用了三元运算符，不仅仅是class属性可以使用，其他的href等属性也都可以使用，就像console.log不仅可以打印变量，也表达式的结果，只要有最终值返回即可，甚至是一个函数，只要这个函数有返回值（这里的class需要函数返回适用于class的对象写法），然后按照那个最终值赋予结果。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>但是class的对象写法，href，src等属性就不可用，是独有的。</p><p>注意class的对象写法是后加，如果原先就设置了class，不会被覆盖。</p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.基本绑定class --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>classes<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello World<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.动态class可以写对象语法 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span> isActive ? <span class="token punctuation">'</span>active<span class="token punctuation">'</span>: <span class="token punctuation">'</span><span class="token punctuation">'</span> <span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.1.对象语法的基本使用(掌握) --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; active: isActive &#125;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.2.对象语法的多个键值对 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; active: isActive, why: true, kobe: false &#125;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 2.3.动态绑定的class是可以和普通的class同时的使用 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abc cba<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; active: isActive, why: true, kobe: false &#125;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 2.4.动态绑定的class是可以和普通的class同时的使用 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abc cba<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getDynamicClasses()<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 3.动态class可以写数组语法(了解) --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[<span class="token punctuation">'</span>abc<span class="token punctuation">'</span>, <span class="token punctuation">'</span>cba<span class="token punctuation">'</span>]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello Array<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[<span class="token punctuation">'</span>abc<span class="token punctuation">'</span>, className]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello Array<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[<span class="token punctuation">'</span>abc<span class="token punctuation">'</span>, className, isActive? <span class="token punctuation">'</span>active<span class="token punctuation">'</span>: <span class="token punctuation">'</span><span class="token punctuation">'</span>]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello Array<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[<span class="token punctuation">'</span>abc<span class="token punctuation">'</span>, className, &#123; active: isActive &#125;]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello Array<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          classes<span class="token operator">:</span> <span class="token string">"abc cba nba"</span><span class="token punctuation">,</span>          isActive<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>          className<span class="token operator">:</span> <span class="token string">"why"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function-variable function">btnClick</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>isActive <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isActive        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">getDynamicClasses</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> active<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>isActive<span class="token punctuation">,</span> why<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> kobe<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：书写的时候记得外用了双引号，内就要用单引号。</p><p>如下代码，对象动态绑定就是给class一个对象，然后键值对写入，键是对象名，值是布尔值</p><p>比如下面的代码，why的值为true所以，button会被加入一个why的类名</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 2.2.对象语法的多个键值对 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; active: isActive, why: true, kobe: false &#125;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>class绑定的类名和一直需要存在的类名，如下的abc cba是不冲突的，不会去覆盖它们，而是往后面追加。</p><p>同时这个对象我们也可以把它抽取到一个函数里面，因为这个函数执行完return就是那个对象。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abc cba<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getDynamicClasses()<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>class的数组绑定方法</strong></p><p>数组绑定用的没有对象绑定多</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 3.动态class可以写数组语法(了解) --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[<span class="token punctuation">'</span>abc<span class="token punctuation">'</span>, <span class="token punctuation">'</span>cba<span class="token punctuation">'</span>]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello Array<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[<span class="token punctuation">'</span>abc<span class="token punctuation">'</span>, className]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello Array<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[<span class="token punctuation">'</span>abc<span class="token punctuation">'</span>, className, isActive? <span class="token punctuation">'</span>active<span class="token punctuation">'</span>: <span class="token punctuation">'</span><span class="token punctuation">'</span>]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello Array<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[<span class="token punctuation">'</span>abc<span class="token punctuation">'</span>, className, &#123; active: isActive &#125;]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello Array<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>数组绑定方法的话，只要是里面的值都会被添加到class类名里面，我们也可以配合对象绑定使用，如上的第四个</p><p><strong>v-bind 动态绑定style属性</strong></p><p>style的动态绑定也有对象和数组两种方式，其中数组语法很少用。因为写数组，数组里面的值也必须是对象，等于多此一举；我们直接在对象里面多写两个值就好了。</p><p>疑惑：原先不是说，什么对象的键值对，如果值是true就把键加进去吗？这里咋不同了直接全加进去了？</p><p>因为我们是通过v-bind来进行绑定的，它底层就这样，没有为什么，class和style的添加方式是不同的，你看了底层源码就明白了。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1115.png" alt="1115"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 1.普通的html写法 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>哈哈哈哈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.style中的某些值, 来自data中 --></span>    <span class="token comment">&lt;!-- 2.1.动态绑定style, 在后面跟上 对象类型 (重要)--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; color: fontColor, fontSize: fontSize + <span class="token punctuation">'</span>px<span class="token punctuation">'</span> &#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>哈哈哈哈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 2.2.动态的绑定属性, 这个属性是一个对象 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>objStyle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>呵呵呵呵<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 3.style的数组语法 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[objStyle, &#123; backgroundColor: <span class="token punctuation">'</span>purple<span class="token punctuation">'</span> &#125;]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>嘿嘿嘿嘿<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          fontColor<span class="token operator">:</span> <span class="token string">"blue"</span><span class="token punctuation">,</span>          fontSize<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>          objStyle<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            fontSize<span class="token operator">:</span> <span class="token string">'50px'</span><span class="token punctuation">,</span>            color<span class="token operator">:</span> <span class="token string">"green"</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意对象里面无法识别-或者px的，我们必须写成如下</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; color: fontColor, fontSize: fontSize + <span class="token punctuation">'</span>px<span class="token punctuation">'</span> &#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>哈哈哈哈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>font-size用小驼峰fontSize或者加引号 “font-size”: fontSize + ‘px’</p><blockquote><p>为什么不能写font-size？</p><p>因为对象里面是不认识横杠这个符号的，比如你在对象里面写一个带横杠的属性，肯定报错。</p><p>解决办法就是把带横杠的属性名加个引号，或者通过小驼峰</p><p>30px为什么不认识？ 和横杠同理。属性值你给个30px，对象是不支持这种写法的，你需要加引号变成字符串</p></blockquote><p>问题：变成字符串还能正常解析这段css吗？</p><p>可以的，底层都写好了。</p><p><strong>动态绑定属性名</strong></p><p>一般属性就是style，class，src等等，如果你属性名字都不固定，就需要动态绑定属性名，这个很少用</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">v-bind：[name]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">:[name]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>aaaa<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello World<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          name<span class="token operator">:</span> <span class="token string">"class"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>绑定一个对象</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">:name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">:age</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">:height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>height<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello World<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- v-bind绑定对象: 给组件传递参数 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>infos<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello Bind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../lib/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 1.创建app</span>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// data: option api</span>      <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>          infos<span class="token operator">:</span> <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">"why"</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> height<span class="token operator">:</span> <span class="token number">1.88</span><span class="token punctuation">,</span> address<span class="token operator">:</span> <span class="token string">"广州市"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          name<span class="token operator">:</span> <span class="token string">"why"</span><span class="token punctuation">,</span>          age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>          height<span class="token operator">:</span> <span class="token number">1.88</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 2.挂载app</span>    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也就是说v-bind可以直接赋值一个对象，然后会被加在标签属性里面。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1116.png" alt="1116"></p><p>通常用于给组件传值。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>框架前置课Git_02</title>
      <link href="archives/da117d2b.html"/>
      <url>archives/da117d2b.html</url>
      
        <content type="html"><![CDATA[<p><strong>问题</strong></p><p>我们按照如下步骤pull代码是会出现错误的</p><p>1-在一个文件夹git init创建本地仓库</p><p>2-git remote 连接名字  连接地址url，如git remote origin xxx</p><p>3-git pull</p><p>提示：</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1030.png" alt="1030"></p><p>tips：git branch可以查看当前本地所在分支</p><p>原因：我们虽然建立了一个仓库连接，但是这个仓库可能有多个分支，我们必须指定远程仓库的分支才可以进行代码合并。（如果我现有的项目就是从远程仓库clone下来的，就自动指定了）</p><blockquote><p>git pull origin master</p><p>或者git pull origin head:master（这行和下面一行一样，因为默认head就是本地仓库的master）</p><p>获取git pull origin master:master(这是把本地仓库origin的master分支与远程仓库master绑定 )</p><p>两个是一个效果，其实底层分支的切换都是通过head来进行的</p></blockquote><p>如果你不想每次都写远程仓库的分支，可以给本地分支绑定一个上游分支。绑定追踪后，pull和push都可以对应上了</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1031.png" alt="1031"></p><p>上面就是总是将origin仓库提交到远程仓库的master分支上。（在github一般是main分支）</p><p>设置一次，以后每次只需要git pull即可，就不需要再指定分支了。</p><p><strong>问题二</strong> </p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1032.png" alt="1032"></p><p>1-在git2.9版本后，当我们添加了远程仓库，在拉取的时候也指定了是拉取远程仓库的master，还是会提示一个refusing to merge，也就是拒绝合并代码。</p><p>2-因为git pull等于git fetch和git merge，这个时候其实代码已经从远程仓库拿到本地了，但是没有合并</p><p>3-为什么要这样，就是防止一些小白，乱pull一些东西下来，然后自己项目的代码和远程仓库代码一合并，结构完全看不明白了，多了很多对自己毫无用处的东西（git根据它的本地仓库和此远程仓库项目有无联系来判断，比如有无从本地提交一次东西到远程仓库，或者这个项目就是远程仓库clone的，当然也就有历史联系）。</p><p>4-如果我们就是要合并，可以加一行 –allow-unrelated-histories，也就是允许无关联历史</p><blockquote><p>git pull  –allow-unrelated-histories</p></blockquote><h2 id="仓库的交互公司开发流程"><a href="#仓库的交互公司开发流程" class="headerlink" title="仓库的交互公司开发流程"></a>仓库的交互公司开发流程</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1033.png" alt="1033"></p><h2 id="常见的开源协议"><a href="#常见的开源协议" class="headerlink" title="常见的开源协议"></a>常见的开源协议</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1034.png" alt="1034"></p><p><strong>是否闭源：</strong>比如我的项目用了vue3的框架，我的项目是否可以不公开源码。</p><p><strong>修改的文档放置版权说明：</strong>比如我用了vue3的框架，我每修改一处原先是vue的源码的页面，都要说一下这里的版权归属于vue开发团队。</p><p><strong>广告用你的名字促销：</strong>如我的用vue3的项目，能不能宣传我的运行速度很快，是因为我用了vue框架。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在github中，本地的分支需要和远程仓库的分支最好名称一样，不然尽管你用命令追踪 指定了匹配哪个分支，在push中还是可能有问题</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1035.png" alt="1035" style="zoom: 200%;" />为什么呢？ </p><p>因为如果我们只git push，如上图默认为git push simple，也就是push当前本地仓库的分支，给和当前本地仓库分支相同的远程仓库分支，如果找不到直接报错。</p><p>我们虽然配置了上游为master，但是这个默认是simple</p><p>方法一：我们需要在git的config中再设置</p><blockquote><p>git config push.default upstream (这里加–global可以全局，所有本地仓库都生效，不加的话只在当前本地仓库生效)</p></blockquote><p>方法二：我们把命令写全即可</p><p>git push origin master:main</p><p>前面的master代表本地仓库的master分支，后面的main代表远程仓库的分支，github中默认就是main，如果我们写成master，github就会再生成一个master分支。</p><p>方法三：git config push.default current</p><p>把当前分支上传到远程服务器，远程服务器有相同名字分支就加上去，没有就自动创建一个。</p><h2 id="git-tag-tag的使用过程"><a href="#git-tag-tag的使用过程" class="headerlink" title="git-tag-tag的使用过程"></a>git-tag-tag的使用过程</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1036.png" alt="1036"></p><p>提示：我们必须先git tag v1.0给要提交的东西环境打了标签，（标签记录的是当前在本地仓库也就是被commit过的代码版本）才能git push origin v1.0</p><p>一次可以打多个tag，如git tag v1.0,git tag v1.1,git tag v1.2,推送的时候如果只加了tag如v1.0，如git push origin v1.0就会把tag1.0内的commit的内容提交；打的1.1和1.2标签不会生效，内容也不会被push；如果是git push origin –tags就会所有标签全部被打上，所有内容全部push</p><p>不加的话就正常上传全部本地仓库代码，远程仓库不会生成新的tag，但是本地tag的版本也会被保存，下次push可以带上此标签push。</p><p>当然你也可以删除掉这个不需要被远程仓库显示的本地tag，如下图命令</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1037.png" alt="1037"></p><h2 id="git的提交对象object"><a href="#git的提交对象object" class="headerlink" title="git的提交对象object"></a>git的提交对象object</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1038.png" alt="1038"></p><h2 id="git-master分支"><a href="#git-master分支" class="headerlink" title="git master分支"></a>git master分支</h2><p>master指向最新的最后一次提交，head默认指向master</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1039.png" alt="1039"></p><p>创造一个分支的话，就是新添加了一个指针指向最后一次提交对象。</p><p>从master分支切换到另一个分支testing，也就是head指针从指向master变成指向testing</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1040.png" alt="1040"></p><p>如上图在最后一次提交commit为333的时候创建一个testing，那么testing就会指向333</p><p>tag指向333是打了一个标签，是不会动的</p><p>这个时候我们又把分支切换会master，并又提交了两次分别为444，555，那么master会指向最后一次提交555，testing还是指向333，所以testing分支内是没有444和555的内容的</p><p>如果又转换到testing，然后提交了xxx和yyy就会如下图</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1041.png" alt="1041"></p><p>变成了两条开发流程，master仓库是拿不到xxx和yyy的，testing仓库也拿不到444和555</p><p><strong>切换分支或者tag的命令</strong></p><p>git chekout master（分支名字）</p><p>git chekout v1.0.0（tag名字)</p><p>注意你tag切回去版本，只是为了出现bug创建新分支，是无法切换了tag继续开发代码并push的，会被拒绝。（因为如果给你push，那么此远程仓库tab这条分支的后续代码都会被覆盖丢失）</p><p><strong>创造分支命令</strong></p><p>git branch testing（新分支名）</p><p><strong>查看当前拥有分支</strong></p><p>git branch</p><p><strong>创建分支同时切换分支</strong></p><p>git checkout -b testing（新分支名）</p><h2 id="为什么使用分支"><a href="#为什么使用分支" class="headerlink" title="为什么使用分支"></a>为什么使用分支</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1042.png" alt="1042"></p><p>如上图，当我们项目已经开发到了555，突然发现333出现了bug，那么我们就需要reset回到333的代码版本，然后创建新的分支hotfix，在新的分支修复bug，为什么不直接在原分支修改bug呢？</p><p>因为原分支的项目功能还在继续被其他同事开发，我们提交的东西不能扰乱它。还有bug需要反复修改的，你不可能同分支提交上去别人拿到的还是有bug，我们最好把自己的东西完全改好了，再合并分支。</p><p>最后当bug修复完成，然后再拉取切换到当前最新的项目分支，再合并分支。 </p><p><strong>合并分支</strong></p><p>git merge hotfix</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1043.png" alt="1043"></p><p>合并后会冲突，111和222和333是共同的，如上图</p><p> current change：只保留当前分支代码，也就是444，555</p><p>incoming change：保留被合并进来的分支的代码，那么原分支333以后的代码都会被删除</p><p>both change：两个分支代码都保留，就相当于相同的不变，不同的加起来</p><p>compare change：就是比较两个分支代码，让我们人为决定</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1044.png" alt="1044"></p><p>如上图合并后，合并的commit同时指向555和fix_02</p><p><strong>查看和删除分支</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1045.png" alt="1045"></p><p>当我们一个分支已经被合并到了主分支上，那么就可以删除了</p><p><strong>注意：</strong>移除的只是一个指针，比如原先的图，移除hotfix，只是让红色框的hotfix指针清除了，fix_01_02是照样存在的。</p><h2 id="Git的工作流"><a href="#Git的工作流" class="headerlink" title="Git的工作流"></a>Git的工作流</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1046.png" alt="1046"></p><p>日常开发都是在develop分支中，当develop中的一个版本非常稳定了，再合并到master分支</p><p>在日常开发中，如果有一个非常新颖的功能开发，但是不确定最终能不能实现或者使用，就再创造分支到topic中开发，最终如果实现和使用再合并到develop分支中。</p><p>下图工作流也很常用，feature就是topic，但是多了一个release发布版本测试。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1047.png" alt="1047"></p><h2 id="git远程分支操作"><a href="#git远程分支操作" class="headerlink" title="git远程分支操作"></a>git远程分支操作</h2><p>1-git init创建仓库</p><p>2-git remote add origin xxx建立并命名远程仓库origin的连接</p><p>3-建立上游，让本地分支绑定远程仓库分支，git branch –set-upstream-to=origin/main</p><p>这个origin/main其实就是下载的远程仓库的main分支到了本地</p><p>我们直接建立上游是会有警告的，因为本地根本不知道，远程仓库的分支有origin/main</p><p>所以我们需要先执行git fetch把远程仓库分支下载到本地变成origin/main</p><p>4-git config push.default upstream 设置默认push使用上游绑定，而不是simple</p><blockquote><p>其实了解了原理，我们怎么操作都可以，最简单的是直接clone项目，连接什么的都自动搞好了，不需要以上这些繁琐操作。但是不了解原理万一遇到问题了，我们自己就没法解决。</p></blockquote><p><strong>tips</strong></p><p>如果远程仓库有多个分支，如master和feature，我们clone下来，默认会在master主分支上，进行命令git checkout feature即可进入feature分支。</p><h2 id="分支合并merge和rebase的区别"><a href="#分支合并merge和rebase的区别" class="headerlink" title="分支合并merge和rebase的区别"></a>分支合并merge和rebase的区别</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1049.png" alt="1049"></p><p><strong>第一个图</strong></p><p>是merge合并experient和master，其中c5是合并的commit记录</p><p><strong>第二个图</strong></p><p>1-是先在分支experient中执行git rebase master就可以把新代码c4和老代码合并同一条线上（rebase会把用此命令的分支这里是experient，的最后一次commit这里就是c4的指向，指向 master的最后一次提交c3）</p><p>2-然后回到主分支master执行git merge experient，就可以让master也拥有c4实现合并。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1048.png" alt="1048"></p><p>永远不要在主分支中或者develop分支（经常被提交的分支）中用rebase，为什么如下图</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1050.png" alt="1050"></p><p>如果我们在主分支这个经常被很多人提交拉取的分支用rebase，那么就会改变主分支dev的最后一次提交到feature，那么所有组员的提交记录指向就全部被改变了。</p><h2 id="命令速查"><a href="#命令速查" class="headerlink" title="命令速查"></a>命令速查</h2><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1051.png" alt="1051" style="zoom:200%;" /><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1052.png" alt="1052"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架前置课 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>框架前置课Git_01</title>
      <link href="archives/43182c91.html"/>
      <url>archives/43182c91.html</url>
      
        <content type="html"><![CDATA[<p>常见的命令就那么几个，但是我看的是coderwhy老师的系统课，会把各种细节都讲到。</p><blockquote><p>一般看有没有工作经验，就看会不会应对Git中的各种情况，没有实际在公司的开发经验，一般很难装出来，所以想包装工作经验的兄弟们要好好学啦哈哈哈</p><p>其实面试，只要不是头部大厂，一般是叫个技术大哥面试你，你过不过对大哥来说都没有利益损失，所以面试中以能力为主，眼缘也有一定的次要作用。</p><p>不过大哥让你通过，你其实能力较差在面试的时候是装的，在试用期内不能干活，最后还得走人，这是坑了自己也坑了大哥，切不可为~</p><p>头部大厂就得三面，那么就完全看硬实力了。</p></blockquote><h2 id="邂逅版本控制工具"><a href="#邂逅版本控制工具" class="headerlink" title="邂逅版本控制工具"></a>邂逅版本控制工具</h2><h3 id="git的作用"><a href="#git的作用" class="headerlink" title="git的作用"></a>git的作用</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1002.png" alt="1002"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1003.png" alt="1003"></p><p>一句话，git版本控制工具，可以记录项目中内容在什么时候什么人，进行了修改删除上传等操作，并进行了项目不同版本代码的备份。</p><p>比如，你第一天上传了一个代码，第二天不小心给它删了，你可以通过git调出昨天代码版本的备份。</p><p><strong>重要</strong></p><p>github可以对比代码差异，让我们一个团队项目，不同人的代码合并。</p><h3 id="版本控制的历史"><a href="#版本控制的历史" class="headerlink" title="版本控制的历史"></a>版本控制的历史</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1004.png" alt="1004"></p><p>起初没有版本控制软件，改代码前都是把项目手动备份一次，防止改完项目崩了，还能恢复。</p><p>后面出现了cvs和svn，它们都是集中式版本控制工具。</p><p>git是发布式版本控制工具。</p><h2 id="集中式和发布式的区别"><a href="#集中式和发布式的区别" class="headerlink" title="集中式和发布式的区别"></a>集中式和发布式的区别</h2><h3 id="集中式版本控制工具"><a href="#集中式版本控制工具" class="headerlink" title="集中式版本控制工具"></a>集中式版本控制工具</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1005.png" alt="1005"></p><p>也就是说不同的人，写了不同的代码，都要提交到同一台服务器上面，服务器程序也会记录每次的修改和备份代码等等。</p><p>缺点：万一服务器宕机，那么在宕机的时候谁也无法上传新代码，或者访问以前的老代码。</p><p>甚至服务器故障坏了，那么以前版本的代码记录都没了。</p><h3 id="发布式版本控制工具"><a href="#发布式版本控制工具" class="headerlink" title="发布式版本控制工具"></a>发布式版本控制工具</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1006.png" alt="1006"></p><p>发布式版本控制工具，每一次拉取都会对代码仓库进行一次完整备份，也就是说镜像下来所有的这个项目的新老版本（这个镜像肯定不是源代码，会进行压缩什么的，不然会特别大，也就不需要其他服务器来恢复了），所以就算服务器宕机或者坏了，我们可以通过本地的镜像，在其他服务器恢复出以前老版本项目的代码。 </p><h2 id="Git的使用"><a href="#Git的使用" class="headerlink" title="Git的使用"></a>Git的使用</h2><p>官网git-scm.com    </p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1007.png" alt="1007"></p><h3 id="Bash-CMD-GUI的区别"><a href="#Bash-CMD-GUI的区别" class="headerlink" title="Bash-CMD-GUI的区别"></a>Bash-CMD-GUI的区别</h3><p>**Git-CMD:**和我们Windows的cmd基本上一模一样，只是在上面加了git命令功能</p><p><strong>Bash：</strong>它是一个shell，也是命令行的一种，libux和macosx都是用这种命令行。它的优点是可以识别执行linux命令，而且相比cmd来说，加了很多新命令和功能，比如ssh连接命令在cmd中是识别不了的。（可以按ctrl+让文字变大）</p><p><strong>GUI：</strong>图形化界面来运行git命令，我们不需要在小黑篇目里面敲命令了，而是用鼠标点击。</p><h3 id="Git的配置类别"><a href="#Git的配置类别" class="headerlink" title="Git的配置类别"></a>Git的配置类别</h3><p>tips：getbash命令行退出按Q键，quit的意思。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1008.png" alt="1008"></p><p>–system来设置，那么这台电脑系统的所有用户都会用这个git配置，一般不使用。</p><p>–global就是当前用户会用这个git配置（电脑是多用户的，我们使用的一般是管理员用户）</p><p>也可以给单个仓库设置配置，一般不使用。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1009.png" alt="1009"></p><p>1-当我们到公司拿到电脑，可能git里面有其他人的信息，也可能没有信息，我们都是用以上命令来设置自己的user.email和user.name，原先有就会被覆盖。</p><p>2-我们可以使用git config –list来查看配置文件，也可以在c盘/用户/用户名/.gitconfog文件查看</p><h3 id="为git命令设置别名"><a href="#为git命令设置别名" class="headerlink" title="为git命令设置别名"></a>为git命令设置别名</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1010.png" alt="1010"></p><h2 id="Git初始化本地仓库"><a href="#Git初始化本地仓库" class="headerlink" title="Git初始化本地仓库"></a>Git初始化本地仓库</h2><p>git是有一个本地仓库和远程仓库的，我们写了代码，git init是创建一个空的git本地仓库，这个时候本地仓库是没有我们的代码的，必须用add和commit 命令把代码文件添加到本地仓库</p><p>本地仓库提交到远程服务器仓库，是需要git push命令的。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1011.png" alt="1011"></p><p>tips:查看git和node等的安装位置，命令为 where git</p><p>问题：我这里vscode没有gitbash控制台，百度看了一下改shell:windows的setting也没用，后面重装git就好了。</p><p><strong>当我们是一个新项目，没有本地和远程仓库。</strong></p><p>要提交哪个文件夹，就cd到哪里，执行git init（初始化一个新的本地仓库），当前文件夹下就会多出一个.git文件</p><p>这个时候只是有一个新本地仓库，我们并没有提交文件上去，所以我们可以通过add和commit等命令提交文件到本地仓库。（注意现在还是本地仓库，不是远程仓库）</p><p><strong>公司已经有了项目有了远程仓库</strong></p><p>git clone 仓库地址</p><p>如果是私有项目的话，一般需要配置key或ssh这些链接授权，克隆的话就不需要自己init创建本地仓库了（因为你克隆下来的项目里面就包含了本地仓库.git文件一样的东西）</p><h3 id="文件状态的划分"><a href="#文件状态的划分" class="headerlink" title="文件状态的划分"></a>文件状态的划分</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1012.png" alt="1012"></p><p>1-一个文件被执行add命令后，就会被跟踪</p><p>2-这时这个文件只是进了暂缓区，也就是不确定要不要提交，只有执行commit后，才会被提交到git本地仓库。</p><p>3-如果提交到本地仓库后，我们又修改了这个文件，那么又要被重新add和commit</p><p>tips：我们可以通过git log 查看有哪些提交</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1013.png" alt="1013"></p><p>index就是暂缓区，一般我们是先add让工作区的代码文件进入暂缓区，然后commit提交到本地仓库</p><p>其实也可以commit -a直接提交到本地仓库</p><h3 id="查看文件的状态git-status"><a href="#查看文件的状态git-status" class="headerlink" title="查看文件的状态git status"></a>查看文件的状态git status</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1015.png" alt="1015"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1014.png" alt="1014"></p><p>它会显示当前目录文件内一些特殊状态文件，如没有被跟踪的文件，或者被跟踪进入暂存区但是没被提交的文件，或者修改modified状态等等。（不会显示已commit的文件，因为没必要）</p><h3 id="git-add添加文件到暂存区跟踪"><a href="#git-add添加文件到暂存区跟踪" class="headerlink" title="git add添加文件到暂存区跟踪"></a>git add添加文件到暂存区跟踪</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1016.png" alt="1016"></p><h3 id="git忽略文件"><a href="#git忽略文件" class="headerlink" title="git忽略文件"></a>git忽略文件</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1017.png" alt="1017"></p><p> 我们经常通过add.也就是说一次添加所有没有被跟踪的文件，那么有的文件总是不需要被跟踪提交，需要被忽略，怎么办呢？</p><p>我们可以在当前目录创建一个.gitignore文件，然后在里面写上不需要被跟踪提交的文件名称 （在实际开发中不需要自己创建，比如vue项目，我们肯定会用到vue脚手架，这个脚手架会自动创建.gitignore里面已经写好了需要忽略的文件名称）</p><p>tips：github官方发布了一个gitignore的仓库，里面包含了不同项目需要忽略的文件，我们复制过来即可。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1018.png" alt="1018"></p><h3 id="文件更新提交到本地仓库-git-commit"><a href="#文件更新提交到本地仓库-git-commit" class="headerlink" title="文件更新提交到本地仓库-git commit"></a>文件更新提交到本地仓库-git commit</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1019.png" alt="1019"></p><p>-m就是message的意思，就是人为写这次提交的相关信息，比如改动了什么优化了什么。</p><p>如果嫌每次都要add很麻烦，可以直接git commit -a</p><h3 id="git的校验和（了解）"><a href="#git的校验和（了解）" class="headerlink" title="git的校验和（了解）"></a>git的校验和（了解）</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1020.png" alt="1020"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1021.png" alt="1021"></p><h3 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1022.png" alt="1022"></p><p>graph就是图表的意思，我们一般在分支开发的时候使用，可以让log结构更清晰。</p><p>git log –pretty=oneline就是每一个提交都在一行显示，省略了很多不重要的信息。</p><p>tips：还有一个git reflog 会把我们的回退git reset操作也做一个记录，方便我们跳转到最新版本。</p><h3 id="版本回退git-reset"><a href="#版本回退git-reset" class="headerlink" title="版本回退git reset"></a>版本回退git reset</h3><p>我们提交了很多次，现在当前版本有点错误，我们想回退到以前的版本查看原先的代码，怎么办呢？</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1023.png" alt="1023"></p><p>这里的commit id 就是校验和，一般写前七位即可，也可以全部写上。</p><h2 id="Git远程仓库和验证"><a href="#Git远程仓库和验证" class="headerlink" title="Git远程仓库和验证"></a>Git远程仓库和验证</h2><h3 id="什么是远程仓库"><a href="#什么是远程仓库" class="headerlink" title="什么是远程仓库"></a>什么是远程仓库</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1024.png" alt="1024"></p><p>远程仓库不止github，还有gitee和gitlab</p><p>其中gitlab没有国外手机号码基本上注册不了</p><p>公司也可以通过在自己服务器上安装gitlab这个软件来实现自己服务器有gitlab网站同样的版本控制功能</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1025.png" alt="1025"></p><p>注册和创建仓库就不多说了，基本上一样的，我自己也会。</p><h3 id="远程连接凭证"><a href="#远程连接凭证" class="headerlink" title="远程连接凭证"></a>远程连接凭证</h3><p>访问私有仓库，是需要凭证的。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1026.png" alt="1026"></p><p>默认情况下，http是无状态的连接，也就是说你第一次输入了账号密码登入后，关了网页再连接又要输入账号密码，它是不知道你以前访问过的。</p><p>为什么我们平时网页不会呢，可以直接进去？因为它们都下发了cookie/token这些给客户端，客户端下一次连接就带了token， 通俗来说这个token就等于输入了账号密码。</p><p>于是git grediential也提供了一些方式存储密码到内存或者磁盘中，或者用git  gredential manager工具（安装git的时候会默认安装），它会记录保存我们的账号密码（我们可以在控制面板-用户-凭证管理里面删除）</p><p><strong>tips：</strong></p><p>1-那我公共仓库不需要凭证，不是每个人的可以clone和push修改我的仓库？</p><p>别人确实可以clone，但是push的话可以push，不过push后，是需要主人也就是你在push request里面同意，才会合并到你的仓库中。</p><h3 id="ssh验证"><a href="#ssh验证" class="headerlink" title="ssh验证"></a>ssh验证</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1027.png" alt="1027"></p><p>1-我们直接通过github里面的ssh地址访问，是会被拒绝的</p><p>2-我们需要在本地git bash中通过ssh-kegen。。。。。来生成一对公钥和私钥</p><p>（-t代表加密方式，-C代表注释必须大写C）</p><p>3-其中私钥和公钥是一对，它们匹配上才能验证身份，私钥在本地，公钥在c-用户-用户名-.ssh中。我们需要把公钥（id_ed25519.pub文本打开）添加到github的项目拥有者账户中。</p><p>4-然后我们再通过ssh地址就可以访问了。</p><p>5-只有连接过远程仓库的，可以输入git remote -v 查看这个远程仓库的地址</p><p><strong>tips：</strong>ssh生成的同一对公钥和私钥，可以为多个平台如gitee和github验证，只需要把公钥给不同平台我们的账户添加即可。</p><h3 id="管理远程服务器"><a href="#管理远程服务器" class="headerlink" title="管理远程服务器"></a>管理远程服务器</h3><p>我们本地写了代码要提交push上去，是无法直接push的，因为如果原先没有连接的话，根本不知道push给谁</p><p>如果你刚开始就clone了这个远程服务器的项目，那么就已经建立连接了，就不需要再git remote add</p><p>其中shortname是远程仓库名字，我们可以根据喜欢场景自己设置</p><p>url可以是ssh地址也可以是http地址</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1028.png" alt="1028"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1029.png" alt="1029"></p><p>git fetch等于获取代码，但是不合并，git merge是合并</p><p>git pull等于fetch和merge同时执行。</p><p>这里我push到gitee是遇到一个问题的，我们需要在gitee中把邮箱公开。</p><p><a href="https://www.ab62.cn/article/9536.html">https://www.ab62.cn/article/9536.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架前置课 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESModule&amp;Webpack&amp;npm_04</title>
      <link href="archives/9387d658.html"/>
      <url>archives/9387d658.html</url>
      
        <content type="html"><![CDATA[<h1 id="webpack基本使用详解"><a href="#webpack基本使用详解" class="headerlink" title="webpack基本使用详解"></a>webpack基本使用详解</h1><p>我们现在只学webpack的基本使用，在后续webpack高级中，coderwhy老师还会教手写loader这些，面向25k开发的。</p><h2 id="webpack依赖图"><a href="#webpack依赖图" class="headerlink" title="webpack依赖图"></a>webpack依赖图</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1053.png" alt="1053"></p><p>webpack打包的时候，会先找那个入口文件（默认index.js，找不到就报错，我们可以用命令或者在webpack.conig.js配置文件中指定入口文件），然后打包入口文件，发现入口文件又导入了其他模块，就又会打包其他模块，最终生成浏览器可以识别的静态代码。</p><p>tips：默认webpack只打包js的，那些css等文件需要使用对应的loader</p><p>比如vue框架，webpack本身是打包不了.vue文件的，但是现在大家都是用webpack打包，那么vue的开发者就需要写一个vue的loder出来供webpack使用识别.vue文件</p><h2 id="css-loader的使用"><a href="#css-loader的使用" class="headerlink" title="css-loader的使用"></a>css-loader的使用</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1054.png" alt="1054"></p><p>内联式和cli方式</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1055.png" alt="1055"></p><p><strong>方式三常用</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1056.png" alt="1056"></p><p>我们要使用loder，就必须安装loader，命令npm install css-loader -D (因为是开发环境，所以-D)</p><p>然后我们在配置文件webpack.config.js文件中添加</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">module<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  rules<span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>      <span class="token comment">// 告诉webpack匹配什么文件</span>      test<span class="token operator">:</span> /\.css$/<span class="token punctuation">,</span>        <span class="token comment">//告诉用哪个loader解析</span>      use<span class="token operator">:</span> <span class="token punctuation">[</span>               <span class="token string">"css-loader"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是我们发现，虽然能打包了，但是css不生效，因为css-loader只解析css，但是不会把css插入到html</p><p>我们还需要一个style-loader,照样是先安装后写入配置，主要use数组里面的loader是从下面往上面执行（如果是缩写，就从右向左），所以得先css-loader解析，后style-loader插入。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1057.png" alt="1057"></p><p>我们loader有简写方法，但是不建议。</p><p>全称如use是一个数组，里面的没一个loader都是一个对象，但是如果我们不需要对这个loader配置，可以不写loader对象，直接写名称。不过当你要配置又要改回全称，还不如起初就全称。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1058.png" alt="1058"></p><p>这些css和less如果直接引入对应的解析和插入loader确实可以生效，但是是通过内联式，也就是插入在index.html的style标签中生效的，如果需要单独生成一个css文件，需要做高级配置。</p><p>less文件的解析同理，安装一个less-loader即可。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  entry<span class="token operator">:</span> <span class="token string">"./src/main.js"</span><span class="token punctuation">,</span>  output<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    filename<span class="token operator">:</span> <span class="token string">"bundle.js"</span><span class="token punctuation">,</span>    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"./build"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  module<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    rules<span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token comment">// 告诉webpack匹配什么文件</span>        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        <span class="token comment">// use: [ // use中多个loader的使用顺序是从后往前</span>        <span class="token comment">//   &#123; loader: "style-loader" &#125;,</span>        <span class="token comment">//   &#123; loader: "css-loader" &#125;</span>        <span class="token comment">// ],</span>        <span class="token comment">// 简写一: 如果loader只有一个</span>        <span class="token comment">// loader: "css-loader"</span>        <span class="token comment">// 简写二: 多个loader不需要其他属性时, 可以直接写loader字符串形式</span>        use<span class="token operator">:</span> <span class="token punctuation">[</span>           <span class="token string">"style-loader"</span><span class="token punctuation">,</span>          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>           <span class="token string">"postcss-loader"</span>          <span class="token comment">// &#123;</span>          <span class="token comment">//   loader: "postcss-loader",</span>          <span class="token comment">//   options: &#123;</span>          <span class="token comment">//     postcssOptions: &#123;</span>          <span class="token comment">//       plugins: [</span>          <span class="token comment">//         "autoprefixer"</span>          <span class="token comment">//       ]</span>          <span class="token comment">//     &#125;</span>          <span class="token comment">//   &#125;</span>          <span class="token comment">// &#125;</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        use<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">"style-loader"</span><span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span> <span class="token string">"less-loader"</span><span class="token punctuation">,</span> <span class="token string">"postcss-loader"</span> <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>tips：css中有一个user-select:none属性，可以让用户无法选中内容</strong></p><p>但是这个属性可能是不兼容一些浏览器的，所以得加前缀如-ms-user-select:none;-webkit-user-select</p><p>那我咋全知道哪些浏览器兼容哪些属性？一个个记吗？所以webpack中有一个postcss-loader可以自动判断，并帮我们添加前缀。</p><p>我们加了postcss-loader还是不行，因为它只是一个工具，你想使用它，还需要借助一个插件autoprefixer（也得npm install）。自动前缀的意思</p><p>我们需要把插件写进postcss-loader里面的option配置中，然后postcssOption插件plugin中</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span>            loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>            options<span class="token operator">:</span> <span class="token punctuation">&#123;</span>              postcssOptions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>               plugins<span class="token operator">:</span> <span class="token punctuation">[</span>                 <span class="token string">"autoprefixer"</span>               <span class="token punctuation">]</span>             <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果把这段代码写在webpack.confog.js中绝的各种配置太繁琐太难管理的话，可以单独抽取到一个postcss-config.js中（webpack的config中找不到，它会自动再寻找postcss-config.js）</p><p>好处：我们postcss不一定就css使用，less中也可能要使用，那么在less匹配的loader中也就要加配置代码，抽取到单独文件中，就避免了这一操作。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1059.png" alt="1059"></p><p>单独配置文件的代码格式又和在webpack配置中写的格式不同，这都是loader的开发者自己定义的，我们记住就好了，其实也不需要记，因为我们现在是为了方便了解webpack的工作流程，所以学习这些东西，实际开发中这些配置脚手架都会帮我们配好。</p><p><strong>问题：</strong>为什么建立了postcss.config.js，webpack中的loader就会来找这个文件读取配置，是如何绑定的？</p><p>它就是这样设置的，在这个loader被开发出来就写了这个逻辑，应该是通过名字绑定loader和配置文件js，如postcss-loader对应的就是postcss.config.js，通过前面那个单词来绑定。</p><p>然后通过commonjs模块化导出配置</p><p><strong>postcss-preset-env预设</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1060.png" alt="1060"></p><p>它除了可以代替autoprefixer的加前缀功能，还能把浏览器不支持的，但是我们开发代码中有的新特性css写法，转换为浏览器支持的代码。</p><h2 id="webpack打包图片"><a href="#webpack打包图片" class="headerlink" title="webpack打包图片"></a>webpack打包图片</h2><p>图片怎么导入到依赖图中，从而让webpack打包？</p><p>我们直接import xxx（随便起个名字） from “图片路径”即可，因为在webpack中任意文件其实都可以被看做一个模块。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 引入图片模块</span><span class="token keyword">import</span> zznhImage <span class="token keyword">from</span> <span class="token string">"../img/zznh.png"</span><span class="token comment">// 创建img元素</span><span class="token keyword">const</span> imgEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span>imgEl<span class="token punctuation">.</span>src <span class="token operator">=</span> zznhImagedocument<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>imgEl<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1061.png" alt="1061"></p><p>比如打包图片等文件，其实webpack5已经给我们内置了与loader相似的功能，但是webpack默认是打包js，虽然它有打包图片的功能，我们需要在webpack.config.js中配置如下</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1062.png" alt="1062"></p><p>我们先匹配结尾为这些名称的文件，然后type:“asset”</p><p><strong>tips：</strong>webpack.config.js是我们自己创造的文件，你随便写成什么名字开头都可以，比如demo.config.js</p><p>但是你在执行webpack命令的时候得带上，如npx webpack  –config demo.config.js就是此次打包webpack运用那个js文件的配置。 为了方便我们通常在package.json中写一个script来包含这个命令</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token string">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token string">"build"</span><span class="token operator">:</span> <span class="token string">"webpack --config demo.config.js"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>那么我们只需要执行 npm run build即可，注意别写成npx了，这个执行script不需要去node_module找，你npx反而会出错找不到了。</p></blockquote><p>1-其中asset/resource运行机制是把当前图片复制了一份到build文件夹中</p><p>2-asset/inline是把图片base64编码到了js文件中</p><p>3-resource方法会增加一次网络请求，inline方式会让js文件变的很大（会导致页面渲染慢），所以我们一般把大的图片用resource方法，小图片用inline方法</p><p>4-我们在type：“asset”,就写一个asset的话，配合paeser属性中的maxSize可以设置，自动判断大于多大的图片用resource，否则inline</p><p>tips：这些配置什么的单词很多，没必要记，知道有这个东西，会查阅文档就好了。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> VueLoaderPlugin <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"vue-loader/dist/index"</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  entry<span class="token operator">:</span> <span class="token string">"./src/main.js"</span><span class="token punctuation">,</span>  output<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    filename<span class="token operator">:</span> <span class="token string">"bundle.js"</span><span class="token punctuation">,</span>    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"./build"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// assetModuleFilename: "abc.png"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  resolve<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    extensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">".js"</span><span class="token punctuation">,</span> <span class="token string">".json"</span><span class="token punctuation">,</span> <span class="token string">".vue"</span><span class="token punctuation">,</span> <span class="token string">".jsx"</span><span class="token punctuation">,</span> <span class="token string">".ts"</span><span class="token punctuation">,</span> <span class="token string">".tsx"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    alias<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      utils<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"./src/utils"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  module<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    rules<span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        use<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">"style-loader"</span><span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span> <span class="token string">"postcss-loader"</span> <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        use<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">"style-loader"</span><span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span> <span class="token string">"less-loader"</span><span class="token punctuation">,</span> <span class="token string">"postcss-loader"</span> <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(png|jpe?g|svg|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        <span class="token comment">// 1.打包两张图片, 并且这两张图片有自己的地址, 将地址设置到img/bgi中</span>        <span class="token comment">// 缺点: 多图片加载的两次网络请求</span>        <span class="token comment">// type: "asset/resource",</span>        <span class="token comment">// 2.将图片进行base64的编码, 并且直接编码后的源码放到打包的js文件中</span>        <span class="token comment">// 缺点: 造成js文件非常大, 下载js文件本身消耗时间非常长, 造成js代码的下载和解析/执行时间过长</span>        <span class="token comment">// type: "asset/inline"</span>        <span class="token comment">// 3.合理的规范:</span>        <span class="token comment">// 3.1.对于小一点的图片, 可以进行base64编码</span>        <span class="token comment">// 3.2.对于大一点的图片, 单独的图片打包, 形成url地址, 单独的请求这个url图片</span>        type<span class="token operator">:</span> <span class="token string">"asset"</span><span class="token punctuation">,</span>        parser<span class="token operator">:</span> <span class="token punctuation">&#123;</span>          dataUrlCondition<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            maxSize<span class="token operator">:</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1024</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        generator<span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 占位符</span>          <span class="token comment">// name: 指向原来的图片名称</span>          <span class="token comment">// ext: 扩展名</span>          <span class="token comment">// hash: webpack生成的hash</span>          filename<span class="token operator">:</span> <span class="token string">"img/[name]_[hash:8][ext]"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        use<span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>             loader<span class="token operator">:</span> <span class="token string">"babel-loader"</span><span class="token punctuation">,</span>             <span class="token comment">// options: &#123;</span>            <span class="token comment">//   plugins: [</span>            <span class="token comment">//     "@babel/plugin-transform-arrow-functions",</span>            <span class="token comment">//     "@babel/plugin-transform-block-scoping"</span>            <span class="token comment">//   ]</span>            <span class="token comment">// &#125; </span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.vue$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        loader<span class="token operator">:</span> <span class="token string">"vue-loader"</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">VueLoaderPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上的代码中的60*1024就是64kb的意思</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1063.png" alt="1063"></p><p>问题：当我们很多张图片被打包复制到了build文件中，但是build文件中的代码是hash过的名字，怎么办？</p><p>我们可以使用generator属性修改</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">generator<span class="token operator">:</span> <span class="token punctuation">&#123;</span>         <span class="token comment">// 占位符</span>         <span class="token comment">// name: 指向原来的图片名称</span>         <span class="token comment">// ext: 扩展名，如jpg，png</span>         <span class="token comment">// hash: webpack生成的hash，:8就是截取保留八位</span>         filename<span class="token operator">:</span> <span class="token string">"img/[name]_[hash:8][ext]"</span>       <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们一般也是用占位符命名，不会写死，因为当有多张图片，不可能叫一样的名字，这样照样无法识别。</p><p>img/的作用是在bulid中生成一个img的文件夹来保存这些被打包的图片，否则bulid里面的东西太乱了</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1064.png" alt="1064"></p><h2 id="webpack基本使用流程自我总结"><a href="#webpack基本使用流程自我总结" class="headerlink" title="webpack基本使用流程自我总结"></a>webpack基本使用流程自我总结</h2><p>1-首先npm init 生成一个package.json</p><p>2-安装webpack，npm install webpack webpack cli -D (-D是开发依赖局部安装的意思)</p><p>3-创造webpack.config.js文件。里面写webpack的配置，如使用哪些loder，打包输出的主js文件叫什么，webpack打包入口js是哪个等等各种配置。</p><p>4-从打包入口js处写入import引入代码，引入其他文件，形成依赖图，然后安装需要的各种需要的loder</p><p>5-在package.json设置一个script，让npx webpack –config webpack.config.js这行命令简化成一个script，当然你乐意敲可以不设置。（npx是因为模块的查找机制，当前路径是没有webpack的，因为是局部安装，环境变量中也没有webpack，所以npm会找不到，npx则会自动取node_module文件夹找）</p><p>6-运行webpack，得到build文件，里面就有打包好的原生js</p><h2 id="webpack对js的打包babel作用"><a href="#webpack对js的打包babel作用" class="headerlink" title="webpack对js的打包babel作用"></a>webpack对js的打包babel作用</h2><p>原先webpack一样能打包代码，但是如果我们写了es6的代码，打包后还是es6，就导致有的浏览器可能不兼容，那么如何把所有js代码转换为es5呢，就需要用到babel-loader</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1065.png" alt="1065"></p><p><strong>babel命令行的使用</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1066.png" alt="1066"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1067.png" alt="1067"></p><p>它本身是一个独立的工具，可以独立使用，也可以配合webpack，在webpack中写入配置使用。</p><p>注意这里不是一个babel-loader就把代码的箭头函数和const声明方式转换了，而是用了两个插件</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span>   test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>   use<span class="token operator">:</span> <span class="token punctuation">[</span>     <span class="token punctuation">&#123;</span>        loader<span class="token operator">:</span> <span class="token string">"babel-loader"</span><span class="token punctuation">,</span>        <span class="token comment">// options: &#123;</span>         <span class="token comment">//这里注释是因为我们使用了预设，这里的代码就不需要了</span>       <span class="token comment">//   plugins: [</span>       <span class="token comment">//     "@babel/plugin-transform-arrow-functions",</span>       <span class="token comment">//     "@babel/plugin-transform-block-scoping" </span>       <span class="token comment">//   ]</span>       <span class="token comment">// &#125; </span>     <span class="token punctuation">&#125;</span>   <span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>babel插件的单独配置文件</strong></p><p>和postcss一样，babel也可以单独配置文件，防止webpack.config.js的代码太过冗杂</p><p>手动添加一个babel.config.js代码如下</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// plugins: [</span>  <span class="token comment">//   "@babel/plugin-transform-arrow-functions",</span>  <span class="token comment">//   "@babel/plugin-transform-block-scoping"</span>  <span class="token comment">// ]</span>  presets<span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">"@babel/preset-env"</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>babel的预设</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1068.png" alt="1068"></p><p>有了这个预设，箭头函数和声明方式就不需要两个插件了，只需要一个预设</p><p>上面的命令是工具单独使用，我们一般不用的，我们都是在webpack中添加配置文件，配合babel使用，代码在上面写过了。</p><p><strong>babel的常见预设有三个</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1069.png" alt="1069"></p><p>其中env就environment环境的意思。</p><p><em>babel的更加详细的使用和原理在工程化高级里面coderwhy老师会讲，这里我们知道有这个东西就好了。</em></p><h2 id="对vue文件处理打包"><a href="#对vue文件处理打包" class="headerlink" title="对vue文件处理打包"></a>对vue文件处理打包</h2><p>我们开发vue，自然要npm install vue，注意这里不要加-D因为vue在生产和开发中都要用到，不像webpack只在我们开发的时候用到，但是这里也是局部安装，只存在于安装的这个文件内，全局安装是要-g的（vue也不会全局安装，因为不同项目用的版本不同）。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1070.png" alt="1070"></p><p>vue比较特殊，安装了vue-loader，还必须安装一个插件  </p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1071.png" alt="1071"></p><h2 id="resolve模块解析"><a href="#resolve模块解析" class="headerlink" title="resolve模块解析"></a>resolve模块解析</h2><p>它是帮助webpack从require和import中找到需要引入的模块</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1072.png" alt="1072"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> VueLoaderPlugin <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"vue-loader/dist/index"</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  entry<span class="token operator">:</span> <span class="token string">"./src/main.js"</span><span class="token punctuation">,</span>  output<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    filename<span class="token operator">:</span> <span class="token string">"bundle.js"</span><span class="token punctuation">,</span>    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"./build"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// assetModuleFilename: "abc.png"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  resolve<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//为import和require引入东西的时候，添加扩展名</span>    extensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">".js"</span><span class="token punctuation">,</span> <span class="token string">".json"</span><span class="token punctuation">,</span> <span class="token string">".vue"</span><span class="token punctuation">,</span> <span class="token string">".jsx"</span><span class="token punctuation">,</span> <span class="token string">".ts"</span><span class="token punctuation">,</span> <span class="token string">".tsx"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token comment">//alias设置别名</span>    alias<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      utils<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"./src/utils"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当我们import或者require一个东西在页面上</p><p>如下</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createApp <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> Hello <span class="token keyword">from</span> <span class="token string">'./vue_demo/Hello'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> sum <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./utils/math'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1073.png" alt="1073"></p><p>如果是一个文件，带了后缀名，就会直接打包</p><p>不带后缀名的话，就会webpack底层就会通过resolve.extensions自动为我们的文件添加后缀名。</p><p>怎么自动找到我的文件应该是什么后缀？不同的代码有不同的特点，webpack有自己的识别办法。</p><p><strong>extensions是可以自己配置的</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1074.png" alt="1074"></p><p>我们可以自己配置，把需要自动加后缀名的后面加到resolve对象的extensions数组里面</p><p>所以如果我们不配置这个extensions那么直接import Vue文件的话，就会识别不到，然后报错无法找到import文件，所以必须自己写上.vue后缀，如hello.vue</p><blockquote><p> 如果是文件夹，如import utils from “./utils”那么就会默认变成import utils from “./utils/index”，这个index的后缀又会进行resolve.extensions匹配。</p></blockquote><p><em>我认为根本没必要配，页面import或者require引入的时候，全部老老实实写个后缀还容易区分点</em></p><p><strong>alias</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1075.png" alt="1075"></p><p>当我们的层级很深（项目中很容易遇到），那么引入写相对路径的话，就需要写好多个../非常不容易识别，所以我们经常在webpack.config.js内给它配置一个alias</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//这里是webpack.config.js</span>resolve<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//为import和require引入东西的时候，添加扩展名</span>    extensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">".js"</span><span class="token punctuation">,</span> <span class="token string">".json"</span><span class="token punctuation">,</span> <span class="token string">".vue"</span><span class="token punctuation">,</span> <span class="token string">".jsx"</span><span class="token punctuation">,</span> <span class="token string">".ts"</span><span class="token punctuation">,</span> <span class="token string">".tsx"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token comment">//alias设置别名</span>    alias<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      utils<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"./src/utils"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1076.png" alt="1076"></p><h2 id="webpack的常见插件和模式"><a href="#webpack的常见插件和模式" class="headerlink" title="webpack的常见插件和模式"></a>webpack的常见插件和模式</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1077.png" alt="1077"></p><p>loader就是把各种各样后缀的代码，变成浏览器可以看得懂的三剑客代码</p><p>plugin可以做loader外的各种事情。优化打包，资源管理（管理文件等），环境变量注入等等各种拓展功能。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> VueLoaderPlugin <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"vue-loader/dist/index"</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> CleanWebpackPlugin <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"clean-webpack-plugin"</span><span class="token punctuation">)</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> DefinePlugin <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"webpack"</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  mode<span class="token operator">:</span> <span class="token string">"production"</span><span class="token punctuation">,</span>  entry<span class="token operator">:</span> <span class="token string">"./src/main.js"</span><span class="token punctuation">,</span>  output<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    filename<span class="token operator">:</span> <span class="token string">"bundle.js"</span><span class="token punctuation">,</span>    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"./build"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    clean<span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token comment">// assetModuleFilename: "abc.png"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  resolve<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    extensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">".js"</span><span class="token punctuation">,</span> <span class="token string">".json"</span><span class="token punctuation">,</span> <span class="token string">".vue"</span><span class="token punctuation">,</span> <span class="token string">".jsx"</span><span class="token punctuation">,</span> <span class="token string">".ts"</span><span class="token punctuation">,</span> <span class="token string">".tsx"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    alias<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      utils<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"./src/utils"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  module<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    rules<span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        use<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">"style-loader"</span><span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span> <span class="token string">"postcss-loader"</span> <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        use<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">"style-loader"</span><span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span> <span class="token string">"less-loader"</span><span class="token punctuation">,</span> <span class="token string">"postcss-loader"</span> <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(png|jpe?g|svg|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        <span class="token comment">// 1.打包两张图片, 并且这两张图片有自己的地址, 将地址设置到img/bgi中</span>        <span class="token comment">// 缺点: 多图片加载的两次网络请求</span>        <span class="token comment">// type: "asset/resource",</span>        <span class="token comment">// 2.将图片进行base64的编码, 并且直接编码后的源码放到打包的js文件中</span>        <span class="token comment">// 缺点: 造成js文件非常大, 下载js文件本身消耗时间非常长, 造成js代码的下载和解析/执行时间过长</span>        <span class="token comment">// type: "asset/inline"</span>        <span class="token comment">// 3.合理的规范:</span>        <span class="token comment">// 3.1.对于小一点的图片, 可以进行base64编码</span>        <span class="token comment">// 3.2.对于大一点的图片, 单独的图片打包, 形成url地址, 单独的请求这个url图片</span>        type<span class="token operator">:</span> <span class="token string">"asset"</span><span class="token punctuation">,</span>        parser<span class="token operator">:</span> <span class="token punctuation">&#123;</span>          dataUrlCondition<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            maxSize<span class="token operator">:</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1024</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        generator<span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 占位符</span>          <span class="token comment">// name: 指向原来的图片名称</span>          <span class="token comment">// ext: 扩展名</span>          <span class="token comment">// hash: webpack生成的hash</span>          filename<span class="token operator">:</span> <span class="token string">"img/[name]_[hash:8][ext]"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        use<span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>             loader<span class="token operator">:</span> <span class="token string">"babel-loader"</span><span class="token punctuation">,</span>             <span class="token comment">// options: &#123;</span>            <span class="token comment">//   plugins: [</span>            <span class="token comment">//     "@babel/plugin-transform-arrow-functions",</span>            <span class="token comment">//     "@babel/plugin-transform-block-scoping"</span>            <span class="token comment">//   ]</span>            <span class="token comment">// &#125; </span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.vue$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>        loader<span class="token operator">:</span> <span class="token string">"vue-loader"</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">VueLoaderPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// new CleanWebpackPlugin(),</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      title<span class="token operator">:</span> <span class="token string">"电商项目"</span><span class="token punctuation">,</span>      template<span class="token operator">:</span> <span class="token string">"./index.html"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">new</span> <span class="token class-name">DefinePlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token constant">BASE_URL</span><span class="token operator">:</span> <span class="token string">"'./'"</span><span class="token punctuation">,</span>      coderwhy<span class="token operator">:</span> <span class="token string">"'why'"</span><span class="token punctuation">,</span>      counter<span class="token operator">:</span> <span class="token string">"123"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有的插件不用引入，因为根本没用到里面的变量，如postcss的autoprefixer</p><p>有的插件比如下面的插件，你需要在plugin里面new 实例化东西，就必须引入了</p><p>引入的方式不同插件也不同，看插件作者怎么写的，如cleanwebpackplugin需要解构，但是htmlwebpackplugin又不需要解构</p><p><strong>cleanWebpackPlugin</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1078.png" alt="1078"></p><p>dist文件夹就是打包后默认生成的文件夹，我们原先自己在webpack.config.js 的output中配置了文件夹名称为build，不配置默认是dist</p><p>tips：我们可以不用这个插件，在最新的webpack里面，配置中有一个output.clean可以和这个插件有相同的效果。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1083.png" alt="1083"></p><p>文档<a href="https://webpack.docschina.org/concepts/">https://webpack.docschina.org/concepts/</a></p><p><strong>html-wepack-plugin</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1079.png" alt="1079"></p><p>1-意思就是说，webpack打包后，不会自动生成index.html在dist里面，这个插件可以自动生成一个html，这个html模板可以在node_modules里面的此插件的包的lib/default_index.js修改，或者在template指定模板。</p><p>2-默认生成title为WebpackAPP，我们可以在new的时候就修改</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">plugins<span class="token operator">:</span> <span class="token punctuation">[</span>   <span class="token comment">// new CleanWebpackPlugin(),</span>   <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>     title<span class="token operator">:</span> <span class="token string">"电商项目"</span><span class="token punctuation">,</span>     template<span class="token operator">:</span> <span class="token string">"./index.html"</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>3-其实我感觉这些都是鸡肋，我还不如自己建一个index.html，花里胡哨的全是配置恶心死了。</em></p><p><strong>DefinePlugin</strong></p><p>它是webpack内置的插件</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1080.png" alt="1080"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> DefinePlugin <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"webpack"</span><span class="token punctuation">)</span>    <span class="token keyword">new</span> <span class="token class-name">DefinePlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token constant">BASE_URL</span><span class="token operator">:</span> <span class="token string">"'./'"</span><span class="token punctuation">,</span>      coderwhy<span class="token operator">:</span> <span class="token string">"'why'"</span><span class="token punctuation">,</span>      counter<span class="token operator">:</span> <span class="token string">"123"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1-它的作用就是注入一个变量，如上代码写在webpack.config.js中，就把当前项目注入了三个变量，比如在其他地方页面是可以直接使用coderwhy这个变量表示why字符串的</p><p>2-它默认注入了一个process.env.NODE_ENV，里面记录了当前的模式</p><p><strong>Mode模式配置</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1081.png" alt="1081"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1082.png" alt="1082"></p><p>1-通俗点就是写上production意思是生成的代码用于生产环境，不是在开发中，就又很多模块会去混淆压缩代码什么的，然后代码都在一行很难看懂</p><p>2-写development就是告诉webpack当前是在开发阶段，那么打包的代码，就能被开发者看懂。</p><h2 id="webpack打包本地服务器"><a href="#webpack打包本地服务器" class="headerlink" title="webpack打包本地服务器"></a>webpack打包本地服务器</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1084.png" alt="1084"></p><p>打包需要开启本地服务器服务才能执行，以前我们是通过live server插件来打开的，有一个弊端</p><p>每次我们修改了代码，都需要重新打包。特别麻烦</p><p>webpack搭建的本地服务器去执行的话，就可以实时编译，我们写的代码一变，浏览器页面也可以更着变化。</p><h3 id="开启本地服务器"><a href="#开启本地服务器" class="headerlink" title="开启本地服务器"></a>开启本地服务器</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1085.png" alt="1085"></p><p>1-安装这个包</p><p>2-在webpack.config.js中的script中添加”serve”:“webpack serve –config wk.config.js”</p><p>3-npm run serve或者npx webpack serve –config wk.config.js</p><p>注意不能直接写npx webpcak -serve 因为如果你不指定配置，有的设置不存在，会报错的。</p><h3 id="HMR热模块替换"><a href="#HMR热模块替换" class="headerlink" title="HMR热模块替换"></a>HMR热模块替换</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1086.png" alt="1086"></p><p>热模块更新，就是我们只改了一个东西，比如把console.log(‘1’)改成了console.log(‘2’)</p><p>我们不应该重新刷新整个页面，而是只改变这个console.log</p><p>在webpack-dev-server中其实内置了hmr热模块更新，也是默认打开的，所以下图中的hot:true可写可不写</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1087.png" alt="1087"></p><p>虽然直接支持也默认开启了，但是我们需要在打包入口文件.js中指定哪些模块发生更新时，进行HMR</p><p>问题：这玩意也太麻烦了，一个一个判断引入，我不如让它页面直接全部刷新呢，真是鸡肋！</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1088.png" alt="1088"></p><blockquote><p>事实上这些是不需要我们自己配置的，在vue-loader中，这些东西都帮我们配置好了，我们这里学它只是了解有这个东西。</p></blockquote><h3 id="devServer配置"><a href="#devServer配置" class="headerlink" title="devServer配置"></a>devServer配置</h3><p>webpack-dev-server默认是在8080端口，我们也可以配置这些东西，比如指定端口。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">devServer<span class="token operator">:</span> <span class="token punctuation">&#123;</span>   hot<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>   <span class="token comment">// host: "0.0.0.0",</span>   <span class="token comment">// port: 8888,</span>       <span class="token comment">//自动打开浏览器</span>   <span class="token comment">// open: true</span>       <span class="token comment">//压缩文件</span>   <span class="token comment">// compress: true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1089.png" alt="1089"></p><p>host写成0.0.0.0的话，如我们本地ip地址为192.168.1.90，那么在学校机房，同一个局域网内，我的同学是192.168.1.91，同学也是可以在浏览器中通过192.168.1.90：8080访问到我们的页面 的</p><h3 id="开发和生成环境"><a href="#开发和生成环境" class="headerlink" title="开发和生成环境"></a>开发和生成环境</h3><p><strong>如何区分生产和开发环境</strong></p><p>以前我们把所有的配置都写在webpack.config.js中，其实不同插件是运用于不同开发环境的，比如devServer插件是用于生产环境，而cleanWebpackPlungun是用于在开发环境帮我们删文件的。</p><p>如果它们都配置在webpack.config.js同一个地方，在运行的时候就会浪费一些性能，比如我们在开发的时候，就不需要devServer插件再去运行一下子了</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1090.png" alt="1090"></p><p><strong>入口entry文件解析</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1091.png" alt="1091"></p><p>我们一般不修改content，就让它默认就好了</p><p>这里只需要知道，即使webpack.dev.config.js文件在config文件夹内，也就是多进去了一层，entry还是写./src/main.js的，而不是../src/main.js</p><p><strong>webpack配置文件抽取公共部分</strong></p><blockquote><p>tips：为什么webpack里面的配置用的是commomjs？因为webpack是需要运行在node环境中的，node环境直接支持的就是commomjs模块化</p></blockquote><p>上面说到要把webpack.config.js分为webpack.dev.config.js和webpack.product.config.js两个配置文件，在运行的时候可以节约性能，那么它们之间是有很多共同的配置的，也就是公共部分。</p><p>比如入口entry和出口打包文件的output还有loader等等都是公共部分，两个配置文件都需要。</p><p>所有我们通常再创造一个文件webpack.common.config.js（这个名字随便命名，你用的时候知道就好了）</p><p>webpack.dev.config.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> merge <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"webpack-merge"</span><span class="token punctuation">)</span><span class="token keyword">const</span> commonConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./webpack.common.config"</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  mode<span class="token operator">:</span> <span class="token string">"development"</span><span class="token punctuation">,</span>  devServer<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    hot<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// host: "0.0.0.0",</span>    <span class="token comment">// port: 8888,</span>    <span class="token comment">// open: true</span>    <span class="token comment">// compress: true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上，抽取了公共配置后，dev配置直接使用require引入就好了</p><p>然后我们需要用到一个合并插件</p><p>npm installwebpack-merge -D</p><p>可以看到在代码中，我们使用了这个插件的包的一个merge函数，然后通过这个函数合并了公共配置和当前dev配置。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这些七里八里的配置插件，大部分不需要记，我们知道有这个东西，万一需要查文档用就好了</p><p>而且大部分配置我们在vue开发中，脚手架都帮我们搞好了，只是说了解了原理，出现了错误，我们可以快速解决</p><h2 id="作业布置"><a href="#作业布置" class="headerlink" title="作业布置"></a>作业布置</h2><h3 id="三-什么是loader？webpack的loader是什么作用？和Plugin有什么区别？"><a href="#三-什么是loader？webpack的loader是什么作用？和Plugin有什么区别？" class="headerlink" title="三. 什么是loader？webpack的loader是什么作用？和Plugin有什么区别？"></a>三. 什么是loader？webpack的loader是什么作用？和Plugin有什么区别？</h3><ul><li><p>loader用来对模块的源代码进行转换,加载文件</p><ul><li><p>比如因为webpack 不知道怎么样去加载css文件,所以我们需要用css-loader来加载css文件</p></li><li><p>主要通过配置方式来使用loader来加载</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">module<span class="token operator">:</span> <span class="token punctuation">&#123;</span>   rules<span class="token operator">:</span> <span class="token punctuation">[</span>     <span class="token punctuation">&#123;</span>       <span class="token comment">// 告诉webpack匹配以.css结尾的文件</span>       test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>       <span class="token comment">// use: [</span>       <span class="token comment">//   // 注意顺序,从下往上执行</span>       <span class="token comment">//   &#123; loader: "style-loader" &#125;,</span>       <span class="token comment">//   &#123; loader: "css-loader" &#125;</span>       <span class="token comment">// ]</span>       <span class="token comment">//简写一: 如果loader只有一个</span>       <span class="token comment">// loader: "css-loader"</span>       <span class="token comment">//简写二: 多个loader不需要其他属性时,可以直接写loader字符串形式</span>       <span class="token comment">// 配置方式一</span>       use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"style-loader"</span><span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">]</span>       <span class="token comment">// 配置方式二</span>       <span class="token comment">// use: ["style-loader", "css-loader", &#123;</span>       <span class="token comment">//   loader: "postcss-loader",</span>       <span class="token comment">//   options: &#123;</span>       <span class="token comment">//     postcssOptions: &#123;</span>       <span class="token comment">//       plugins: [</span>       <span class="token comment">//         "autoprefixer"</span>       <span class="token comment">//       ]</span>       <span class="token comment">//     &#125;</span>       <span class="token comment">//   &#125;</span>       <span class="token comment">// &#125;]</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>     <span class="token punctuation">&#123;</span>       <span class="token comment">// 告诉webpack匹配以.css结尾的文件</span>       test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>       <span class="token comment">// use: [</span>       <span class="token comment">//   // 注意顺序,从下往上执行</span>       <span class="token comment">//   &#123; loader: "style-loader" &#125;,</span>       <span class="token comment">//   &#123; loader: "css-loader" &#125;,</span>       <span class="token comment">//   &#123; loader: "less-loader" &#125;,</span>       <span class="token comment">//   &#123; loader: "postcss-loader" &#125;</span>       <span class="token comment">// ]</span>       <span class="token comment">// 简写</span>       use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"style-loader"</span><span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span> <span class="token string">"less-loader"</span><span class="token punctuation">,</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>     <span class="token punctuation">&#125;</span>   <span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>loader和plugin的区别<ul><li>loader是用于特定的模块类型(css,vue…)进行解析加载</li><li>plugin 是用于执行更多广泛的任务,比如打包优化,资源管理,环境变量注入等<ul><li>常见的插件<ul><li>CleanWebpackPlugin  <strong>每次修改了一些配置，重新打包时，帮助我们删除dist文件夹</strong></li><li>HtmlWebpackPlugin   <strong>对index.html进行打包处理,自动在dist文件夹中，生成了一个index.html的文件</strong></li><li>DefinePlugin   <strong>允许在编译时创建配置的全局常量，是一个webpack内置的插件（不需要单独安装）</strong><ul><li>比如process.env.NODE_ENV  <strong>判断当前环境是开发还是生产</strong></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><h3 id="四-什么是babel？babel在开发中是什么作用？"><a href="#四-什么是babel？babel在开发中是什么作用？" class="headerlink" title="四. 什么是babel？babel在开发中是什么作用？"></a>四. 什么是babel？babel在开发中是什么作用？</h3><ul><li>Babel是一个工具链，主要用于旧浏览器或者环境中将ECMAScript 2015+代码转换为向后兼容版本的JavaScript (ES6以上的代码转成ES5代码)</li><li>作用: 语法转换,源代码转换,箭头函数转换 ,ES6以上的代码转成ES5代码</li></ul><h3 id="五-webpack的开发模式和生产模式有什么区别？"><a href="#五-webpack的开发模式和生产模式有什么区别？" class="headerlink" title="五.webpack的开发模式和生产模式有什么区别？"></a>五.webpack的开发模式和生产模式有什么区别？</h3><ul><li>Mode: development   开发模式<ul><li>会将process.env.NODE_ENV 的值设置为development</li></ul></li><li>Mode: production  生产模式<ul><li>会将process.env.NODE_ENV 的值设置为production</li></ul></li></ul><h3 id="六-webpack如何开启本地服务器，并且提高页面的更新效率（HMR）？"><a href="#六-webpack如何开启本地服务器，并且提高页面的更新效率（HMR）？" class="headerlink" title="六. webpack如何开启本地服务器，并且提高页面的更新效率（HMR）？"></a>六. webpack如何开启本地服务器，并且提高页面的更新效率（HMR）？</h3><ul><li><p>如何开启本地服务器?</p><ul><li><p>安装webpack-dev-server</p><pre class="line-numbers language-none"><code class="language-none">npm install webpack-dev-server -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改配置文件,启动时加上serve</p><pre class="line-numbers language-none"><code class="language-none">&quot;scripts&quot;: &#123;   &quot;serve&quot;: &quot;webpack serve --config wk.config.js&quot; &#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>命令 : npm run serve</p></li></ul></li><li><p>HMR   <strong>模块热替换</strong></p><ul><li><p>模块热替换是指在 应用程序运行过程中，替换、添加、删除模块，而<strong>无需重新刷新整个页面</strong></p></li><li><p>如何使用HMR</p><ul><li>默认情况下，webpack-dev-server已经支持HMR，我们只需要开启即可（默认已经开启）； </li><li>在不开启HMR的情况下，当我们修改了源代码之后，整个页面会自动刷新，使用的是live reloading；</li></ul><p>在main.js中</p><pre class="line-numbers language-none"><code class="language-none">if (module.hot) &#123;  module.hot.accept(&quot;.&#x2F;utils&#x2F;demo.js&quot;, () &#x3D;&gt; &#123;    console.log(&quot;demo更新&quot;)  &#125;)&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架前置课 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESModule&amp;Webpack&amp;npm_03</title>
      <link href="archives/de343fb.html"/>
      <url>archives/de343fb.html</url>
      
        <content type="html"><![CDATA[<p>这些包管理工具，yarn的出现就是因为原先那些大公司觉得npm太难用了，没有缓存机制等</p><p>npm5后继续了很多好的更新，基本上和yarn没有区别了，而且是安装node自动安装npm</p><p>其他的cnpm和pnpm都各有各的优点，但是现在最常用的还是npm，其他管理工具基本上命令也差不多，最多改个单词。</p><h2 id="npx工具"><a href="#npx工具" class="headerlink" title="npx工具"></a>npx工具</h2><p>npm命令-s -g -d区别<a href="https://blog.csdn.net/LinWang__King/article/details/120518442">https://blog.csdn.net/LinWang__King/article/details/120518442</a></p><p>tips:只有先npm init 生成了package.json，然后install webpack才会生成node_modules文件夹。 </p><p>一般来说通过npm安装包后，在控制台目录输入命令如webpack，它会</p><p>在当前目录找有没有webpack可执行程序，没有的话就会去全局环境变量找。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/976.png" alt="976"></p><p>也就是说如果我没有全局安装，而只是局部安装在一个项目中，我们必须在.node_module/.bin文件中的终端中才能使用webpack（其他包同理）命令。<img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/977.png" alt="977"></p><p>这样非常麻烦，所以就有了npx，它在安装npm的时候就已经被安装好了。</p><p>用npx webpack -v等命令就会优先去node_module整个里面去寻找</p><p>因为每次都要写npx，如果你觉得麻烦，可以在package.json中写一个scripts（scripts中如下执行要npm run bulid）</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/975.png" alt="975"></p><p>scripts里面可以写webpack也可以写npx webpack，因为scripts里面的脚本命令默认先从node_module中找可执行文件。</p><p>tips:webpack可以把代码打包生成一个dist（<em>distribution</em>）文件，就相当于混淆压缩一下，代码的变量等会被改变缩减都被删除，但是作用和逻辑不变。</p><p><strong>问题：</strong></p><p>直接把npm内置为npx那种查找方式不就行了？</p><p>存在即合理，有时候就需要两种不同的方法去调试。</p><h2 id="npm发布自己的包"><a href="#npm发布自己的包" class="headerlink" title="npm发布自己的包"></a>npm发布自己的包</h2><p><a href="https://blog.csdn.net/hei_xiaomian/article/details/103364086">https://blog.csdn.net/hei_xiaomian/article/details/103364086</a></p><p><strong>库</strong><br>是一个封装了一些东西的集合，提供给开发者使用，比如说jQuery对难以使用的API进行了封装，让我们更方便的操作DOM；库没有控制权，控制权在使用者手中。关键在于封装</p><p><strong>框架</strong><br>是一套完整的解决方案，会控制整个流程，控制权不在使用者手中。帮助我们减少DOM操作，提高渲染效率，让我们将更多的精力放在业务逻辑上。</p><p>总结：</p><p>也就是说，库只是让我们更方便的操作dom，框架是声明式开发，我们主要是写一些逻辑和数据绑定。</p><p>比如砍柴，库就是一把斧子，让我们可以把一棵树更方便的砍成小节来烧，但本质是需要我们来砍的；但是框架就像一个机器，我们把树丢进去，出来就是小木柴，怎么让一颗树变成木柴的过程我们是看不到的，也不需要我们操作，但是它有一个限制。必须放指定大小的树放到指定的位置，这就是框架的约束。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/978.png" alt="978"><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/979.png" alt="979"></p><p>登入后在cd到要发布的文件夹下，输入npm publish即可</p><p>在测试的时候，我们一般把代码通过webpack打包后再在html页面中通过script引入dist中的js，如果不打包直接引入原始js的话，必须把esmodule这些模块化工具的引入地址import xxx from xxx 写绝对地址，比较麻烦。 </p><p>tips：修改代码后重新发布，必须修改版本号。</p><h2 id="pnpm"><a href="#pnpm" class="headerlink" title="pnpm"></a>pnpm</h2><p>npm/yarn/cnpm的通病：比如电脑有一百个项目，这些项目都要用相同的包，但是每个项目都要重复安装，很占空间。</p><p>tips：原先说的lock-package缓存机制只是相当于共用一个压缩安装包，不需要再从npm仓库去下载，安装照样是分开的。</p><p>performant （性能好的）npm</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/980.png" alt="980"></p><p><strong>软连接和硬链接</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/981.png" alt="981"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/982.png" alt="982"></p><p>通俗说，拷贝是复制原文件开辟了新的data；</p><p>软连接其实就相当于一个快捷方式，一个文件包含了另一个文件的地址；</p><p>硬链接是两个不同名字的文件，但是指向同一片内存，一个文件修改另一个跟着也会变。</p><p><strong>pnmp的运行机制</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/983.png" alt="983"></p><p>很明显pnpm运用了硬链接，pnpm只保存不同内容的包，不同项目使用相同的包，都通过硬链接指向同一片内存数据（就是那个包）。大大的节省了内存和磁盘空间。</p><p>1-假设现在安装acxios，那么它就会被硬链接保存在store文件中，每当有其他项目需要acxios，就会通过store里面的硬链接来知道已经有了这个包，就再建立一个硬链接到那个项目。</p><p>2-硬链接不能跨磁盘，比如电脑自带的固态和一个外接的机械，是无法建立硬链接的。</p><p><strong>pnpm非扁平化的node_modules</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/984.png" alt="984"></p><p>非扁平化的好处就是无法让源码访问不属于当前项目设定的依赖包。</p><p>如下为npm和yarm的node_modules</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/985.png" alt="985"></p><p>我其实就安装了一个webpack和axios，但是它们两个包又依赖了许多其他的包，所以这些包都扁平化的呈现在node_modules里面，是同等级的，就导致了我没有安装的包也可以被源码使用（有益也有害，如果我在源码使用了如上的acorn，那万一我把webpack卸载了，acorn也没就失效了）</p><p>非扁平化就避免了这种情况</p><h2 id="pnpm的安装和使用"><a href="#pnpm的安装和使用" class="headerlink" title="pnpm的安装和使用"></a>pnpm的安装和使用</h2><p>官网pnmp.io</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/986.png" alt="986"></p><p><strong>存储位置</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/987.png" alt="987"></p><p>它也存在问题，比如pnpm-store文件会越来越大，就算你那个项目不使用了，直接删了，那个项目用的包的硬链接还是存在于pnpm-store文件夹中，不像npm和yarm整个项目文件删了包也一起删了。</p><p>虽然pnpm-store中相同的包只存一份，但是也是会越来越大的，当我们有的包不使用了需要删除，可以通过pnpm store prune </p><p>tips：这个命令不需要频繁执行，因为pnpm的速度优势，就是可以让多个项目共用一个包，等于说免了其他项目，包的安装，如果清除了，下一次等于又要下载安装，那pnmp就毫无意义了。</p><p>prune修剪，裁剪</p><h2 id="邂逅Webpack和打包过程"><a href="#邂逅Webpack和打包过程" class="headerlink" title="邂逅Webpack和打包过程"></a>邂逅Webpack和打包过程</h2><p><strong>项目开发流程</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/988.png" alt="988"></p><p>tips：什么叫脚手架？比如用webpack和vue，它是需要我们搭建架构什么的，特别麻烦，但是脚手架就帮我们完成了这些架构基本配置的搭建。（现在开发一个vue，我们直接vue create my-app即可，不需要搭建webpack的脚手架，因为vue直接内置了，但是如果我们有一些特殊要求，就需要自己懂webpack的底层配置了）</p><p>1-现在公司开发都用框架，不是说上去自己建一个index.html然后手写几个css和js完成项目的。</p><p>因为同样一个需求，原生的三剑客和ajax等等你得写几百行，但是框架可能只需要几行。（也可能纯原生开发，运行效率更高，但是开发的很慢）</p><p>2-如上的旅游项目，我们首先 确定使用哪种包管理工具，然后确定打包工具，然后确定用哪种框架</p><p>3-但是我们使用了框架比如vue，那么这些代码文件的后缀是.vue，里面的代码其实浏览器根本不认识，浏览器只认识原始的html和css和js。</p><p>所以我们需要打包工具，它可以将vue文件解析成浏览器可以识别的三剑客代码（如果是原生代码，打包会混淆压缩它们）</p><p>4-打包工具有gulp，rolluo，webpack和新出现的vite，现在还是webpack为主，这些工具底层也都是js代码，但是不是我们学的那些操作dombom的js，而是操作文件的js。</p><p>5-因为打包工具底层是操作文件的js，所以它要基于一个环境，也就是node环境。</p><h3 id="内置模块path"><a href="#内置模块path" class="headerlink" title="内置模块path"></a>内置模块path</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/989.png" alt="989"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token keyword">const</span> filepath <span class="token operator">=</span> <span class="token string">"C://abc/cba/nba.txt"</span><span class="token comment">// 1.可以从一个路径中获取一些信息</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//.txt</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//nba.txt</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//C://abc/cba</span><span class="token keyword">const</span> path1 <span class="token operator">=</span> <span class="token string">"/abc/cba"</span><span class="token keyword">const</span> path2 <span class="token operator">=</span> <span class="token string">"../why/kobe/james.txt"</span><span class="token comment">// console.log(path1 + path2)</span><span class="token comment">// 2.将多个路径拼接在一起: path.join</span><span class="token comment">// console.log(path.join(path1, path2))</span><span class="token comment">// 将多个路径拼接一起, 最终一定返回一个绝对路径: path.resolve</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-------resolve---------"</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"./abc/cba"</span><span class="token punctuation">,</span> <span class="token string">"../why/kobe"</span><span class="token punctuation">,</span> <span class="token string">"./abc.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//不传值就返回当前文件的绝对路径</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/990.png" alt="990"></p><p>path.resolve当遇到/就默认为绝对路径，遇到./或者../继续往左边解析</p><p><strong>为什么学这玩意？</strong></p><p>因为在webpack中有的地方必须用到绝对路径。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/991.png" alt="991"></p><h2 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h2><h3 id="认识webpack"><a href="#认识webpack" class="headerlink" title="认识webpack"></a>认识webpack</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/992.png" alt="992"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/993.png" alt="993"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/994.png" alt="994"></p><p>一句话，webpack可以把浏览器不认识的东西打包成认识的，比如它支持各自模块化module如esmodule和commonjs，这些模块化导入导出什么的操作代码浏览器都是不认识的，webpack可以统一打包生成三剑客代码。</p><h3 id="webpack使用"><a href="#webpack使用" class="headerlink" title="webpack使用"></a>webpack使用</h3><p><strong>webpack底层是js，是依赖与node环境的。</strong></p><p>webpack.docschina.org</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/995.png" alt="995"></p><p>现在安装webpack必须安装webpack-cli，因为我们控制台敲命令的时候，事实上是去找了bin文件下的webpack可执行程序，这个程序又依赖webpack-cli的函数</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/996.png" alt="996"></p><p>webpack最好局部安装，因为我们不同项目比如vue2和vue3项目，事实上使用到的webpack版本一般是不同的。</p><p>又因为webpack只是开发时依赖，只在我们写代码的时候使用，浏览器渲染不需要用到它了，所以放在Devdependencies，安装的时候加 -D</p><p><strong>打包的注意</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/997.png" alt="997"></p><p>1-打包的时候默认会去找src文件夹中的index.js为入口，如果没有index.js会报错，我们可以在输入命令的时候就指定入口如 npx webpack –entry ./src/main.js</p><p>2-每次修改代码都要打包？太麻烦了，后续会有一个插件自动化感应代码改变就打包</p><p>3-为什么用npx？因为上面写过了，用npm只会去当前文件夹查找包，找不到去环境变量，再找不到就报错没有此包了。用npx的话就会去node_modules里面找</p><p>4-我们打包后，默认生成一个main.js的文件，我们也可以指定输出文件的名字，命令如下</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">npx webpack <span class="token operator">--</span>entry <span class="token punctuation">.</span><span class="token operator">/</span>src<span class="token operator">/</span>main<span class="token punctuation">.</span>js <span class="token operator">--</span>output<span class="token operator">-</span>filename bundle<span class="token punctuation">.</span>js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就把输出文件名字自动改为bundle.js了，该文件夹dist的话就是用–output-path</p><p><strong>问题</strong></p><p>你这也太麻烦了，这么长的命令让我敲，所以就有了配置文件（用的commonjs模块）</p><p>我们先手动创建webpack.config.js文件夹</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/998.png" alt="998"></p><p>可以看到报错了，因为这个path路径必须要绝对路径，这就需要用到原先的path内置模块中的path.resolve()方法</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    entry<span class="token operator">:</span> <span class="token string">"./src/main.js"</span><span class="token punctuation">,</span>    output<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        filename<span class="token operator">:</span> <span class="token string">"bundle.js"</span><span class="token punctuation">,</span>        path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"./build"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/999.png" alt="999"></p><p>配置文件夹的名字也可以更改的，但是在命令的时候需要指定配置文件路径（直接npx webpack就默认去找webpack.confog.js,如果配置文件都没有就完全默认，输出文件为main.js，文件夹为dist，也必须有index.js的入口）</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1000.png" alt="1000"></p><p>这每次改配置文件名称也难敲，所以可以在package.json的scripts中添加一个脚本也行。（最简单的方法就是写默认的配置文件名称，这里只是演示一种修改方法）</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/1001.png" alt="1001"></p><p>然后直接npx run build就行了。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架前置课 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESModule&amp;Webpack&amp;npm_01</title>
      <link href="archives/e3ed22d7.html"/>
      <url>archives/e3ed22d7.html</url>
      
        <content type="html"><![CDATA[<h2 id="框架前置课"><a href="#框架前置课" class="headerlink" title="框架前置课"></a>框架前置课</h2><p>1-node.js基础，node最重要是服务器开发，具体后面学，现在只学基础</p><p>2-npm/yarn/cnpm/npx/pnpm</p><p>3-模块化的使用</p><p>4-webpack，vue和reactCLI都会用到</p><p>5-GIT包管理工具</p><p>6-express</p><p>7-mysql基础知识</p><h2 id="Node-js是什么"><a href="#Node-js是什么" class="headerlink" title="Node.js是什么"></a>Node.js是什么</h2><p> <img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/909.png" alt="909"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/910.png" alt="910"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/911.png" alt="911"></p><p>1-node是一个基于V8引擎（处理js的）的JavaScript运行时环境</p><p>2-node.js与浏览器相比，都是基于V8引擎执行处理js，但是各自还有自己的其他应用，比如chorm浏览器肯定还有书签，收藏夹什么的，node.js也有中间层libuv去处理文件读写，网络io，事件循环等。</p><p>3-其中libuv（异步事件库）是由c语言编写的，所以node.js的一部分也是由c语言编写。</p><h2 id="Node的应用场景"><a href="#Node的应用场景" class="headerlink" title="Node的应用场景"></a>Node的应用场景</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/912.png" alt="912"></p><p>1-包的管理，以前我们引入一个框架库，vue或者react或者lodash等，都是需要去官网下载到本地，然后用script标签引入，但是有了包管理工具如npm，我们就可以直接安装，如npm install day.js</p><p>哪个页面需要使用，就import day.js from“”day.js”即可</p><p>tip：我们可以自己打包好node包上传到npm上，然后就可以通过npm在线下载了</p><p>2-用node.js开发服务器，中间件，代理服务器的开发。</p><p>3- 借助node.js完成前后端渲染的同构应用，如ssr服务器渲染。</p><p>4-用node运行为项目编写的JavaScript的脚本，而不是python和shell</p><p>5-使用electron开发桌面应用程序，也需要node环境才能运行。</p><h2 id="Node的安装和管理"><a href="#Node的安装和管理" class="headerlink" title="Node的安装和管理"></a>Node的安装和管理</h2><p>1-我们安装的时候最好用LTS，long time support版本，比较稳定。如果是个人学习可以选current最新版本。</p><p>2-我们也可以下载多个版本，通过工具管理，实现不同node版本间的切换。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/914.png" alt="914"></p><p>tip：我们下载后，后缀是msi全称就算Microsoft Install</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/913.png" alt="913"></p><p>这里有一个add to path 千万不要取消了，这个就是自动为我们node添加环境变量，也就是在cmd命令行中可以直接使用，如果取消了就需要自己像添加java环境那些一样去设置里面七七八八的手动添加环境变量，麻烦的要死，一个字母错了都不行。</p><p>最后在cmd命令行里面输入 node -v 和npm -v如果出来了版本号，就代表安装完毕了。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/916.png" alt="916"></p><p>如果我们这里勾选了，就会出现如下页面</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/915.png" alt="915"></p><p>这个页面，它是在为我们安装使用一些包可能需要用到的环境，比如需要c++编译，但是事实上这个时候我们node和npm已经安装好了，这里可以直接关闭，以后需要这些环境的时候再安装，也可以等待它全部下载安装完毕（不魔法上网大概率会安装失败）</p><p><strong>node的版本管理工具</strong></p><p>实现node版本的切换，可以在电脑上安装多个版本node，比如工作就用LTS版本，在家学习用Current版本。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/917.png" alt="917"></p><p>其中n和nvm都是只支持mac，所以github有人发布了nvm-windows</p><p><a href="https://github.com/coreybutler/nvm-windows">https://github.com/coreybutler/nvm-windows</a></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">nvm install latest 是安装当前时间最新的node版本nvm list是显示出当前电脑，安装了的node版本nvm use xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx 就是切换版本xx是版本号，注意这里需要给cmd管理员权限运行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>注意！！！</p><p>必须在nvm的配置文件也就是setting.txt中加入下面两行修改镜像源，不然你下一辈子都下不完，科学上网也不行。</p><p>tip:当你下载一些东西没反应，第一时间考虑要不要科学上网，如果还不行就换镜像源。</p><p>镜像源就是那些大厂什么的帮我们复制了国外的资源，然后我们在国内访问这个镜像源下载就行了。</p><blockquote><p>node_mirror: <a href="https://npm.taobao.org/mirrors/node/">https://npm.taobao.org/mirrors/node/</a><br>npm_mirror: <a href="https://npm.taobao.org/mirrors/npm/">https://npm.taobao.org/mirrors/npm/</a></p></blockquote><h2 id="JavaScript代码在node中的-执行"><a href="#JavaScript代码在node中的-执行" class="headerlink" title="JavaScript代码在node中的 执行"></a>JavaScript代码在node中的 执行</h2><p><strong>命令行运行</strong></p><p>1-以前我们的js文件，必须建一个html文件，然后用script引入，现在我们只需要把js写好，然后在命令行cd到当前demo.js文件的目录，然后node demo.js即可</p><p>2-移动盘符的命令，什么cd..  tab补全  dir  cls 百度学一下就行 </p><p>3-也可以在vscode的终端打开cmd和powershell都可以（vscode是用electron写的）</p><h2 id="Node的输入和输出"><a href="#Node的输入和输出" class="headerlink" title="Node的输入和输出"></a>Node的输入和输出</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/919.png" alt="919"></p><p><strong>输出</strong></p><p>很简单直接console.log()打印输出</p><p>console.clear()清空控制台</p><p>console.trace()输出函数的调用栈，也就是执行路径</p><p><strong>输入</strong></p><p>输入的话，原先用浏览器执行js，可以用prompt(),现在用node在终端执行怎么办呢？</p><p>在执行文件的命令后空格隔开，输入变量赋值即可。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//文件名字为demo.js</span><span class="token comment">// 1.输出的内容</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token keyword">const</span> num1 <span class="token operator">=</span> <span class="token number">100</span><span class="token keyword">const</span> num2 <span class="token operator">=</span> <span class="token number">200</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num1 <span class="token operator">+</span> num2<span class="token punctuation">)</span><span class="token comment">// 2.给程序输入内容</span><span class="token comment">// node ./webpack.config.js env=development</span><span class="token keyword">const</span> arg1 <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token keyword">const</span> arg2 <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">)</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// console.clear()</span>  console<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>命令</p><blockquote><p>node demo.js num1=20 num2=30</p></blockquote><p>在node中js是有一个process.argv的数组，里面保存了一些数据</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/918.png" alt="918"></p><p>为什么叫argv？</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/920.png" alt="，循环"></p><p><strong>node的repl</strong></p><p>read-eval-print-loop读取，求值，输出，循环</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/921.png" alt="921"></p><p>我们在控制台输入node就可以进入，输入.exit或者按两次ctrl+c就可以退出</p><p>它和我们在浏览器的console控制台差不多，可以写简单的js代码运行，实际中作用不大</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/922.png" alt="922"></p><h2 id="Node的全局对象"><a href="#Node的全局对象" class="headerlink" title="Node的全局对象"></a>Node的全局对象</h2><p>1-众所周知在浏览器中有全局对象window，但是在node中是没有window的,但是有global</p><p>2-一个是浏览器视口可以看到的所有东西，node根本没有视口何来window</p><p>3-在浏览器执行js中我们定义一个var变量会被添加成为window的属性，但是在node中不会被添加为global的属性</p><p>3-为了避免把浏览器和node的全局对象记混，统一了一个名字globalThis，在浏览器中指window，在node中指global，我个人认为多此一举。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/923.png" alt="923"></p><p><strong>process进程全局对象</strong></p><p>console.log(process)这个对象东西非常多比如原先说的argv[]，可以自己去nodejs.org或者api.nodejs.cn去查询文档</p><p>tips:org后缀域名代表非盈利性或政府组织。</p><p><strong>定时器也是全局对象</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/924.png" alt="924"></p><p>interval间隔，immediate立即立刻的也就是说它会立即执行这个回调函数。</p><p>process.nextTick()和setImmediate()谁先执行？在事件循环中会讲清楚。</p><h3 id="特殊的全局对象"><a href="#特殊的全局对象" class="headerlink" title="特殊的全局对象"></a>特殊的全局对象</h3><p>1-它实际上是模块中的变量，每个模块都有，像全局变量</p><p>2-在命令行交互中不可以使用。 </p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">假设当前文件在 e：\学习\demo<span class="token punctuation">.</span>js__dirname可以拿到当前代码所在的目录结构   <span class="token comment">//e：\学习\</span>__filename当前代码文件目录结构    <span class="token comment">//e：\学习\demo.js</span> module模块<span class="token punctuation">,</span>exports出口传播<span class="token punctuation">,</span>require需求，也是特殊的全局对象，后面会学<span class="token comment">// 特殊的全局对象</span><span class="token comment">// __dirname当前的文件所在的目录结构(重要) 注意这是两个下划线</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">)</span><span class="token comment">// __filename当前目录+文件名称</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>__filename<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="前端模块化"><a href="#前端模块化" class="headerlink" title="前端模块化"></a>前端模块化</h2><h3 id="什么是模块化开发"><a href="#什么是模块化开发" class="headerlink" title="什么是模块化开发"></a>什么是模块化开发</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/925.png" alt="925"></p><p>1-比如一个项目，不同的人为一个页面书写js，如果不使用模块化开发，那么”东方“写了a.js并定义了一些变量,”亚洲“就无法在b.js中再定义那些变量的名字。如果是一些常用的变量名如name，age，两个人就要去看另一个人的代码，避免变量冲突，这样就太麻烦了。</p><p>2-怎么办？我们可以用立即执行函数，因为有函数作用域的限制，所以不会冲突，但问题又来了，当我们需要用到另一个js文件的变量怎么办？因为作用域的限制，想要的时候又拿不到了</p><p>3-我们可以在立即执行函数里面书写函数返回值，把立即函数内的所有变量通过对象返回，那么别人在需要使用的时候就可以通过返回值引入了。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> moduleA <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">"why"</span>  <span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">18</span>  <span class="token keyword">let</span> height <span class="token operator">=</span> <span class="token number">1.88</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    name<span class="token punctuation">,</span>    age<span class="token punctuation">,</span>    height  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4-其实这样就避免了作用域的冲突，也可以导入导出不同文件的变量和函数等，但是每个人有每个人的习惯，你写的a.js返回的是对象，也许其他人不知道这个方法就不会调用a.js中的所需变量。必须有一个统一的书写方法。</p><p>5-所以社区就诞生了很多模块化的规范，其中有CommonJS和AMD和CMD，官方后来推出了ESMoudle使用的最多。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/926.png" alt="926"></p><p><strong>没有模块化的问题</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/927.png" alt="927"></p><h3 id="CommonJS（社区模块化方案）和Node"><a href="#CommonJS（社区模块化方案）和Node" class="headerlink" title="CommonJS（社区模块化方案）和Node"></a>CommonJS（社区模块化方案）和Node</h3><p>社区指定的约定规范，还有很多人使用。在webpack中也有它的影子</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/928.png" alt="928"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/929.png" alt="929"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">utile<span class="token punctuation">.</span>js<span class="token keyword">const</span> <span class="token constant">UTIL_NAME</span> <span class="token operator">=</span> <span class="token string">"util_name"</span><span class="token keyword">function</span> <span class="token function">formatCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token string">"200万"</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">formatDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token string">"2022-10-10"</span><span class="token punctuation">&#125;</span><span class="token comment">//exports是一个对象，如果你没有导入任何东西就是空的</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>exports<span class="token punctuation">)</span> <span class="token comment">// &#123;&#125;</span><span class="token comment">//导出</span><span class="token comment">//这个变量随便命名的，命名为一样使用方便点</span>exports<span class="token punctuation">.</span><span class="token constant">UTIL_NAME</span> <span class="token operator">=</span> <span class="token constant">UTIL_NAME</span>exports<span class="token punctuation">.</span>formatCount <span class="token operator">=</span> formatCountexports<span class="token punctuation">.</span>formatDate <span class="token operator">=</span> formatDate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>导入</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 1.直接获取导出的对象, 从对象中获取属性</span><span class="token comment">//这个util是一个对象，你随便命名的，这是命名为文件名字有利于区分</span><span class="token comment">// const util = require("./util.js")</span><span class="token comment">// console.log(util.UTIL_NAME)</span><span class="token comment">// console.log(util.formatCount())</span><span class="token comment">// console.log(util.formatDate())</span><span class="token comment">// 2.导入对象之后, 直接对其进行解构</span><span class="token comment">// const &#123; </span><span class="token comment">//   UTIL_NAME,</span><span class="token comment">//   formatCount, </span><span class="token comment">//   formatDate </span><span class="token comment">// &#125; = require("./util.js")</span><span class="token comment">// console.log(UTIL_NAME)</span><span class="token comment">// console.log(formatCount())</span><span class="token comment">// console.log(formatDate())</span><span class="token comment">// 3.探讨require的本质</span><span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./bar.js"</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bar<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token comment">// bar</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bar<span class="token punctuation">.</span>nb<span class="token punctuation">)</span> <span class="token comment">// bar</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span> <span class="token comment">// bar</span><span class="token comment">// 4s之后重新获取name</span><span class="token comment">// setTimeout(() => &#123;</span><span class="token comment">//   console.log(bar.name)</span><span class="token comment">// &#125;, 4000)</span><span class="token comment">// 2s之后通过bar修改了name</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  bar<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"kobe"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>tip：const bar = require(“./bar.js”)是把bar.js里面的exports对象的地址给了bar</p><p>所以说在使用中修改一些exports里面的属性变量值，两边都会被改</p><p><strong>module.exports导出</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">"foo"</span><span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token number">18</span><span class="token keyword">function</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"sayHello"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 1.在开发中使用的很少</span><span class="token comment">// exports.name = name</span><span class="token comment">// exports.age = age</span><span class="token comment">// exports.sayHello = sayHello</span><span class="token comment">// 2.将模块中内容导出</span><span class="token comment">// 结论: Node导出的本质是在导出module.exports对象</span> module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>name <span class="token operator">=</span> name module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>age <span class="token operator">=</span> agemodule<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>sayHello <span class="token operator">=</span> sayHello<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上代码是module.exports导出方法，你这不是犯病吗？效果一样的，偏要多加个单词module</p><p>上面代码中module.exports.age和exports.age其实是一个东西</p><p>exports===module.exports</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">"foo"</span><span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token number">18</span><span class="token keyword">function</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"sayHello"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 1.在开发中使用的很少</span><span class="token comment">// exports.name = name</span><span class="token comment">// exports.age = age</span><span class="token comment">// exports.sayHello = sayHello</span><span class="token comment">// 2.将模块中内容导出</span><span class="token comment">// 结论: Node导出的本质是在导出module.exports对象</span><span class="token comment">// module.exports.name = name</span><span class="token comment">// module.exports.age = age</span><span class="token comment">// module.exports.sayHello = sayHello</span><span class="token comment">// // console.log(exports.name, "----")</span><span class="token comment">// // console.log(exports.age, "----")</span><span class="token comment">// // console.log(exports.sayHello, "----")</span><span class="token comment">// console.log(exports === module.exports)</span><span class="token comment">// 3.开发中常见的写法</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  name<span class="token punctuation">,</span>  age<span class="token punctuation">,</span>  sayHello<span class="token punctuation">&#125;</span><span class="token comment">// exports.name = "哈哈哈哈"</span><span class="token comment">// module.exports.name = "哈哈哈哈"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>导入者按理来说是不应该能修改导出者也就是原始版本中的变量的，在ESmodule中就不支持。</p><blockquote><p>所以开发中commonJS一般是给module.exports一个对象值，那么就开辟了一个新地址新内存，另一个js文件通过require方法取到exports对象中的属性变量后，即使修改也不会影响被导出变量的js中的变量值。</p></blockquote><p><strong>问题：</strong>exports===module.exports，那我还是没有理由写module呀，开辟新对象，我给exports对象赋值不是一样的？</p><p>测试中我发现，你直接给export赋值一个类，开辟新空间，另一个js文件中引不到东西。</p><h3 id="require方法的解析"><a href="#require方法的解析" class="headerlink" title="require方法的解析"></a>require方法的解析</h3><p> <img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/930.png" alt="930"></p><p>如上图，在index.js导出了一个变量对象，在mian.js中引入的时候，并没有写导入的变量来自具体哪一个文件如utils/index.js，而只写了utils还是可以使用，这是为什么？这就需要知道require的查找机制</p><p><strong>require的查找寻找机制</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/931.png" alt="931"></p><p>path和http是内置的模块</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/932.png" alt="932"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/933.png" alt="933"></p><p>在实际开发中，比如我们require一个axios</p><p>1-axios不是核心库</p><p>2-搜索node_modules文件夹（这个文件夹npm install axios等会自动生成），当前路径找不到，就自动搜寻再上一级目录，如果都没有返回not found。</p><p><strong>require引入模块的运行过程</strong></p><p>foo.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"foo-----"</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"foo+++++"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/934.png" alt="934"></p><p>1-当模块被引入，模块代码会被自动执行一次，按照当前main.js代码顺序执行，遇到模块引入就跳到被引入模块的js文件中执行，然后继续后面代码</p><p>2-模块引入执行一次后，再重复引入，不会再执行模块中的代码。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/935.png" alt="935"></p><p>也就是说main引入了aaa和bbb，aaa引入了ccc，ccc引入了ddd，ddd引入了eee</p><p>main会先引入完了bbb这条线，再去引入bbb，bbb虽然引入了ccc，但是ccc已经被引入一次了，就不会再被执行。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/936.png" alt="936"></p><p>commonjs的引入是同步的，没有异步。</p><p>1-一般commonjs是在服务器中，引入的文件也都在服务器存储了，如上引入aaa，bbb,ccc等等</p><p>因为代码在本地都有，所以速度是很快的，即使aaa中调用了查询数据库等需要耗时，但是查询数据库本身是异步的，所以会继续执行下去，总而言之引入的速度会很快。</p><p>2-如果把它应用到浏览器中，因为commonjs是同步的，aaa，bbb等文件都需要从服务器去下载下来，一个没下载好，下面的其他引入都无法执行。</p><h3 id="AMD和CMD-了解"><a href="#AMD和CMD-了解" class="headerlink" title="AMD和CMD(了解)"></a>AMD和CMD(了解)</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/937.png" alt="937"></p><p>现在开发已经不用了</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/938.png" alt="938"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/939.png" alt="939"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/940.png" alt="940"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架前置课 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESModule&amp;Webpack&amp;npm_02</title>
      <link href="archives/7ae4736d.html"/>
      <url>archives/7ae4736d.html</url>
      
        <content type="html"><![CDATA[<p><strong>coderwhy老师讲的细，内容多，更有利于我们的学习职业发展，而不是单纯整一个流水线开发程序员出来。</strong></p><p>commonjs只在node中可以实现，在浏览器中是不行的，比如让同一个页面的不同区域模块化。</p><p><strong>浏览器如何支持esmodule？</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/946.png" alt="946"></p><p>方法一就是这个浏览器支持esmodule</p><p>方法二就是使用webpack打包工具，使用了webpack后我们甚至可以commomjs和esmodule混用，因为最后webpack会把这些我们写的代码解析整合为普通的js代码（就是没有使用模块化），这样不管浏览器支持与否，都能使用了。</p><h2 id="认识ESModule"><a href="#认识ESModule" class="headerlink" title="认识ESModule"></a>认识ESModule</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/947.png" alt="947"></p><p>注意esmodule中的导出export是没有s的，commomjs中的导出module.exports有s</p><p>esmodule会自动采用代码严格模式use strict</p><p><strong>方法一ESModule的基本使用</strong></p><p><em>foo.js</em></p><pre class="line-numbers language-none"><code class="language-none">const name &#x3D; &quot;why&quot;const age &#x3D; 18function sayHello() &#123;  console.log(&quot;sayHello&quot;)&#125;&#x2F;&#x2F; 导出 exportexport &#123;  name,  age,  sayHello&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在commomjs中是module.exports={}也就是等于一个对象来导出</p><p>但是esmodule中这里并不是一个对象，而是特殊的语法，你把导出的变量标识符写到export{}里面就好了。</p><p><em>main.js</em></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 导入 import</span><span class="token comment">// 注意事项一: 在浏览器中直接使用esmodule时, 必须在文件后加上后缀名.js</span><span class="token comment">//不像commonjs不加后缀有查找机制，但是后续用webpack了也不需要加后缀名会补全</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> sayHello <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"./foo.js"</span><span class="token comment">// const name = "main"</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>index.html</em></p><p>这里为什么有html？因为esmodule是执行在浏览器中的，原先的commomjs是执行在node中的</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 注意事项二: 在我们打开对应的html时, 如果html中有使用模块化的代码, 那么必须开启一个服务来打开 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./foo.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./main.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里引入js的时候必须写type=“module”只有这样浏览器才知道它是一个模块化的js，有自己独立的作用域，否则会变量冲突（如foo.js和main.js定义同一个名字变量）。</p><p><strong>注意</strong></p><p>打开index.html必须开启一个服务，也就是open with live server（vscode里面的live sever插件），不能用open in default browser</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/948.png" alt="948"></p><p>因为模块化的js导入的时候，存在一个cors跨域问题，不支持本地的file请求，必须开启一个服务用http等协议。</p><p>“<em>Cors的英文全称是Cross-origin Resource Sharing</em>,意思是跨域资源共享</p><p><strong>其他导出方式</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 3.导出方式三:</span><span class="token keyword">export</span> <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">"why"</span><span class="token keyword">export</span> <span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token number">18</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"sayHello"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">// console.log(name)</span><span class="token comment">// 1.导出方式一: </span><span class="token comment">// export &#123;</span><span class="token comment">//   name,</span><span class="token comment">//   age,</span><span class="token comment">//   sayHello</span><span class="token comment">// &#125;</span><span class="token comment">// 2.导出方式二: 导出时给标识符起一个别名</span><span class="token comment">// export &#123;</span><span class="token comment">//   name as fname,</span><span class="token comment">//   age,</span><span class="token comment">//   sayHello</span><span class="token comment">// &#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当mainjs从foojs中导入了一个name变量，mainjs也需要自己定义一个name变量怎么办呢？就可以用到导出方式二，把foojs中的name起别名为fnam</p><p>我们也可以导出方式三，在变量，函数等在定义的时候就export导出，但是这样就不能起别名。但是可以在导入的时候起别名</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> name <span class="token keyword">as</span> fname<span class="token punctuation">,</span> age<span class="token punctuation">,</span> sayHello <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"./foo.js"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>问题</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> sayHello <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"./foo.js"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>每次导入这样写一大堆变量，万一需要导入的很多，不难写吗？</p><p>所以我们可以直接写导入*代表全部的意思，然后给它一个别名，就可以用别名来使用</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 3.导入时可以给整个模块起别名</span><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> foo <span class="token keyword">from</span> <span class="token string">"./foo.js"</span><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">"main"</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span>name<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span>age<span class="token punctuation">)</span>foo<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>export和import的结合使用</strong></p><p>开发中用的不多，但是一些优秀项目或者框架的源码经常这样写</p><p>作用：不需要在main.js中导入多个js了，只需要导入一个indexjs</p><p>mainjs</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// import &#123; formatCount, formatDate &#125; from "./utils/format.js"</span><span class="token comment">// import &#123; parseLyric &#125; from "./utils/parse.js"</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>   formatCount<span class="token punctuation">,</span>   formatDate<span class="token punctuation">,</span>   parseLyric <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./utils/index.js'</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">formatCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">formatDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseLyric</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>indexjs</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> formatCount<span class="token punctuation">,</span> formatDate <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./format.js'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> parseLyric <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./parse.js'</span><span class="token keyword">export</span> <span class="token punctuation">&#123;</span>  formatCount<span class="token punctuation">,</span>  formatDate<span class="token punctuation">,</span>  parseLyric<span class="token punctuation">&#125;</span><span class="token comment">// 优化一:</span><span class="token comment">// export &#123; formatCount, formatDate &#125; from './format.js'</span><span class="token comment">// export &#123; parseLyric &#125; from './parse.js'</span><span class="token comment">// 优化二:</span><span class="token comment">// export * from './format.js'</span><span class="token comment">// export * from './parse.js'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>default用法</strong></p><p>一个模块（也就是一个js文件）只能一个默认导出，导入的时候不需要写导入的变量或函数的名字</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> parseLyric <span class="token keyword">from</span> <span class="token string">"./parse_lyric.js"</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseLyric</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这里的parseLyric名字乱下都可以，因为是默认导出，比如写为import demo  from “./parse_lyric.js”那么使用的时候就是demo()</p><p><em>其实我感觉是多此一举，又要理解一个东西，只要了解一下有人才这样写我们也知道是什么东西</em></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//导出</span><span class="token comment">// 2.定义标识符直接作为默认导出</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">"新歌词"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>import的一些注意</strong></p><p>tips:路径是不允许去+拼接的</p><p>1-导入语句只能写在代码顶层，不能放在任意的代码语句内，如if条件成立再import导入</p><p>因为js引擎解析执行的时候设定的就是先扫描有没有import，如果有就导入后再执行后续代码，你在后续代码里面写个import会直接报错的</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/949.png" alt="949"></p><p><em>如果我就是要语句成立再导入呢？不然我没用到也导入不是浪费性能？</em></p><p>那我们可以使用import函数，以前的写法是import声明。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/950.png" alt="950"></p><p>import meta</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/951.png" alt="951"></p><p>不怎么用，也就是说哪个js中import了其他模块，这个js中就有一个import.meta属性，可以打印出来，里面记录的引入的模块变量来自哪个url地址路径</p><p><strong>ESModule的解析过程</strong></p><p><a href="http://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/">http://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/</a></p><p>了解即可，coderwhy的2022系统课面向25k，内容确实细。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/952.png" alt="952"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/953.png" alt="953"></p><h2 id="npm的介绍和基本使用"><a href="#npm的介绍和基本使用" class="headerlink" title="npm的介绍和基本使用"></a>npm的介绍和基本使用</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/954.png" alt="954"></p><p>比如尤雨溪开发了vue框架</p><p>1-如果我们开发者要使用，可以通过vue官网或者github尤雨溪的主页去下载vue.js等文件，然后放到我们项目的lib中，然后再script引入，这样太麻烦了，如果我们要更换版本还得重新下载引入。</p><p>2-尤雨溪把vue.js放在了npm registry ，那么我们只需要通过npm就可以快速下载引入。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/955.png" alt="955"></p><h3 id="npm包管理工具"><a href="#npm包管理工具" class="headerlink" title="npm包管理工具"></a>npm包管理工具</h3><p>官网npmjs.org</p><p>tips:“.org”域名是互联网的通用顶级域之一,英文<em>全称</em>“<em>organization</em>”,意思为“组织”,适用于各类型组织机构,包括非盈利团体,是组织机构的首选。</p><p>npm就是node package manager，刚开始是主要管理node包的，现在在前端项目中也都可以使用。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/956.png" alt="956"></p><p>当我们在vscode控制台，进入指定目录，输入命令如node install vue  ，那么对应目录就会自动生成一个node_modules文件夹，vue的源码就会被下载到这里。</p><p>同时在当前目录还会生成package.json和package-lock.json</p><h3 id="package配置文件"><a href="#package配置文件" class="headerlink" title="package配置文件"></a>package配置文件</h3><p>json的几种格式<a href="https://blog.csdn.net/weixin_48185778/article/details/109822965">https://blog.csdn.net/weixin_48185778/article/details/109822965</a></p><p>一个完整的项目，通常会有项目名称，版本号，以及依赖那些库等等信息保存在package.json</p><p><strong>如何生成的？</strong></p><p>1-手动创建，缺点：写的太麻烦</p><p>2-在控制台输入npm init 命令自动生成只需要我们自己填写一些信息。如果所以信息默认可以输入命令</p><p>npm init-y</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/957.png" alt="957"></p><p>3-通过脚手架CLI快速创建项目，会自动生成package.json</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/958.png" alt="958"></p><p><strong>常见的属性</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/960.png" alt="960"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/959.png" alt="959"></p><p>在很多项目中，我们通过require(day)引入后，其中day的目录中是没有index.js的，所以commomjs的自动寻找机制就找不到，main属性就可以设置这个入口，让require去找mian属性值的文件。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/965.png" alt="965"></p><p><em><strong>scripts</strong></em> </p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/961.png" alt="961"></p><p>当我们要经常运行一段命令行，可以直接把它写入scripts字段内，然后通过npm run的方式运行。</p><p><strong>dependencies字段</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/962.png" alt="962"></p><p>1-当我们的同事需要在我们项目的基础上写代码什么的，我们传给同事项目一般会把node_modules删掉再压缩发给他们，因为node_modules里面通常有很多包入axios，vue等等等非常大。</p><p>2-那么同事拿到我们的代码，要想跑项目，必须再重新下载以上依赖包，dependencies就能告诉他以及node，这个项目需要哪些包，他可以自己一个一个下载，也可以在node终端执行node install命令会自动下载当前项目所需所有包。</p><p><strong>devDependencies字段</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/963.png" alt="963"></p><p>1-也就是说在开发的时候需要用到，生产product的时候不需要用到的包，放到devDependencies字段中，如webpack就是一个在开发的时候打包的，后续在浏览器等生成页面的时候不需要用到它。</p><p>2-安装webpack的时候我们要写npm install webpack –sava -dev命令或者这段命令的缩写npm install webpack -D，就可以自动添加devDependencies字段中</p><p><strong>peerDependencies</strong></p><p>当一个库必须依赖另一个库才能使用跑起来，就需要把另一个库写入到peerDependencies字段</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/964.png" alt="964"></p><p>如上图的element-plus这个库，它是基于vue3的，你想使用element-plus，必须当前环境中也有vue3</p><p><strong>版本号</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/966.png" alt="966"></p><p>如vue3无法再写vue2的一些语法，不兼容了就是主版本号</p><p> 只是新加了一个功能，就是次版本号</p><p>修复了一些bug，优化一下，就是z修订号。</p><p><strong>了解</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/967.png" alt="967"></p><h3 id="npm-install原理"><a href="#npm-install原理" class="headerlink" title="npm install原理"></a>npm install原理</h3><p>1-npm和node和java等等在cmd命令行的命令，都需要配置环境变量，当我们输入了命令，会通过环境变量去找到对应的程序执行，也就是说你也可以配置一个qq的环境变量，然后在cmd中输入qq自动启动。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/968.png" alt="968"></p><p>1-那些我们所有项目都要用到的工具包，比如webpack就全局安装，那些只在当前项目使用的包如day.js就局部安装即可（安装到当前安装路径下）</p><p>2-并不是你全局安装了包，比如全局安装了dayjs和axios，就能每个项目都能使用了，这种包必须局部安装到项目文件夹内。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/969.png" alt="969"></p><p>1-上面说过了开发依赖就是我们程序员写程序的时候需要用到的包，浏览器等平台渲染的时候用不到，如webpack</p><p>2-生产开发依赖就是，开发的时候和浏览器渲染的时候都要用到这个包，比如vue</p><p><strong>缓存共用开发包</strong></p><blockquote><p>1、使用cnpm install时候，并不会生成 package-lock.json 文件，也不会根据 package-lock.json 来安装依赖包，还是会使用 package.json 来安装。<br>2、package-lock.json 是在 npm(^5.x.x.x)后才有</p><p>package-lock.json 它会在 npm 更改 node_modules 目录树 或者 package.json 时自动生成的 ，它准确的描述了当前项目npm包的依赖树，并且在随后的安装中会根据 package-lock.json 来安装，保证是相同的一个依赖树，不考虑这个过程中是否有某个依赖有小版本的更新。官方是这样解释的</p><p>它的产生就是来对整个依赖树进行版本固定（锁死）。</p><p>当我们在一个项目中npm install时候，会自动生成一个package-lock.json文件，和package.json在同一级目录下。</p><p>package-lock.json记录了项目的一些信息和所依赖的模块。这样在每次安装都会出现相同的结果.。不管你在什么机器上面或什么时候安装。</p><p>当我们下次再npm install时候，npm 发现如果项目中有 package-lock.json 文件，会根据 package-lock.json 里的内容来处理和安装依赖而不再根据 package.json。</p></blockquote><p>也就是说package.json里面的依赖，npm install通过这个去下载，只会保证大版本一样，后面的小版本是可能改变的（自动下载最新），如果是package-lock.json就指定什么版本就是什么版本，不会改变。</p><p>如果多个项目，都用axios而且版本一样，那么npm就不会去请求仓库地址，而是先看本地有没有这个包，如果有就直接安装，没有再去请求下载。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/970.png" alt="970"></p><p>resolved字段代表了当前包从哪个url下载下来的</p><p>requires字段和dependencies是一样的作用，指当前包依赖哪些包才能正常运行使用</p><p>integrity是当前包的一个标识，缓存包就是通过它来识别的。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/971.png" alt="971"></p><p>1-也就是说如果这个项目有lock，比如下载那么执行npm install就会通过lock去找需要的包，然后再判断一下现在这个包的所需依赖和以前是不是一样，如axios以前只依赖redirect，现在又加了form-data，一样的话就去缓存查找有没有这个axios的缓存，然后安装，没有缓存的话就要去仓库下载。</p><p>2-如果这个项目我们拿到没有lock的话，就只能去仓库下载，然后会自动构建一个lock包，供后续人的使用。</p><h3 id="npm的其他命令"><a href="#npm的其他命令" class="headerlink" title="npm的其他命令"></a>npm的其他命令</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/972.png" alt="972"></p><h3 id="yarn"><a href="#yarn" class="headerlink" title="yarn"></a>yarn</h3><p>以前npm不好用，各大厂如谷歌脸书就一起推出了一个js包管理工具yarn，后续npm5改进了很多小问题，它们两个的用户就分庭抗礼了。</p><p>想安装yarn，用npm下载即可,因为工具包一般每个项目都要使用，所有得-g全局</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">npm install yarn <span class="token operator">-</span>g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>yarn的命令与作用和npm基本上一样的，就是把npm改成yarn</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/973.png" alt="973"></p><p><strong>cnpm</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/974.png" alt="974"></p><p>cnpm其实就是npm的中国版，完全一样的东西，就是命令把npm改成cnpm</p><p>作用：</p><p>npm里面可能有的包服务器在国外，你不科学魔法上网上不去，这个时候有三个解决办法</p><p>1-科学上网</p><p>2-改npm的下载镜像，但是镜像中的包比较不是官方的，我只想在包下载不了的时候用镜像，就得改来改去</p><p>3-安装cnpm，把cnmp的镜像改成国内的镜像站地址如taobao的，平时用npm，如果有包下载不了再用cnpm</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架前置课 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript高级_05day</title>
      <link href="archives/93eb2bd8.html"/>
      <url>archives/93eb2bd8.html</url>
      
        <content type="html"><![CDATA[<p>这是对黑马pink老师四天js高级（promise，async，await，Proxy-Reflect等都没教）的补充</p><p>大名鼎鼎的coderwhy‘王红元的js高级有两周，对不同特性有详细的讲解，包含了es6-es12的知识，后续有时间我会学习并记笔记。</p><h2 id="Proxy-Reflect详解"><a href="#Proxy-Reflect详解" class="headerlink" title="Proxy-Reflect详解"></a>Proxy-Reflect详解</h2><p>这个不会对开发没有太大影响，但是在有的地方比如vue3用到会有疑惑</p><p>proxy代理，代理人，通常表示代理软件或者代理服务器</p><p>reflect反映反射表达</p><h3 id="监听一个对象属性的所有操作"><a href="#监听一个对象属性的所有操作" class="headerlink" title="监听一个对象属性的所有操作"></a>监听一个对象属性的所有操作</h3><p>如获取一个属性，赋值一个属性。</p><h2 id="Promise详解"><a href="#Promise详解" class="headerlink" title="Promise详解"></a>Promise详解</h2><p>Promise承诺，这个不学，后面代码没法写。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/941.png" alt="941"></p><p><strong>作用</strong></p><p>1-如上图，现在的需求就是一个函数execCode里面要执行一系列操作，但是这个操作（上图是定时函数，在实际中可能是一个网络请求）要等一会时间才能完成，完成后如何告诉外界这个操作完成了？</p><p>2-就相当于很多人去点餐，做菜需要时间，如何告诉点餐人他的菜做好了？</p><p>3-如上就用了一个callback函数当做回调函数，“菜”做好了就执行这个回调函数。</p><p>上面代码还可以完善,判断是否有错误出现，比如”客户给餐馆的是假钱”，那么就立即执行失败函数。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token comment">// 1.设计这样的一个函数</span>  <span class="token keyword">function</span> <span class="token function">execCode</span><span class="token punctuation">(</span><span class="token parameter">counter<span class="token punctuation">,</span> successCallback<span class="token punctuation">,</span> failureCallback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 异步任务</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>counter <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// counter可以计算的情况 </span>        <span class="token keyword">let</span> total <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> counter<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          total <span class="token operator">+=</span> i        <span class="token punctuation">&#125;</span>        <span class="token comment">// 在某一个时刻只需要回调传入的函数</span>        <span class="token function">successCallback</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 失败情况, counter有问题</span>        <span class="token function">failureCallback</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>counter<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">值有问题</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 2.ES5之前,处理异步的代码都是这样封装 </span>  <span class="token function">execCode</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"本次执行成功了:"</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"本次执行失败了:"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里的100就是要执行的东西，上面代码是判断这个100是否满足条件，实际开发中也许是判断一个请求是否连接成功。</p><h3 id="异步代码的困境"><a href="#异步代码的困境" class="headerlink" title="异步代码的困境"></a>异步代码的困境</h3><p>es5如上上面思想方法解决，但是如上代码我们定义了三个参数，其他人使用的时候，参数顺序传错了怎么办呢？和模块化esmodule一样，官方也制定了相应标准来规范，就是promise</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/942.png" alt="942"></p><p>如上代码，我们不再需要传入两个回调函数去告诉外界是执行失败还是成功，只需要返回一个bbj对象，相当于点餐后做完菜有一个广播会喊多少号来取餐。</p><p>外界可以通过调用bbj对象的属性是成功（红灯）还是失败（黄灯）来做出响应。</p><blockquote><p>在官方规范中这个bbj也就是promise</p><p>在官方中成功就是then</p><p>失败就是catch</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">function</span> <span class="token function">execCode</span><span class="token punctuation">(</span><span class="token parameter">counter</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 异步任务</span>      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>counter <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// counter可以计算的情况 </span>          <span class="token keyword">let</span> total <span class="token operator">=</span> <span class="token number">0</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> counter<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            total <span class="token operator">+=</span> i          <span class="token punctuation">&#125;</span>          <span class="token comment">// 成功的回调</span>          <span class="token function">resolve</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 失败情况, counter有问题</span>          <span class="token comment">// 失败的回调</span>          <span class="token function">reject</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>counter<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">有问题</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">//为了链式调用返回promise</span>    <span class="token keyword">return</span> promise  <span class="token punctuation">&#125;</span>  <span class="token comment">// const promise = execCode(100)</span>  <span class="token comment">// promise.then((value) => &#123;</span>  <span class="token comment">//   console.log("成功有了结果: ", value)</span>  <span class="token comment">// &#125;)</span>  <span class="token comment">// promise.catch((err) => &#123;</span>  <span class="token comment">//   console.log("失败有了错误: ", err)</span>  <span class="token comment">// &#125;)</span>  <span class="token comment">// const promise2 = execCode(-100)</span>  <span class="token comment">// promise2.then(value => &#123;</span>  <span class="token comment">//   console.log("成功:", value)</span>  <span class="token comment">// &#125;)</span>  <span class="token comment">// promise2.catch(err => &#123;</span>  <span class="token comment">//   console.log("失败:", err)</span>  <span class="token comment">// &#125;)</span>  <span class="token comment">// 执行一次</span>  <span class="token function">execCode</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"成功:"</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"失败:"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面代码value拿到的是resolve(参数)中的参数也就是total</p><blockquote><p>当符合相应条件运行了rejecte，那么err拿到的是${counter}有问题</p></blockquote><p>主要new Promise要大写p</p><h3 id="promise的状态变化"><a href="#promise的状态变化" class="headerlink" title="promise的状态变化"></a>promise的状态变化</h3><p>promise的状态一旦确定，就不会再更改，也不会再执行其他回调函数。</p><p>也就是说调用了resolve()那么后续的代码一样会执行，但是再调用reject()是不会被执行的。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/943.png" alt="943"></p><p>问题：下面代码是个什么写法？你咋又调用then()后面又跟个.catch？</p><pre><code>execCode(255).then(value =&gt; &#123;  console.log(&quot;成功:&quot;, value)&#125;).catch(err =&gt; &#123;  console.log(&quot;失败:&quot;, err)&#125;)</code></pre><p>因为这是链式调用，execCode(255).then(value =&gt; {<br>  console.log(“成功:”, value)<br>})执行后，返回的还是promise，所以可以继续.catch</p><p>为什么返回的还是promise，因为我们在封装execCode的时候就返回return了promise的时候，可以在上面代码看到。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/944.png" alt="944"></p><p>其实promise的简单应用很简单，就是内置的一个promise构造函数，我们先构造一个promise，这个构造函数的参数是一个匿名函数，函数内写自己的一些代码条件，然后如果调用了resolve()方法就会在外面执行promise.then(),如果内部调用了rejecte()，就会执行外面的catch()</p><p>为什么会这样执行？因为内置的代码就是这样的，我们直接用就好了，或者手写研究下promise的底层</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/945.png" alt="945"></p><h3 id="手写promise和细节问题和迭代器生成器"><a href="#手写promise和细节问题和迭代器生成器" class="headerlink" title="手写promise和细节问题和迭代器生成器"></a>手写promise和细节问题和迭代器生成器</h3><p>coderwhy39day</p><p>await和async40day有时间再看</p><p>迭代器个和生成器如果要熟练用react的某个库，学了很有帮助，学vue的话用不太到</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScriptXHR&amp;FETCH</title>
      <link href="archives/527c9b7c.html"/>
      <url>archives/527c9b7c.html</url>
      
        <content type="html"><![CDATA[<p>XHR就是XMLHttpRequest，Fetch</p><h2 id="前端数据请求方式"><a href="#前端数据请求方式" class="headerlink" title="前端数据请求方式"></a>前端数据请求方式</h2><h3 id="服务器端渲染"><a href="#服务器端渲染" class="headerlink" title="服务器端渲染"></a>服务器端渲染</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/890.png" alt="890"></p><p>在早期的时候，页面都是由后端服务器渲染出来的，用户请求网址后，服务器端需要请求数据库拿到数据，提供jsp等技术把网页渲染组装完成，然后再发送给用户。</p><p>这样的话就太麻烦了，后端的工作量也非常的大。所以有了前后的分离。</p><p>通俗说就是用户请求页面后，服务器会从数据库拿到数据，然后提供jsp等模板配合数据渲染成一个html页面，然后把组装完成的完整页面返回给用户</p><h3 id="前后的分离过程"><a href="#前后的分离过程" class="headerlink" title="前后的分离过程"></a>前后的分离过程</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/891.png" alt="891"></p><p>前后端分离的方式就是客户端渲染，用户请求页面后，静态资源服务器会返回静态的html和js脚本等但是没有数据给客户端，然后客户端也就是浏览器会执行js，然后会请求后端服务器从数据库拿到数据后返回给客户端，客户端进行数据和静态页面的整合。</p><p>tip：</p><p>1-一些小项目，没有前端服务器，静态html，js和后端服务器放在一起。</p><p>2-提供数据的后端服务器也叫做api服务器</p><p>3-前端总说什么api接口，其实就是后端程序员写的程序，这个接口是给我们数据的，我们通过js去请求接口。</p><p>4-执行js去请求后端数据的时候，这个js就是fetch这些</p><h3 id="前后的分离优势"><a href="#前后的分离优势" class="headerlink" title="前后的分离优势"></a>前后的分离优势</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/892.png" alt="892"></p><p>服务器渲染的缺点：一点点数据发生变化，需要刷新页面重新请求，服务器端重新渲染一次整个页面，然后再把整个页面发送给客户端，会浪费很多资源和性能。</p><p>AJAX以前是指异步的JavaScript和XML，但是现在基本上数据不用XML传输，而是用JSON（JSON的全称是JavaScript Object Notation）notation符号的意思，代替，它可以实现不刷新页面，修改变化的一些数据</p><p>例子：比如qq空间等网页最下面的 ‘加载更多’ ，你点击一下会出现更多内容，但是页面并不会刷新，因为异步请求的原因，也不会影响到现有内容的使用，比如你加载更多的时候卡住了，照样可以看qq空间的其他东西。（同步任务放在执行栈，异步任务放在任务队列，异步任务不会阻塞同步任务）</p><p>但是：现在又流行起了服务器渲染，也就是SSR，后续我也会学。</p><h2 id="Http协议的解析"><a href="#Http协议的解析" class="headerlink" title="Http协议的解析"></a>Http协议的解析</h2><p>五层协议详解<a href="https://blog.csdn.net/yikenaoguazi/article/details/107927588">https://blog.csdn.net/yikenaoguazi/article/details/107927588</a></p><p>网络分为五层，应用层，传输层，网络层，链路层，物理层。</p><p>http协议和ftp和dns协议处于应用层，传输层有udp和tcp协议，网络层有ip协议</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/893.png" alt="893"></p><p>1-http最初是用来发布和接收HTML页面的</p><p>2-http请求的资源，由url统一资源定位符来标识</p><p>3-http的默认端口是80，https的默认端口是443，端口也可以修改</p><p>4-https，就是在http上加上了一个安全层证书，SSL安全套接字协议层或者TLS，可以说tls是ssl的升级版。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/894.png" alt="894"></p><h3 id="HTTP的组成"><a href="#HTTP的组成" class="headerlink" title="HTTP的组成"></a>HTTP的组成</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/895.png" alt="895"></p><p>请求包括请求行，请求头，请求体</p><p>响应有响应行，响应头，响应体</p><h4 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h4><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/898.png" alt="898"></p><p><strong>content-type</strong>可以告诉服务器，我们传输过去的数据是什么格式，方便服务器解析</p><p>如content-type:application/json</p><p>文本的话就是text/plain    （plain平原，朴素的，清楚的）</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/899.png" alt="899"></p><p>在现在的开发中都用的http1.1，默认开启了一个tcp可以进行多个连接，我们在请求头中需要些<strong>connection:keep-alive</strong>，这个tcp连接存活时间服务器可以自己设置，node后端服务器</p><p><strong>accept-encoding</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/900.png" alt="900"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/901.png" alt="901"></p><p>accept-encoding是告诉服务器，我这个客户端支持的文件压缩格式，比如请求了一个js文件，服务器可以把这个文件再压缩成更小如gzip格式，就可以降低服务器压力。（这些压缩文件，浏览器支持自动解压）</p><p>问题：我们有服务器，我咋给每个js配置个这样的压缩文件？</p><p>在后续webpack中，可以设置。</p><p><strong>accept</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">告知服务器可以接收的数据格式，现在一般是<span class="token operator">*</span><span class="token comment">/*Accept:*/</span><span class="token operator">*</span>  也就是说可以接收任意格式    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>accept-encoding一般是请求js这些文件的时候用到，accept是接收数据。</p><p><strong>user-agent</strong></p><p>这个里面包含了客户端的浏览器版本型号和电脑系统windows还是mac这一类数据。</p><h4 id="响应头"><a href="#响应头" class="headerlink" title="响应头"></a>响应头</h4><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/903.png" alt="903"></p><p>响应中也有内容长度和内容类型的设置，其中Access-Control-Allow-Origin会涉及到跨域问题，后面会详细学。</p><h3 id="http状态码"><a href="#http状态码" class="headerlink" title="http状态码"></a>http状态码</h3><p> <img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/902.png" alt="902"></p><h3 id="HTTP的版本"><a href="#HTTP的版本" class="headerlink" title="HTTP的版本"></a>HTTP的版本</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/896.png" alt="896"></p><p>我们现在最常用的是http1.1版本，多个请求可以共用一个tcp连接</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/897.png" alt="897"></p><p>参考：<a href="https://www.jianshu.com/p/e0b39b52672c">https://www.jianshu.com/p/e0b39b52672c</a></p><p>新建一条记录的话就用post，<br>更新一条记录的话就用put.</p><p>put:如果请求URI（Request-URI）指定的的资源已经在源服务器上存在，那么此请求里的实体应该被当作是源服务器关于此URI所指定资源实体的最新修改版本。</p><p>put是修改替换了整个数据，patch请求是修改一部分数据。</p><h2 id="AJAX发送请求"><a href="#AJAX发送请求" class="headerlink" title="AJAX发送请求"></a>AJAX发送请求</h2><h3 id="XHR的基本用法"><a href="#XHR的基本用法" class="headerlink" title="XHR的基本用法"></a>XHR的基本用法</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"> <span class="token operator">&lt;</span>script<span class="token operator">></span>   <span class="token comment">// 1.创建XMLHttpRequest对象</span>   <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// 2.监听状态的改变，也就是说从发送请求变化到得到数据(宏任务)</span><span class="token comment">//这里一样可以用addEventListner事件改成readychange就行了</span><span class="token comment">//为什么这里都是小写？因为事件默认全部小写，如click</span><span class="token comment">//实际上一次网络请求，这里监听事件触发了四次，有三次为123不满足条件4被return了</span>   xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token comment">// console.log(xhr.response)</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">!==</span> XMLHttpRequest<span class="token punctuation">.</span><span class="token constant">DONE</span><span class="token punctuation">)</span> <span class="token keyword">return</span>     <span class="token comment">// 将字符串转成JSON对象(js对象)</span>     <span class="token keyword">const</span> resJSON <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span>     <span class="token keyword">const</span> banners <span class="token operator">=</span> resJSON<span class="token punctuation">.</span>data<span class="token punctuation">.</span>banner<span class="token punctuation">.</span>list     <span class="token comment">//这里拿到数据了，就可以用for循环什么的生成dom对象插入到页面等等操作</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>banners<span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span>   <span class="token comment">// 3.配置请求open</span>   <span class="token comment">// 第一个参数method: 请求的方式(get/post/delete/put/patch...)</span>   <span class="token comment">// 第二个参数url: 请求的地址</span>   xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"http://123.207.32.32:8000/home/multidata"</span><span class="token punctuation">)</span>   <span class="token comment">// 4.发送请求(浏览器帮助发送对应请求)</span>   xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/904.png" alt="904"></p><p>一次网络请求中，xhr对象的完成状态readyState发生了多次变化，一共有五种</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/905.png" alt="905"></p><p>0就是实例了XMLHttpRequest但是还没有open配置</p><p>1就是open方法被调用</p><p>2就是send方法被调用了，拿到了响应中的响应头</p><p>3在下载接口返回的数据了，但是没有下完</p><p>4后端接口返回的数据下载完毕</p><p><strong>同步和异步请求</strong></p><p>在配置open中有第三个参数，默认是true为异步，如果设置为false就会变成同步任务，那么就必须等待完成了这个请求，才能执行后面的代码。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 3.配置请求open</span>    <span class="token comment">// 第一个参数method: 请求的方式(get/post/delete/put/patch...)</span>    <span class="token comment">// 第二个参数url: 请求的地址</span>    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"http://123.207.32.32:8000/home/multidata"</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>XMLHttpRequest的一些监听事件</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/906.png" alt="906"></p><p><strong>问题：</strong>上面代码的接口返回的本来就是json类型的数据，为什么还要调用JSON.parse()去处理？</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/907.png" alt="907"></p><p>因为其实XMLHttpRequest对象中有一个responseType属性，如果我们不设置默认为text，就算服务器传过来的是json，在response中也被接收成了文本。</p><p>1-当我们接收的是json，可以设置xhr.responseType=’json’</p><p>2-当我们接收的是文本，那么我们不能设置xhr.responseType=’json’，就算传来了text，也会提示接收为null，因为底层无法让text转换为json，就会变成null</p><p>3-文本可以自动识别转换为xml，无法转换为json；json可以自动识别转换为text和xml；xml可以自动转换为文本，无法转换为json</p><p>4-我们也可以直接使用responseXML或者responseText，但是如果使用这两个，也不能设置xhr.responseType=’json’，因为说了接收的是json，你又输出XML/Text也是不行的。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token comment">// 1.</span>  <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 2.onload监听数据加载完成</span>  xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// const resJSON = JSON.parse(xhr.response)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseXML<span class="token punctuation">)</span>    <span class="token comment">// console.log(xhr.responseText)</span>    <span class="token comment">// console.log(xhr.responseXML)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 3.告知xhr获取到的数据的类型</span>  xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">"json"</span>  <span class="token comment">// xhr.responseType = "xml"</span>  <span class="token comment">// 4.配置网络请求</span>  <span class="token comment">// 4.1.json类型的接口</span>  <span class="token comment">// xhr.open("get", "http://123.207.32.32:8000/home/multidata")</span>  <span class="token comment">// 4.2.json类型的接口</span>  <span class="token comment">// xhr.open("get", "http://123.207.32.32:1888/01_basic/hello_json")</span>  <span class="token comment">// 4.3.text类型的接口</span>  <span class="token comment">// xhr.open("get", "http://123.207.32.32:1888/01_basic/hello_text")</span>  <span class="token comment">// 4.4.xml类型的接口</span>  xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"http://123.207.32.32:1888/01_basic/hello_xml"</span><span class="token punctuation">)</span>  <span class="token comment">// 5.发送网络请求</span>  xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>获取HTTP请求的网络状态</strong></p><p>当然你要等请求完毕才能用这个，不然根本就没有状态码，所以需要监听load事件或者xhr.readyState == XMLHttpRequest.DONE</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//我们可以通过xhr.status/xhr.statusText来获取</span>比如成功，xhr<span class="token punctuation">.</span>status会输出<span class="token number">200</span>xhr<span class="token punctuation">.</span>statusText会输出“<span class="token constant">OK</span>”两个字<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token comment">// 1.创建对象</span>  <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 2.监听结果</span>  xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status<span class="token punctuation">,</span> xhr<span class="token punctuation">.</span>statusText<span class="token punctuation">)</span>    <span class="token comment">// 根据http的状态码判断是否请求成功</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">>=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status<span class="token punctuation">,</span> xhr<span class="token punctuation">.</span>statusText<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  xhr<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"onerror"</span><span class="token punctuation">,</span> xhr<span class="token punctuation">.</span>status<span class="token punctuation">,</span> xhr<span class="token punctuation">.</span>statusText<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 3.设置响应类型</span>  xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">"json"</span>  <span class="token comment">// 4.配置网络请求</span>  <span class="token comment">// xhr.open("get", "http://123.207.32.32:8000/abc/cba/aaa")</span>  xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"http://123.207.32.32:8000/home/multidata"</span><span class="token punctuation">)</span>  <span class="token comment">// 5.发送网络请求</span>  xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>他这里无论请求成功还是失败都会触发onload事件，失败的时候也会触发error事件，status用它们两个监听输出都可以。</p><h3 id="GET-POST请求传递参数"><a href="#GET-POST请求传递参数" class="headerlink" title="GET/POST请求传递参数"></a>GET/POST请求传递参数</h3><p>其中get会明文显示在地址栏，post请求是把请求放在请求体里面了,记得设置<strong>xhr.setRequestHeader</strong>(“Content-Type，“application/x-www-form-urlencoded”)，不会在地址栏显示</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/908.png" alt="908"></p><p><strong>方法一</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 1.传递参数方式一: get -> query</span>     <span class="token comment">// xhr.open("get", "http://123.207.32.32:1888/02_param/get?name=why&amp;age=18&amp;address=广州市")</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>把请求写在open的url参数段后面，get?xxxxxxxxx</p><p><strong>方式二</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 2.传递参数方式二: post -> urlencoded</span>    <span class="token comment">// xhr.open("post", "http://123.207.32.32:1888/02_param/posturl")</span>    <span class="token comment">// // 发送请求(请求体body)</span>    <span class="token comment">// xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded")</span>    <span class="token comment">// xhr.send("name=why&amp;age=18&amp;address=广州市")</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>open配置中，请求方式改为post，url就写请求的地址，后面不加请求内容</p><p>把请求内容写入xhr.send()，记住必须设置请求头的内容类型，否则服务器无法解析识别内容</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">"Content-type"</span><span class="token punctuation">,</span> <span class="token string">"application/x-www-form-urlencoded"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>方式三</strong></p><p>使用formdata文件传递</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>form <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"info"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"username"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"password"</span> name<span class="token operator">=</span><span class="token string">"password"</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>  <span class="token operator">&lt;</span>button <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"send"</span><span class="token operator">></span>发送请求<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">const</span> formEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".info"</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> sendBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".send"</span><span class="token punctuation">)</span>    sendBtn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 创建xhr对象</span>      <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment">// 监听数据响应</span>      xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// 配置请求</span>      xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">"json"</span>      <span class="token comment">// 1.传递参数方式一: get -> query</span>      <span class="token comment">// xhr.open("get", "http://123.207.32.32:1888/02_param/get?name=why&amp;age=18&amp;address=广州市")</span>      <span class="token comment">// 2.传递参数方式二: post -> urlencoded</span>      <span class="token comment">// xhr.open("post", "http://123.207.32.32:1888/02_param/posturl")</span>      <span class="token comment">// // 发送请求(请求体body)</span>      <span class="token comment">// xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded")</span>      <span class="token comment">// xhr.send("name=why&amp;age=18&amp;address=广州市")</span>      <span class="token comment">// 3.传递参数方式三: post -> formdata</span>      <span class="token comment">// xhr.open("post", "http://123.207.32.32:1888/02_param/postform")</span>      <span class="token comment">// // formElement对象转成FormData对象</span>      <span class="token comment">// const formData = new FormData(formEl)</span>      <span class="token comment">// xhr.send(formData)</span>      <span class="token comment">// 4.传递参数方式四: post -> json</span>      xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"post"</span><span class="token punctuation">,</span> <span class="token string">"http://123.207.32.32:1888/02_param/postjson"</span><span class="token punctuation">)</span>      xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">"Content-type"</span><span class="token punctuation">,</span> <span class="token string">"application/json"</span><span class="token punctuation">)</span>      xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>name<span class="token operator">:</span> <span class="token string">"why"</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> height<span class="token operator">:</span> <span class="token number">1.88</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>       <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也就是说把整个form的dom对象通过（这里必须是form表单类型的dom对象，也可以不写，直接formData.append()）</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span>formEl<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>转换成了一个FormData对象，然后把这个对象传递给xhr.send（），里面包含的input等内容。这种方法不需要再设置setRequestHeader,因为不设置默认就是form-data方式，这里的xhr.send(formData)就是这种方式。</p><p><strong>方法四</strong></p><p>传递json格式</p> <pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 4.传递参数方式四: post -> json</span>xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"post"</span><span class="token punctuation">,</span> <span class="token string">"http://123.207.32.32:1888/02_param/postjson"</span><span class="token punctuation">)</span>xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">"Content-type"</span><span class="token punctuation">,</span> <span class="token string">"application/json"</span><span class="token punctuation">)</span>xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>name<span class="token operator">:</span> <span class="token string">"why"</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> height<span class="token operator">:</span> <span class="token number">1.88</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 我们拿到json后需要把它转换为json的字符串，服务器才能识别。为什么这样？因为就是这样设置的，也看后端接口是怎么写的根据情况定。</p><h2 id="ajax网络请求封装"><a href="#ajax网络请求封装" class="headerlink" title="ajax网络请求封装"></a>ajax网络请求封装</h2><p>一般不用自己封装，我们会使用axios/fetch库，但是我们也需要了解它的底层原理。</p><p>作用：我们发送一个网络请求，通常有五步</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 1.创建对象</span>     <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment">// 2.监听数据</span>     xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token punctuation">&#125;</span>     <span class="token comment">// 3.设置类型</span>     xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">"json"</span>     <span class="token comment">// 4.open方法</span>xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//5,发送</span>    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>       <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一个网页那么多请求，为了重复书写一样的代码，就有了封装，把传递进来的未知内容修改就好了，像个函数一样。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token comment">// 练习hyajax -> axios</span>  <span class="token keyword">function</span> <span class="token function">hyajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    url<span class="token punctuation">,</span>    method <span class="token operator">=</span> <span class="token string">"get"</span><span class="token punctuation">,</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token comment">// token</span>    success<span class="token punctuation">,</span>    failure  <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 1.创建对象</span>    <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 2.监听数据</span>    xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">>=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        success <span class="token operator">&amp;&amp;</span> <span class="token function">success</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        failure <span class="token operator">&amp;&amp;</span> <span class="token function">failure</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> status<span class="token operator">:</span> xhr<span class="token punctuation">.</span>status<span class="token punctuation">,</span> message<span class="token operator">:</span> xhr<span class="token punctuation">.</span>statusText <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 3.设置类型</span>    xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">"json"</span>    <span class="token comment">// 4.open方法</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"GET"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> queryStrings <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        queryStrings<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>key<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      url <span class="token operator">=</span> url <span class="token operator">+</span> <span class="token string">"?"</span> <span class="token operator">+</span> queryStrings<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"&amp;"</span><span class="token punctuation">)</span>      xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">)</span>      xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">)</span>      xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">"Content-type"</span><span class="token punctuation">,</span> <span class="token string">"application/json"</span><span class="token punctuation">)</span>      xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> xhr  <span class="token punctuation">&#125;</span>  <span class="token comment">// 调用者</span>  <span class="token function">hyajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    url<span class="token operator">:</span> <span class="token string">"http://123.207.32.32:1888/02_param/get"</span><span class="token punctuation">,</span>    method<span class="token operator">:</span> <span class="token string">"GET"</span><span class="token punctuation">,</span>    data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      name<span class="token operator">:</span> <span class="token string">"why"</span><span class="token punctuation">,</span>      age<span class="token operator">:</span> <span class="token number">18</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"res:"</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">failure</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// alert(err.message)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// hyajax(&#123;</span>  <span class="token comment">//   url: "http://123.207.32.32:1888/02_param/postjson",</span>  <span class="token comment">//   method: "post",</span>  <span class="token comment">//   data: &#123;</span>  <span class="token comment">//     name: "jsondata",</span>  <span class="token comment">//     age: 22</span>  <span class="token comment">//   &#125;,</span>  <span class="token comment">//   success: function(res) &#123;</span>  <span class="token comment">//     console.log("res:", res)</span>  <span class="token comment">//   &#125;,</span>  <span class="token comment">//   failure: function(err) &#123;</span>  <span class="token comment">//     // alert(err.message)</span>  <span class="token comment">//   &#125;</span>  <span class="token comment">// &#125;)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Timeout和取消请求"><a href="#Timeout和取消请求" class="headerlink" title="Timeout和取消请求"></a>Timeout和取消请求</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">我们可以通过xhr<span class="token punctuation">.</span>timeout<span class="token operator">=</span><span class="token number">1000</span>来取消请求，也就是说如果超过了<span class="token number">1</span>s服务器没有返回数据，自动取消此请求也可以通过xhr<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>来手动取消，比如把它写入一个按钮点击事件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>取消请求<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    xhr<span class="token punctuation">.</span><span class="token function-variable function">onabort</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"请求被取消掉了"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">"json"</span>   <span class="token comment">// xhr.timeout=1000</span>    <span class="token comment">// 1.超时时间的设置</span>    xhr<span class="token punctuation">.</span><span class="token function-variable function">ontimeout</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"请求过期: timeout"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// timeout: 浏览器达到过期时间还没有获取到对应的结果时, 取消本次请求</span>    <span class="token comment">// xhr.timeout = 3000</span>    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"http://123.207.32.32:1888/01_basic/timeout"</span><span class="token punctuation">)</span>    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 2.手动取消结果</span>    <span class="token keyword">const</span> cancelBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span>    cancelBtn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      xhr<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="FetchAPI的使用详解"><a href="#FetchAPI的使用详解" class="headerlink" title="FetchAPI的使用详解"></a>FetchAPI的使用详解</h2><p>fetch和axios的区别<a href="https://blog.csdn.net/weixin_40016215/article/details/117322523">https://blog.csdn.net/weixin_40016215/article/details/117322523</a></p><p>fetch需要用到promise，这个我原先学的黑马高级里面没有，后续有时间会学习coderwhy老师的2022高级补充</p><h2 id="前端文件上传流程"><a href="#前端文件上传流程" class="headerlink" title="前端文件上传流程"></a>前端文件上传流程</h2><p><strong>XHR上传</strong></p><p>formData.append()方法<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/FormData/append">https://developer.mozilla.org/zh-CN/docs/Web/API/FormData/append</a></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token comment">// xhr/fetch都可以文件上传，但是fetch无法看到上传进度</span>  <span class="token keyword">const</span> uploadBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".upload"</span><span class="token punctuation">)</span>  uploadBtn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 1.创建对象</span>    <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 2.监听结果</span>    xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    xhr<span class="token punctuation">.</span><span class="token function-variable function">onprogress</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">"json"</span>    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"post"</span><span class="token punctuation">,</span> <span class="token string">"http://123.207.32.32:1888/02_param/upload"</span><span class="token punctuation">)</span>    <span class="token comment">// 表单</span>    <span class="token keyword">const</span> fileEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".file"</span><span class="token punctuation">)</span>    <span class="token comment">//这里的files可以拿到那个file类型input的一些数据信息</span>    <span class="token keyword">const</span> file <span class="token operator">=</span> fileEl<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"avatar"</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span>    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中XHR中有一个 onprogress里面可以看上传的进度</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">xhr<span class="token punctuation">.</span><span class="token function-variable function">onprogress</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这个event里面包括很多东西，也包括了上传进度</p><p><strong>fetch上传</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>   <span class="token comment">// xhr/fetch</span>   <span class="token keyword">const</span> uploadBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".upload"</span><span class="token punctuation">)</span>   uploadBtn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token comment">// 表单</span>     <span class="token keyword">const</span> fileEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".file"</span><span class="token punctuation">)</span>     <span class="token keyword">const</span> file <span class="token operator">=</span> fileEl<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>     <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"avatar"</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span>     <span class="token comment">// 发送fetch请求</span>     <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">"http://123.207.32.32:1888/02_param/upload"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>       method<span class="token operator">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>       body<span class="token operator">:</span> formData     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>     <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"res:"</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript高级_03day</title>
      <link href="archives/b6807404.html"/>
      <url>archives/b6807404.html</url>
      
        <content type="html"><![CDATA[<p>今天的课程主要是理解什么是面向对象的编程思想，还有写一个案例。</p><h2 id="wpi考试错点"><a href="#wpi考试错点" class="headerlink" title="wpi考试错点"></a>wpi考试错点</h2><p>1-当css中写了!important，那么它的优先级最高，在如下js中也无法改变它，因为这个下面的js的本质是修改style即css。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/853.png" alt="853"></p><p>2-捕获类型事件，只能通过addEventListener注册，传统注册方法只能是事件冒泡。</p><p>3-事件对象e.preventDefault（）可以阻止默认事件，e.stopPropagation()可以阻止冒泡和捕获。</p><p>propagation传播; 扩展; 宣传; 培养;</p><p>问题：我阻止冒泡和捕获干啥？我阻止了还咋执行事件？</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span><span class="token operator">></span>qqq<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">let</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span>        div<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'2'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        box<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上，如果阻止了冒泡和捕获，本身的事件会执行，但是div的事件不会执行，因为阻止了冒泡。</p><p>4-document.querySelectorAll就算一个元素对象没取到，得到的是一个空数组而不是null；</p><p>document.querySelector如果元素不存在，会得到null</p><p>5-在事件委托绑定后，事件程序中e.target和this是不同的，<strong>e.target是指向鼠标点击的那个元素对象</strong>，this是谁调用指向谁。</p><h2 id="编程思想"><a href="#编程思想" class="headerlink" title="编程思想"></a>编程思想</h2><p><a href="https://blog.csdn.net/youif/article/details/107322845">https://blog.csdn.net/youif/article/details/107322845</a></p><p>面向对象有封装性，继承性，多态性。</p><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><p>js中面向对象需要构造函数来实现封装</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>      <span class="token keyword">function</span> <span class="token function">Awesome</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> gender</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name          <span class="token keyword">this</span><span class="token punctuation">.</span>gender <span class="token operator">=</span> gender          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">dream</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'探索未知，体验未知，改变世界'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">const</span> zdq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Awesome</span><span class="token punctuation">(</span><span class="token string">'zdq'</span><span class="token punctuation">,</span> <span class="token string">'man'</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> tyl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Awesome</span><span class="token punctuation">(</span><span class="token string">'tyl'</span><span class="token punctuation">,</span> <span class="token string">'man'</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zdq<span class="token punctuation">.</span>dream <span class="token operator">===</span> tyl<span class="token punctuation">.</span>dream<span class="token punctuation">)</span>  <span class="token comment">//false</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>浪费内存</strong></p><p>在构造函数生成对象的时候，当不同对象有一个相同的方法，如上的dream方法，那么zdq.dream和tyl.dream的方法是存储中不同的地址的，每次new都又生成了方法。</p><p>所以说这样就极大的浪费了内存，这个方法其实共用就行了。怎么实现共用呢？</p><p>使用原型prototype</p><h2 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/854.png" alt="854"></p><p>prototype是构造函数的一个属性，指向一个对象，如你打印Awesome.prototype，输出的也是一个对象。</p><p>问题：函数就是函数，咋函数也有属性了？</p><p><em>函数是一种特殊类型的对象。</em>您自己编写的代码并不是实际的函数。 该函数是具有属性的对象,此属性是可调用的。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>Awesome<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/855.png" alt="855"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span><span class="token class-name">Awesome</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/856.png" alt="856"></p><p>也就是说只有是相同构造函数生成的不同对象，如果通过 构造函数名.prototype.方法名=function(){}的话</p><p>就可以共用这一个方法，这个方法被赋予给每一个此构造函数生成的对象，但是它们调用的话，就是调用同一个方法，避免了内存浪费。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>       <span class="token keyword">function</span> <span class="token function">Awesome</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> gender</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name           <span class="token keyword">this</span><span class="token punctuation">.</span>gender <span class="token operator">=</span> gender                <span class="token punctuation">&#125;</span>       <span class="token class-name">Awesome</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">dream</span> <span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'探索未知，体验未知，改变世界'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>       <span class="token keyword">const</span> zdq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Awesome</span><span class="token punctuation">(</span><span class="token string">'zdq'</span><span class="token punctuation">,</span> <span class="token string">'man'</span><span class="token punctuation">)</span>       <span class="token keyword">const</span> tyl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Awesome</span><span class="token punctuation">(</span><span class="token string">'tyl'</span><span class="token punctuation">,</span> <span class="token string">'man'</span><span class="token punctuation">)</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zdq<span class="token punctuation">.</span>dream <span class="token operator">===</span> tyl<span class="token punctuation">.</span>dream<span class="token punctuation">)</span>  <span class="token comment">//true</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/857.png" alt="857"></p><p>分析：这里的需求就是在实例化数组的构造函数上加一个对象prototype的方法即可。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>       <span class="token comment">// const arr = [1,2,3]</span>       <span class="token keyword">const</span> arr <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span>       <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">max</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 原型函数里面的this 指向谁？ 实例对象 arr</span>           <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">)</span>       <span class="token punctuation">&#125;</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里为什么写…this？this指向的就是调用者，调用者就是那个arr，三个点在数组里面就是展开运算符。</p><h3 id="constructor属性"><a href="#constructor属性" class="headerlink" title="constructor属性"></a>constructor属性</h3><p>const恒定的，不变的；construct制造</p><p>constructor建造者，制造者，也就构造函数</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/858.png" alt="858"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Star</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">===</span> Star<span class="token punctuation">)</span>  <span class="token comment">//true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>也就是说在原型对象prototype里面有一个constructor属性，这个属性就是整个构造函数的代码</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Star<span class="token punctuation">)</span> <span class="token comment">//结果就是function  Star(name)&#123;</span><span class="token comment">//this.name =name</span><span class="token comment">//&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>那我搞个这东西干嘛呢？吃饭没事干？</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/859.png" alt="859"></p><p>应用：</p><p>我们都知道prototype对象可以为构造函数挂载公共方法，但是一个一个添加太麻烦了，所以我们经常直接为prototype对象赋值，那么就会覆盖掉原有的对象内容，原有自带的constructor就会消失，所以需要手动再添加一个constructor属性指向构造函数</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/860.png"></p><p>问题：</p><p>我手动添加constructor的话，就代表已经知道构造函数是谁了，为什么还要用constructor来知道构造函数是谁？？？</p><p><a href="https://blog.csdn.net/carayq/article/details/120453930">https://blog.csdn.net/carayq/article/details/120453930</a></p><p><a href="https://wangdoc.com/javascript/oop/object.html#objectprototype__proto">https://wangdoc.com/javascript/oop/object.html#objectprototype__proto</a>__</p><p>我们并不需要写 构造函数.prototype.constructor来获取，只需要通过对象.–proto–.constructor，当生成了很多个对象，就这个通过这个constructor快速知道此对象是由哪个构造函数生成。</p><p><strong>思考</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/861.png" alt="861"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/862.png" alt="862"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">因为生成的每个对象都有一个属性__proto__指向原型对象，所以可以共用挂载的函数方法。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/863.png" alt="863"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">这里注意1-prototype是原型对象，是一个对象2-  __proto__是一个对象原型，它指向这个对象的原型对象，它是每个构造函数生成的对象的一个属性，所以实例对象.__proto__===实例函数.prototype3-有的浏览器控制台中会用prototype表示 __proto__<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">function</span> <span class="token function">Star</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">const</span> ldh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Star</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 对象原型__proto__ 指向 改构造函数的原型对象</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span>  <span class="token comment">// console.log(ldh.__proto__ === Star.prototype)</span>  <span class="token comment">// 对象原型里面有constructor 指向 构造函数 Star</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">.</span><span class="token class-name">__proto__</span><span class="token punctuation">.</span>constructor <span class="token operator">===</span> Star <span class="token operator">===</span>Star<span class="token punctuation">.</span>prototpe<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span> <span class="token comment">//true</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/864.png" alt="864"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token class-name">__proto__</span><span class="token punctuation">.</span>constructor和prototype<span class="token punctuation">.</span>constructor的关系<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/865.png" alt="865"></p><h2 id="原型继承"><a href="#原型继承" class="headerlink" title="原型继承"></a>原型继承</h2><p>原型继承就是写一个对象，然后赋予给构造函数的prototype原型对象</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>  <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">"X-UA-Compatible"</span> content<span class="token operator">=</span><span class="token string">"IE=edge"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>title<span class="token operator">></span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token comment">// 继续抽取   公共的部分放到原型上</span>    <span class="token comment">// const Person1 = &#123;</span>    <span class="token comment">//   eyes: 2,</span>    <span class="token comment">//   head: 1</span>    <span class="token comment">// &#125;</span>    <span class="token comment">// const Person2 = &#123;</span>    <span class="token comment">//   eyes: 2,</span>    <span class="token comment">//   head: 1</span>    <span class="token comment">// &#125;</span>    <span class="token comment">// 构造函数  new 出来的对象 结构一样，但是对象不一样</span>    <span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>eyes <span class="token operator">=</span> <span class="token number">2</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// console.log(new Person)</span>    <span class="token comment">// 女人  构造函数   继承  想要 继承 Person</span>    <span class="token keyword">function</span> <span class="token function">Woman</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// Woman 通过原型来继承 Person</span>    <span class="token comment">// 父构造函数（父类）   子构造函数（子类）</span>    <span class="token comment">// 子类的原型 =  new 父类  </span>    <span class="token class-name">Woman</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// &#123;eyes: 2, head: 1&#125; </span>    <span class="token comment">// 指回原来的构造函数</span>    <span class="token class-name">Woman</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> Woman    <span class="token comment">// 给女人添加一个方法  生孩子</span>    <span class="token class-name">Woman</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">baby</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'宝贝'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> red <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Woman</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>red<span class="token punctuation">)</span>    <span class="token comment">// console.log(Woman.prototype)</span>    <span class="token comment">// 男人 构造函数  继承  想要 继承 Person</span>    <span class="token keyword">function</span> <span class="token function">Man</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 通过 原型继承 Person</span>    <span class="token class-name">Man</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token class-name">Man</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> Man    <span class="token keyword">const</span> pink <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Man</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pink<span class="token punctuation">)</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/866.png" alt="866"></p><p>为什么会这样呢？</p><p>因为男人女人两个构造函数引用赋予的prototype都是Person对象，这个对象赋予过去的是一个地址，指向同一片内存，一个通过操作改变如添加吸烟方法，另一个自然也改变。</p><p><strong>怎么办？</strong></p><p>很简单，我们让赋予给不同构造函数也就是男人女人两个构造函数的prototype的对象不同就行了，但是如果就男人女人两个构造函数还好说，如果有成千上万个要赋予相同方法和属性的构造函数怎么办呢？</p><p>再使用构造函数，可以构造出有相同的内容，不同地址的对象。</p><p><strong>问题：</strong></p><blockquote><p>原先不是说prototype就是为了节省内存，共用相同的方法，你这又开辟不同的对象，还节省个啥？</p><p>我看的是黑马的就业班教程，es6就四天，后续会看codewhy王元红老师的2022课程进行查漏补缺</p></blockquote><p>我的理解是构造函数woman和man的内存确实节省了，因为挂载了共用方法属性</p><p>但是为了不让男生添加吸烟方法，女生也被挂载上，所以必须牺牲内存去生成设置不同地址的对象。</p><p><strong>构造函数分为父类和子类构造函数</strong></p><p>如上的person为父类构造函数，woman和man是子类构造函数。</p><h2 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h2><p>1-只要是对象，就都有–proto–，它指向生成这个对象的构造函数的原型对象prototype</p><p>2-1中的原型对象也是对象，它自然也有–proto–，指向更上一层的prototype</p><p>3-只要是原型对象，就有constructor</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/868.png" alt="868"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">demo<span class="token punctuation">.</span>constructor <span class="token operator">===</span> demo<span class="token punctuation">.</span><span class="token class-name">__proto__</span><span class="token punctuation">.</span>constructor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/867.png" alt="867"></p><p>为什么如上会相等？</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/869.png" alt="869"></p><p>因为有原型链的线路存在，demo.constructor === demo.<strong>proto</strong>.constructor找到的东西是一样的。</p><p>如arry.prototype.map()，如果在arry对象中没有map方法，事实上也确实没有，就会去array的prototype中寻找，就像我们自己定义的构造函数一样，如果再没有就会再查找上一层（事实上map方法就挂载在array.prototype）</p><p><strong>instanceof运算符</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>   <span class="token comment">// function Objetc() &#123;&#125;</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>constructor<span class="token punctuation">)</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span>   <span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">const</span> ldh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// console.log(ldh.__proto__ === Person.prototype)</span>   <span class="token comment">// console.log(Person.prototype.__proto__ === Object.prototype)</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh <span class="token keyword">instanceof</span> <span class="token class-name">Person</span><span class="token punctuation">)</span> <span class="token comment">//true ldh对象是由person构造函数生成的</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span> <span class="token comment">//true，ldh在object这条原型链上</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token comment">//false ldh对象不属于数组</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token comment">//true </span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span> <span class="token comment">//true 万物皆对象哈哈</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/870.png" alt="870"></p><p>面向过程的话，非常简单，只需要获取dom，然后设置事件就好了。但是我们这里需要联系面向对象，用构造函数实现。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/871.png" alt="871"></p><p>什么意思呢</p><p>1-就是定义一个modal函数，它的作用是创造对象，也就是那些按钮的对象，如上的删除和登入</p><p>2-这个构造函数上面挂载上open和close方法。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>  <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span> <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">"X-UA-Compatible"</span> content<span class="token operator">=</span><span class="token string">"IE=edge"</span> <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span> <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span>title<span class="token operator">></span>面向对象封装消息提示<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>  <span class="token operator">&lt;</span>style<span class="token operator">></span>    <span class="token punctuation">.</span>modal <span class="token punctuation">&#123;</span>      width<span class="token operator">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>      min<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>      box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">10</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      border<span class="token operator">-</span>radius<span class="token operator">:</span> <span class="token number">4</span>px<span class="token punctuation">;</span>      position<span class="token operator">:</span> fixed<span class="token punctuation">;</span>      z<span class="token operator">-</span>index<span class="token operator">:</span> <span class="token number">999</span><span class="token punctuation">;</span>      left<span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>      top<span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>      transform<span class="token operator">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      background<span class="token operator">-</span>color<span class="token operator">:</span> #fff<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>modal <span class="token punctuation">.</span>header <span class="token punctuation">&#123;</span>      line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>      padding<span class="token operator">:</span> <span class="token number">0</span> <span class="token number">10</span>px<span class="token punctuation">;</span>      position<span class="token operator">:</span> relative<span class="token punctuation">;</span>      font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>modal <span class="token punctuation">.</span>header i <span class="token punctuation">&#123;</span>      font<span class="token operator">-</span>style<span class="token operator">:</span> normal<span class="token punctuation">;</span>      color<span class="token operator">:</span> #<span class="token number">999</span><span class="token punctuation">;</span>      position<span class="token operator">:</span> absolute<span class="token punctuation">;</span>      right<span class="token operator">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span>      top<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">2</span>px<span class="token punctuation">;</span>      cursor<span class="token operator">:</span> pointer<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>modal <span class="token punctuation">.</span>body <span class="token punctuation">&#123;</span>      text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span>      padding<span class="token operator">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>modal <span class="token punctuation">.</span>footer <span class="token punctuation">&#123;</span>      display<span class="token operator">:</span> flex<span class="token punctuation">;</span>      justify<span class="token operator">-</span>content<span class="token operator">:</span> flex<span class="token operator">-</span>end<span class="token punctuation">;</span>      padding<span class="token operator">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>modal <span class="token punctuation">.</span>footer a <span class="token punctuation">&#123;</span>      padding<span class="token operator">:</span> <span class="token number">3</span>px <span class="token number">8</span>px<span class="token punctuation">;</span>      background<span class="token operator">:</span> #ccc<span class="token punctuation">;</span>      text<span class="token operator">-</span>decoration<span class="token operator">:</span> none<span class="token punctuation">;</span>      color<span class="token operator">:</span> #fff<span class="token punctuation">;</span>      border<span class="token operator">-</span>radius<span class="token operator">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span>      margin<span class="token operator">-</span>right<span class="token operator">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>      font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>modal <span class="token punctuation">.</span>footer a<span class="token punctuation">.</span>submit <span class="token punctuation">&#123;</span>      background<span class="token operator">-</span>color<span class="token operator">:</span> #<span class="token number">369</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"delete"</span><span class="token operator">></span>删除<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"login"</span><span class="token operator">></span>登录<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"modal"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"header"</span><span class="token operator">></span>温馨提示 <span class="token operator">&lt;</span>i<span class="token operator">></span>x<span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"body"</span><span class="token operator">></span>您没有删除权限操作<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token comment">// 1.  模态框的构造函数</span>    <span class="token keyword">function</span> <span class="token function">Modal</span><span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 公共的属性部分</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>title <span class="token operator">=</span> title      <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> message      <span class="token comment">// 因为盒子是公共的</span>      <span class="token comment">// 1. 创建 一定不要忘了加 this </span>      <span class="token keyword">this</span><span class="token punctuation">.</span>modalBox <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span>      <span class="token comment">// 2. 添加类名</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>modalBox<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'modal'</span>      <span class="token comment">// 3. 填充内容 更换数据</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>modalBox<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">        &lt;div class="header"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> &lt;i>x&lt;/i>&lt;/div>        &lt;div class="body"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div>      </span><span class="token template-punctuation string">`</span></span>      <span class="token comment">// console.log(this.modalBox)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 2. 打开方法 挂载 到 模态框的构造函数原型身上</span>    <span class="token class-name">Modal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">open</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.modal'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 把刚才创建的盒子 modalBox  渲染到 页面中  父元素.appendChild(子元素)</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>modalBox<span class="token punctuation">)</span>        <span class="token comment">// 获取 x  调用关闭方法</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>modalBox<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'i'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 箭头函数没有this 上一级作用域的this</span>          <span class="token comment">// 这个this 指向 m </span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 3. 关闭方法 挂载 到 模态框的构造函数原型身上</span>    <span class="token class-name">Modal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">close</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>modalBox<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 4. 按钮点击</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#delete'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Modal</span><span class="token punctuation">(</span><span class="token string">'温馨提示'</span><span class="token punctuation">,</span> <span class="token string">'您没有权限删除'</span><span class="token punctuation">)</span>      <span class="token comment">// 调用 打开方法</span>      m<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 5. 按钮点击</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#login'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Modal</span><span class="token punctuation">(</span><span class="token string">'友情提示'</span><span class="token punctuation">,</span> <span class="token string">'您还么有注册账号'</span><span class="token punctuation">)</span>      <span class="token comment">// 调用 打开方法</span>      m<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1.下面关于编程思想说法错误的是? （d） 分值1分</p><p><em></em>A： 面向过程就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候再一个一个的依次调用就可以了</p><p><em></em>B：面向对象是把事务分解成为一个个对象，然后由对象之间分工与合作</p><p><em></em>C： 面向过程编程性能比面向对象高，但是没有面向对象易维护、易复用、易扩展</p><p><em></em>D：面向对象编程 易维护、易复用、易扩展，性能也比面向过程高</p><p>回答正确+1分</p><p><strong>答案解析：</strong></p><p>面向对象性能一般情况下比面向过程低</p><p>2.下面是面向对象编程特性的是? （abc） 分值1分</p><p><em></em>A：封装性</p><p><em></em>B：继承性</p><p><em></em>C：多态性</p><p><em></em>D：优先级</p><p>回答正确+1分</p><p>3.原型(原型对象)是? （b） 分值1分</p><p><em></em>A：Object</p><p><em></em>B：prototype</p><p><em></em>C：__proto</p><p><em></em>D：consturctor</p><p>回答正确+1分</p><p>4.原型(原型对象)的作用说法错误的是? （d） 分值1分</p><p><em></em>A：构造函数通过原型分配的函数是所有对象所 共享的</p><p><em></em>B：JavaScript 规定，每一个构造函数都有一个 prototype 属性，指向另一个对象，所以我们也称为原型对象</p><p><em></em>C： 我们可以把那些不变的方法，直接定义在 prototype 对象上，这样所有对象的实例就可以共享这些方法</p><p><em></em>D：原型经常挂载函数，但是比较耗费内存</p><p>回答正确+1分</p><p><strong>答案解析：</strong></p><p>原型对象上面挂在函数，可以实现共享，反而更加节省内存，因为不需要每次都创建这个函数</p><p>5.关于构造函数和原型对象里面this指向说法正确的是? （a） 分值1分</p><p><em></em>A：构造函数和原型对象中的this 都指向 实例化的对象</p><p><em></em>B：构造函数的this指向window</p><p><em></em>C： 原型对象的this指向构造函数</p><p><em></em>D：构造函数和实例对象里面没有this，跟箭头函数一样</p><p>回答正确+1分</p><p>6.下面关于constructor 属性说法正确的是? （abcd） 分值1分</p><p><em></em>A：每个原型对象里面都有个constructor 属性</p><p><em></em>B：原型对象里面都有个constructor 属性指向该原型对象的构造函数</p><p><em></em>C： 对象原型__proto里面也有一个constructor属性，指向创建该实例对象的构造函数</p><p><em></em>D：原型对象constructor属性的使用场景：可以重新指回指向原来的构造函数</p><p>回答正确+1分</p><p>7.对象原型是? （c） 分值1分</p><p><em></em>A：Object</p><p><em></em>B：prototype</p><p><em></em>C：__ proto__</p><p><em></em>D：consturctor</p><p>回答正确+1分</p><p>8.为什么实例对象可以访问构造函数的原型对象中的属性和方法呢？ （a） 分值1分</p><p><em></em>A：因为实例对象里面有对象原型 _ proto__ 它指向原型对象</p><p><em></em>B：因为实例对象有constructor 指向原型对象</p><p><em></em>C： 因为实例对象有 this指向原型对象</p><p><em></em>D：没啥原因，反正就是能….</p><p>回答正确+1分</p><p>9.下列选项中关于原型链说法正确的是？ （abcd） 分值1分</p><p><em></em>A：对象原型的意义就在于为对象成员查找机制提供一个方向，或者说一条路线</p><p><em></em>B：当访问一个对象的属性(包括方法)时，首先查找这个对象自身有没有该属性</p><p><em></em>C：如果没有就查找它的原型(也就是 proto指向的 prototype 原型对象)</p><p><em></em>D：如果还没有就查找原型对象的原型(Object的原型对象)依此类推一直找到 Object 为止(null)</p><p>回答正确+1分</p><p>10.下列选项中关于原型继承说法正确的是？ （abc） 分值1分</p><p><em></em>A：核心是子类原型继承父类的实例： Man.prototype = new Person()</p><p><em></em>B：父类新增原型方法或是原型属性子类都可以访问到</p><p><em></em>C：Man.prototype = new Person() 其中 new Person() 生成一个对象，并且是独立的，互不影响</p><p><em></em>D：Man = new Person() 其实也可以的</p><p>回答正确+1分</p><p><strong>答案解析：</strong></p><p>不能直接 Man = new Person() 要不然就替换 Man函数了</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript高级_02day</title>
      <link href="archives/e3c1361.html"/>
      <url>archives/e3c1361.html</url>
      
        <content type="html"><![CDATA[<h2 id="深入对象"><a href="#深入对象" class="headerlink" title="深入对象"></a>深入对象</h2><p>注意<!doctype html> ,这里的感叹号和doctype间不要加空格。</p><h3 id="创建对象的三种方式"><a href="#创建对象的三种方式" class="headerlink" title="创建对象的三种方式"></a>创建对象的三种方式</h3><p>注意对象里面得用单引号把字符包起来</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/836.png" alt="836"></p><p>第一种就是我们常用的字面量创造对象</p><p>第二种是new Object创造对象，其中我们可以直接在括号内添加对象</p><p>第三种就是构造函数，其实用newObject（）也是一种构造函数，只是官方固定了写法</p><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/837.png" alt="837"></p><p>1-构造函数是一个特殊的函数，它的作用是初始化对象，通过它可以快速生成多个有相同属性类似的对象。</p><p>2-行业约定，构造函数名称首字母大写，必须用new操作符来执行。 </p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">function</span> <span class="token function">Awesome</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name      <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age  <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Awesome</span><span class="token punctuation">(</span><span class="token string">'zdq'</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>this.name =name,后面那个是形参，前面那个是对象的属性，其中this谁调用就是谁。这里是创造对象，所以这个this就是创造的那个对象。</p><p>这个name随便你命名的，属性和参数一般写成一样，便于使用区分</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/838.png" alt="838"></p><p>构造函数里面不要写return返回值，写了也无效，因为<strong>构造函数默认返回生成的对象。</strong></p><p>当构造函数没有参数，小括号可以省略，一般不省</p><p>new关键字调用函数的行为就叫做实例化</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">function</span> <span class="token function">Goods</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> price<span class="token punctuation">,</span> count</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name            <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price            <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> count        <span class="token punctuation">&#125;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Goods</span><span class="token punctuation">(</span><span class="token string">'小米'</span><span class="token punctuation">,</span> <span class="token number">1999</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Goods</span><span class="token punctuation">(</span><span class="token string">'小米'</span><span class="token punctuation">,</span> <span class="token number">3999</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">const</span> hw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Goods</span><span class="token punctuation">(</span><span class="token string">'小米'</span><span class="token punctuation">,</span> <span class="token number">5999</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hw<span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="实例化执行过程"><a href="#实例化执行过程" class="headerlink" title="实例化执行过程"></a>实例化执行过程</h3><p>为什么this就是那个生成的对象？用上面的代码做讲解</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/839.png" alt="839"></p><p>1-我们起初写了一个构造函数</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Goods</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> price<span class="token punctuation">,</span> count</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name            <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price            <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> count        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2-虽然写了函数，但是不调用它是不执行的。所以我们要调用</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> hw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Goods</span><span class="token punctuation">(</span><span class="token string">'小米'</span><span class="token punctuation">,</span> <span class="token number">5999</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>new Goods(‘小米’, 5999, 100)就等于调用了，注意因为这里是构造函数，所以必须加上new关键字</p><p>3-当调用后，就会立马自动生成一个空对象，所以函数里面的this是指向这个空对象的</p><p>4-因为我们调用函数的时候，里面写了参数，所以这个时候就会为对象添加新的属性方法等。</p><p>5-最后这个构造函数会返回生成的这个新对象。</p><h3 id="实例成员-amp-静态成员"><a href="#实例成员-amp-静态成员" class="headerlink" title="实例成员&amp;静态成员"></a>实例成员&amp;静态成员</h3><p>1-通过构造函数生成的对象叫做实例对象，这个实例对象里面的方法和属性叫做实例成员。</p><p>上面的hw就是实例对象，this.name就是实例成员</p><p>2-构造函数的方法和属性叫做静态成员,如下直接给函数添加方法和属性（这个函数也是一个对象）</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Goods<span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token number">10</span> Goods<span class="token punctuation">.</span><span class="token function-variable function">sayhi</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/840.png" alt="840"></p><h2 id="内置的构造函数"><a href="#内置的构造函数" class="headerlink" title="内置的构造函数"></a>内置的构造函数</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/841.png" alt="841"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">'pink'</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token number">12</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如上，为什么这基本的简单数据类型也有对象一样的 方法和属性呢？</p><p>因为js底层给它们进行了包装，都实例化了一次，当你写了一段代码</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">'zdq'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>底层执行的是一个构造函数</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">'zdq'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> o <span class="token operator">=</span> <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'pink'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">&#125;</span>   <span class="token comment">// 1.获得所有的属性名</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//返回数组['uname', 'age']</span>   <span class="token comment">// 2. 获得所有的属性值</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//  ['pink', 18]</span>   <span class="token comment">// 3. 对象的拷贝</span>   <span class="token comment">// const oo = &#123;&#125;</span>   <span class="token comment">// Object.assign(oo, o)</span>   <span class="token comment">// console.log(oo)</span>   Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> gender<span class="token operator">:</span> <span class="token string">'女'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意这些都是静态方法，所以是  构造函数.方法</p><p>keys是获取对象中所有的属性与方法名字，返回一个数组</p><p>values是获取所有属性和方法值</p><p>assign是拷贝追加，其中两个参数，把后面的追加给前面的，和直接添加差不多。</p><h3 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h3><p>字面量创造方法</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> arr <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>构造函数方法</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/842.png" alt="842"></p><p>其中这个forEach究竟是上面玩意呢，在高级第一天还是没搞清楚</p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/843.png" alt="843" style="zoom:80%;" /><p>其实它就是在底层封装了一个for循环在forEach里面，然后我们调用这个方法，写的参数也是一个函数（一般就写找一个，也有其他参数），函数里面规定了三个变量，分别是项值，索引，数组（就是原数组，forEach不返回数组但是改变原数组）。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>    arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        arr<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> a <span class="token operator">-</span> <span class="token number">1</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/844.png" alt="844" style="zoom:50%;" /><p><strong>arr.reduce()方法</strong></p><p>累计求和用reduce</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/845.png" alt="845"></p><p>函数内的索引号和源数组可以不写，累计值和当前元素必须写，你写了其实就等于声明了一个函数变量，这个函数变量会被reduce方法的底层运行机制赋值，你可以操作这个函数变量。</p><p><strong>问题</strong></p><p>不是说map和reduce有返回值，合着还需要我自己在参数函数中写个返回语句？</p><p>不管是map还是reduce还是filter还是forEach方法（底层没提供参数值返回所以无法自己return），不是说reduce就是用来求和的，它的作用取决于你自己在函数参数中写的语句，如下</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>    <span class="token keyword">const</span> re <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">sum<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=></span> sum <span class="token operator">+</span> item<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>re<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这一段就是返回累加和，因为你写的返回值是prev+item</p><p>原理：reduce底层封装的程序就是把我们每次循环返回的值传递给第一个函数参数（这里就不用操心为什么了，它内置的语句就是这个功能），如下的sum，当没有写起始值，由数组第一个元素代替，最后reduce方法返回这个最终sum的值。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>   <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">323</span><span class="token punctuation">]</span>   <span class="token keyword">const</span> re <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">sum<span class="token punctuation">,</span>item</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">return</span> sum<span class="token operator">+</span><span class="token number">2</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>re<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这一段代码，结果就是1+2+2+2+2+2+2=11   </p><p>因为没有写起始值所以起始值是数组第一个为1（因为已经取到数组中的第一个值了，所以循环会少一次），后面因为我们写的是 return sum+2，所以每次+2</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/847.png" alt="847"></p><p>2-map方法的原理就是每次把你自己在方法参数那个回调函数中写的语句最终的返回值全部赋予到一个数组，然后这个方法就返回这个新数组。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/848.png" alt="848"></p><p><strong>案例</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/846.png" alt="846"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>            name<span class="token operator">:</span> <span class="token string">'张三'</span><span class="token punctuation">,</span>            salary<span class="token operator">:</span> <span class="token number">10000</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            name<span class="token operator">:</span> <span class="token string">'李四'</span><span class="token punctuation">,</span>            salary<span class="token operator">:</span> <span class="token number">10000</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            name<span class="token operator">:</span> <span class="token string">'王五'</span><span class="token punctuation">,</span>            salary<span class="token operator">:</span> <span class="token number">20000</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>        <span class="token keyword">const</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span>salary<span class="token operator">:</span>s1<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>salary<span class="token operator">:</span>s2<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>salary<span class="token operator">:</span>s3<span class="token punctuation">&#125;</span><span class="token punctuation">]</span> <span class="token operator">=</span>arr        <span class="token keyword">const</span> sum <span class="token operator">=</span> <span class="token punctuation">(</span>s1<span class="token operator">+</span>s2<span class="token operator">+</span>s3<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">0.3</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方法二</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> num <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">sum<span class="token punctuation">,</span>item</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           <span class="token comment">// 这里的item在这个方法底层中设置好了，就是数组项，这个数组项是一个对象，所以item.salary</span>    <span class="token comment">//这里不能省略起始值，如果省略就用数组第一个为起始值，它是一个对象，肯定就会出问题，所以起始值写0</span>           <span class="token keyword">return</span> sum<span class="token operator">+</span>item<span class="token punctuation">.</span>salary<span class="token operator">*</span><span class="token number">0.3</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'如果三人每人涨百分之三十工资，需要多出'</span><span class="token operator">+</span>num<span class="token operator">+</span><span class="token string">'元'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>数组的常见方法</strong></p><p>常用方法有很多，不可能全部精通，不会的话查mdn文档即可</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/849.png" alt="849"></p><p><strong>数组的find方法</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>        name<span class="token operator">:</span> <span class="token string">'张三'</span><span class="token punctuation">,</span>        salary<span class="token operator">:</span> <span class="token number">10000</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        name<span class="token operator">:</span> <span class="token string">'李四'</span><span class="token punctuation">,</span>        salary<span class="token operator">:</span> <span class="token number">10000</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        name<span class="token operator">:</span> <span class="token string">'王五'</span><span class="token punctuation">,</span>        salary<span class="token operator">:</span> <span class="token number">20000</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span>  <span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> item<span class="token punctuation">.</span>name<span class="token operator">==</span><span class="token string">'张三'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&#123;name: '张三', salary: 10000&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>find方法也有很多个参数，常用的就是写一个回调函数的参数，当函数中返回true则停止遍历，此方法返回的是找到的数据对应的数组项。 </p><p>问：你不是返回item.name==’张三’嘛？应该是个true或者false呀，怎么又是个数组项？</p><p>true或者fasle是那个回调函数返回给方法的，方法里面内置了语句我们看不到，作用就是当回调函数返回true则返回此数组项（这个数组项怎么来的，索引值咋记录的都是内置的语句写好了的，不需要我们来操心）。</p><p><strong>every和some方法</strong></p><p>every是遍历的数组每一个项都符合条件则返回true，some是其中一个符合就true，它和filter都可以进行条件筛选，但是filter返回的成立条件的数组，every和true是返回的布尔值。 </p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>       <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>           name<span class="token operator">:</span> <span class="token string">'张三'</span><span class="token punctuation">,</span>           salary<span class="token operator">:</span> <span class="token number">10000</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>           name<span class="token operator">:</span> <span class="token string">'李四'</span><span class="token punctuation">,</span>           salary<span class="token operator">:</span> <span class="token number">10000</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>           name<span class="token operator">:</span> <span class="token string">'王五'</span><span class="token punctuation">,</span>           salary<span class="token operator">:</span> <span class="token number">20000</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>       <span class="token punctuation">]</span>   <span class="token comment">//   let result = arr.every(function(item)&#123;</span>           <span class="token comment">// return item.salary >= 10000 </span>   <span class="token comment">//   &#125;)</span>   <span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=></span>item<span class="token punctuation">.</span>salary<span class="token operator">>=</span><span class="token number">10000</span><span class="token punctuation">)</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>some的用法和every基本上一样，改个方法名就行了，当一个数组项可以成立就返回true</p><p><strong>数组的join方法</strong></p><p>把数组中的所有数据项元素拼接为字符串，再返回此字符串。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span>script<span class="token operator">></span>   <span class="token keyword">const</span> spec <span class="token operator">=</span> <span class="token punctuation">&#123;</span> size<span class="token operator">:</span> <span class="token string">'40cm*40cm'</span><span class="token punctuation">,</span> color<span class="token operator">:</span> <span class="token string">'黑色'</span> <span class="token punctuation">&#125;</span>   <span class="token comment">//1. 所有的属性值回去过来  数组</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>spec<span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment">// 2. 转换为字符串   数组join('/') 把数组根据分隔符转换为字符串</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>spec<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>spec<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>join中的参数为一个分隔符，也就是把数组中各数组项由什么隔开，也可以不写，就会默认逗号隔开。</p><p><strong>from方法把伪数组转换为真数组</strong></p><p>目前学的伪数组有argument和document.querySelctorALL获取的元素对象伪数组</p><p>真数组才有pop出和push入的方法等</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"> <span class="token comment">//  Array.from(lis) 把伪数组转换为真数组</span>  <span class="token keyword">const</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'ul li'</span><span class="token punctuation">)</span>  <span class="token comment">// console.log(lis)</span>  <span class="token comment">// lis.pop() 报错</span>  <span class="token keyword">const</span> liss <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span>  liss<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>liss<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="string的常用方法"><a href="#string的常用方法" class="headerlink" title="string的常用方法"></a>string的常用方法</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/850.png" alt="850"></p><p><strong>split</strong></p><p>str.split()是把字符串转换伪数组，arry.join()是把数组转化为字符串</p><p>怎么记忆呢，把数组项一个个组合到一起，加入join到一起就形成了字符串</p><p>把字符串分开成一个个数组项就是split分开</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>      <span class="token keyword">const</span> str <span class="token operator">=</span><span class="token string">'11,22'</span>      <span class="token keyword">const</span> arr <span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>  <span class="token comment">//(2) ['11', '22']</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//5</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里是用逗号分隔，如果字符串里面有逗号，就分为两个数组项，如上如果str=‘1122’那么就只有一个数组项[‘1122’]而不是[‘11’, ‘22’]</p><p><strong>substring字符串的截取</strong></p><p>返回截取的内容</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>indexStart<span class="token punctuation">[</span><span class="token punctuation">,</span> indexEnd<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就是截取字符的索引号到结束索引号的值，不写结束默认取到最后</p><p>indexend当前项是不包含在截取的字符串内的，所以需要往后面写一个</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>     <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">'养一方正气,镇四方之淫邪'</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//养一方正气,镇四  (取到第八个这个‘方’子呢？其实endindex是不包含在截取中的)</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>startsWith方法</strong></p><p>语法</p> <pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>searchString<span class="token punctuation">[</span><span class="token punctuation">,</span> position<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检测是否字符串以某个字符开头，返回true或者fasle</p><p>后面的position可以设置开始检测开头的位置。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">"To be, or not to be, that is the question."</span><span class="token punctuation">;</span><span class="token function">alert</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"To be"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// true</span><span class="token function">alert</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"not to be"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// false</span><span class="token function">alert</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"not to be"</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>includes方法</strong></p><p>数组和字符串都有实例方法includes(),它的包含是区分大小写的</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>searchString<span class="token punctuation">[</span><span class="token punctuation">,</span> position<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">'To be, or not to be, that is the question.'</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'To be'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'question'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'nonexistent'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'To be'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// false</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'TO BE'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/851.png" alt="851"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>   <span class="token keyword">const</span> gift <span class="token operator">=</span> <span class="token string">'50g的茶叶,清洗球'</span>   <span class="token comment">// 1. 把字符串拆分为数组</span>   <span class="token comment">// console.log(gift.split(',')) [,]</span>   <span class="token comment">// 2. 根据数组元素的个数，生成 对应 span标签</span>   <span class="token comment">// const str = gift.split(',').map(function (item) &#123;</span>   <span class="token comment">//   return `&lt;span>【赠品】 $&#123;item&#125;&lt;/span> &lt;br>`</span>   <span class="token comment">// &#125;).join('')</span>   <span class="token comment">// // console.log(str)</span>   <span class="token comment">// document.querySelector('div').innerHTML = str</span>   document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> gift<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;span>【赠品】 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>item<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/span> &lt;br></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>number的toFixed()方法</strong></p><p>如果参数内不写，默认四舍五入。</p><p>作用是设置保留小数位长度</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>   <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">11.23232</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/852.png" alt="852"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>  <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">"X-UA-Compatible"</span> content<span class="token operator">=</span><span class="token string">"IE=edge"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>title<span class="token operator">></span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>  <span class="token operator">&lt;</span>style<span class="token operator">></span>    <span class="token operator">*</span> <span class="token punctuation">&#123;</span>      margin<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      padding<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      box<span class="token operator">-</span>sizing<span class="token operator">:</span> border<span class="token operator">-</span>box<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>list <span class="token punctuation">&#123;</span>      width<span class="token operator">:</span> <span class="token number">990</span>px<span class="token punctuation">;</span>      margin<span class="token operator">:</span> <span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>item <span class="token punctuation">&#123;</span>      padding<span class="token operator">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span>      transition<span class="token operator">:</span> all <span class="token number">.5</span>s<span class="token punctuation">;</span>      display<span class="token operator">:</span> flex<span class="token punctuation">;</span>      border<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token number">1</span>px solid #e4e4e4<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>item<span class="token operator">:</span>nth<span class="token operator">-</span><span class="token function">child</span><span class="token punctuation">(</span><span class="token parameter"><span class="token number">4n</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>item<span class="token operator">:</span>hover <span class="token punctuation">&#123;</span>      cursor<span class="token operator">:</span> pointer<span class="token punctuation">;</span>      background<span class="token operator">-</span>color<span class="token operator">:</span> #f5f5f5<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>item img <span class="token punctuation">&#123;</span>      width<span class="token operator">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>      height<span class="token operator">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>      margin<span class="token operator">-</span>right<span class="token operator">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>item <span class="token punctuation">.</span>name <span class="token punctuation">&#123;</span>      font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">18</span>px<span class="token punctuation">;</span>      margin<span class="token operator">-</span>right<span class="token operator">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>      color<span class="token operator">:</span> #<span class="token number">333</span><span class="token punctuation">;</span>      flex<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>item <span class="token punctuation">.</span>name <span class="token punctuation">.</span>tag <span class="token punctuation">&#123;</span>      display<span class="token operator">:</span> block<span class="token punctuation">;</span>      padding<span class="token operator">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span>      font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>      color<span class="token operator">:</span> #<span class="token number">999</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>item <span class="token punctuation">.</span>price<span class="token punctuation">,</span>    <span class="token punctuation">.</span>item <span class="token punctuation">.</span>sub<span class="token operator">-</span>total <span class="token punctuation">&#123;</span>      font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">18</span>px<span class="token punctuation">;</span>      color<span class="token operator">:</span> firebrick<span class="token punctuation">;</span>      flex<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>item <span class="token punctuation">.</span>price<span class="token operator">:</span><span class="token operator">:</span>before<span class="token punctuation">,</span>    <span class="token punctuation">.</span>item <span class="token punctuation">.</span>sub<span class="token operator">-</span>total<span class="token operator">:</span><span class="token operator">:</span>before<span class="token punctuation">,</span>    <span class="token punctuation">.</span>amount<span class="token operator">:</span><span class="token operator">:</span>before <span class="token punctuation">&#123;</span>      content<span class="token operator">:</span> <span class="token string">"¥"</span><span class="token punctuation">;</span>      font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>item <span class="token punctuation">.</span>spec <span class="token punctuation">&#123;</span>      flex<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span>      color<span class="token operator">:</span> #<span class="token number">888</span><span class="token punctuation">;</span>      font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>item <span class="token punctuation">.</span>count <span class="token punctuation">&#123;</span>      flex<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>      color<span class="token operator">:</span> #aaa<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>total <span class="token punctuation">&#123;</span>      width<span class="token operator">:</span> <span class="token number">990</span>px<span class="token punctuation">;</span>      margin<span class="token operator">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>      display<span class="token operator">:</span> flex<span class="token punctuation">;</span>      justify<span class="token operator">-</span>content<span class="token operator">:</span> flex<span class="token operator">-</span>end<span class="token punctuation">;</span>      border<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token number">1</span>px solid #e4e4e4<span class="token punctuation">;</span>      padding<span class="token operator">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>total <span class="token punctuation">.</span>amount <span class="token punctuation">&#123;</span>      font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">18</span>px<span class="token punctuation">;</span>      color<span class="token operator">:</span> firebrick<span class="token punctuation">;</span>      font<span class="token operator">-</span>weight<span class="token operator">:</span> bold<span class="token punctuation">;</span>      margin<span class="token operator">-</span>right<span class="token operator">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"list"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"item"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"https://yanxuan-item.nosdn.127.net/84a59ff9c58a77032564e61f716846d6.jpg"</span> alt<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>      <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"name"</span><span class="token operator">></span>称心如意手摇咖啡磨豆机咖啡豆研磨机 <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"tag"</span><span class="token operator">></span>【赠品】<span class="token number">10</span>优惠券<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>      <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"spec"</span><span class="token operator">></span>白色<span class="token operator">/</span><span class="token number">10</span>寸<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>      <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"price"</span><span class="token operator">></span><span class="token number">289.90</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>      <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"count"</span><span class="token operator">></span>x2<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>      <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sub-total"</span><span class="token operator">></span><span class="token number">579.80</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"total"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>合计：<span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"amount"</span><span class="token operator">></span><span class="token number">1000.00</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">const</span> goodsList <span class="token operator">=</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        id<span class="token operator">:</span> <span class="token string">'4001172'</span><span class="token punctuation">,</span>        name<span class="token operator">:</span> <span class="token string">'称心如意手摇咖啡磨豆机咖啡豆研磨机'</span><span class="token punctuation">,</span>        price<span class="token operator">:</span> <span class="token number">289.9</span><span class="token punctuation">,</span>        picture<span class="token operator">:</span> <span class="token string">'https://yanxuan-item.nosdn.127.net/84a59ff9c58a77032564e61f716846d6.jpg'</span><span class="token punctuation">,</span>        count<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>        spec<span class="token operator">:</span> <span class="token punctuation">&#123;</span> color<span class="token operator">:</span> <span class="token string">'白色'</span> <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        id<span class="token operator">:</span> <span class="token string">'4001009'</span><span class="token punctuation">,</span>        name<span class="token operator">:</span> <span class="token string">'竹制干泡茶盘正方形沥水茶台品茶盘'</span><span class="token punctuation">,</span>        price<span class="token operator">:</span> <span class="token number">109.8</span><span class="token punctuation">,</span>        picture<span class="token operator">:</span> <span class="token string">'https://yanxuan-item.nosdn.127.net/2d942d6bc94f1e230763e1a5a3b379e1.png'</span><span class="token punctuation">,</span>        count<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>        spec<span class="token operator">:</span> <span class="token punctuation">&#123;</span> size<span class="token operator">:</span> <span class="token string">'40cm*40cm'</span><span class="token punctuation">,</span> color<span class="token operator">:</span> <span class="token string">'黑色'</span> <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        id<span class="token operator">:</span> <span class="token string">'4001874'</span><span class="token punctuation">,</span>        name<span class="token operator">:</span> <span class="token string">'古法温酒汝瓷酒具套装白酒杯莲花温酒器'</span><span class="token punctuation">,</span>        price<span class="token operator">:</span> <span class="token number">488</span><span class="token punctuation">,</span>        picture<span class="token operator">:</span> <span class="token string">'https://yanxuan-item.nosdn.127.net/44e51622800e4fceb6bee8e616da85fd.png'</span><span class="token punctuation">,</span>        count<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        spec<span class="token operator">:</span> <span class="token punctuation">&#123;</span> color<span class="token operator">:</span> <span class="token string">'青色'</span><span class="token punctuation">,</span> sum<span class="token operator">:</span> <span class="token string">'一大四小'</span> <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        id<span class="token operator">:</span> <span class="token string">'4001649'</span><span class="token punctuation">,</span>        name<span class="token operator">:</span> <span class="token string">'大师监制龙泉青瓷茶叶罐'</span><span class="token punctuation">,</span>        price<span class="token operator">:</span> <span class="token number">139</span><span class="token punctuation">,</span>        picture<span class="token operator">:</span> <span class="token string">'https://yanxuan-item.nosdn.127.net/4356c9fc150753775fe56b465314f1eb.png'</span><span class="token punctuation">,</span>        count<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        spec<span class="token operator">:</span> <span class="token punctuation">&#123;</span> size<span class="token operator">:</span> <span class="token string">'小号'</span><span class="token punctuation">,</span> color<span class="token operator">:</span> <span class="token string">'紫色'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        gift<span class="token operator">:</span> <span class="token string">'50g茶叶,清洗球,宝马, 奔驰'</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>    <span class="token comment">// 1. 根据数据渲染页面</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.list'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> goodsList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// console.log(item)  // 每一条对象</span>      <span class="token comment">// 对象解构  item.price item.count</span>      <span class="token comment">//spec解构后就是声明赋值了一个对象</span>      <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> picture<span class="token punctuation">,</span> name<span class="token punctuation">,</span> count<span class="token punctuation">,</span> price<span class="token punctuation">,</span> spec<span class="token punctuation">,</span> gift <span class="token punctuation">&#125;</span> <span class="token operator">=</span> item      <span class="token comment">// 规格文字模块处理</span>      <span class="token keyword">const</span> text <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>spec<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>      <span class="token comment">// 计算小计模块 单价 * 数量  保留两位小数 </span>      <span class="token comment">// 注意精度问题，因为保留两位小数，所以乘以 100  最后除以100</span>      <span class="token keyword">const</span> subTotal <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>price <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">*</span> count<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>      <span class="token comment">// 处理赠品模块 '50g茶叶,清洗球'</span>      <span class="token comment">//这里要判断有没有gift，如果没有赠品，你去用就会报错</span>      <span class="token keyword">const</span> str <span class="token operator">=</span> gift <span class="token operator">?</span> gift<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;span class="tag">【赠品】</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>item<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/span> </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">''</span>      <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">        &lt;div class="item">          &lt;img src=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>picture<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> alt="">          &lt;p class="name"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>str<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> &lt;/p>          &lt;p class="spec"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>text<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> &lt;/p>          &lt;p class="price"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>price<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/p>          &lt;p class="count">x</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>count<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/p>          &lt;p class="sub-total"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>subTotal<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/p>        &lt;/div>      </span><span class="token template-punctuation string">`</span></span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token comment">// 3. 合计模块</span>    <span class="token keyword">const</span> total <span class="token operator">=</span> goodsList<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=></span> prev <span class="token operator">+</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>price <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">*</span> item<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token comment">// console.log(total)</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.amount'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> total<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript高级_04day</title>
      <link href="archives/2b574cbd.html"/>
      <url>archives/2b574cbd.html</url>
      
        <content type="html"><![CDATA[<h2 id="深浅拷贝"><a href="#深浅拷贝" class="headerlink" title="深浅拷贝"></a>深浅拷贝</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    uname<span class="token operator">:</span> <span class="token string">'pink'</span><span class="token punctuation">,</span>    age<span class="token operator">:</span> <span class="token number">18</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">const</span> o <span class="token operator">=</span> obj  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>  o<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">20</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接的复制会出现问题，如上把obj对象赋予o对象，其实给o对象的是obj的地址，当我们修改o后，obj也会跟着变，这是不行的。</p><p><strong>浅拷贝</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/872.png" alt="872"></p><p>对象的浅拷贝可以用展开运算符或者assign方法，数组的浅拷贝也可以用展开运算符或者concat方法。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//const o = &#123; ...obj &#125;</span><span class="token comment">//Object.assign(o, obj)</span><span class="token comment">//数组同理</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>问题</strong></p><p>浅拷贝还是有问题，如下</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>   <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>     uname<span class="token operator">:</span> <span class="token string">'pink'</span><span class="token punctuation">,</span>     age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>     family<span class="token operator">:</span> <span class="token punctuation">&#123;</span>       baby<span class="token operator">:</span> <span class="token string">'小pink'</span>     <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>   <span class="token comment">// 浅拷贝</span>   <span class="token comment">// const o = &#123; ...obj &#125;</span>   <span class="token comment">// console.log(o)</span>   <span class="token comment">// o.age = 20</span>   <span class="token comment">// console.log(o)</span>   <span class="token comment">// console.log(obj)</span>   <span class="token keyword">const</span> o <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>   Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> obj<span class="token punctuation">)</span>   o<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">20</span>   o<span class="token punctuation">.</span>family<span class="token punctuation">.</span>baby <span class="token operator">=</span> <span class="token string">'老pink'</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>  <span class="token comment">//这里照样会把小pink改成老pink</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当obj对象里面又有对象或者数组这些引用形数据，那么里面的数据，还是和直接复制一样被改变。</p><p>所以说浅拷贝，只能将外层的数据重新生成一个新地址去储存，内层数据还是同一个地址。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/873.png" alt="873"></p><p>直接赋值一个对象，就是把对象的地址给另一个变量，自然一变就多变</p><p>浅拷贝是把老对象的数据赋予新对象，生成了新地址内存去存储，所以一般不会一变多变，但是当老对象里面还有对象（也就是里面还有引用型数据），那么在浅拷贝中这个’内对象‘只是和直接赋值一样把地址给了新对象，所以还是会一变多变。</p><p><strong>深拷贝</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/874.png" alt="874"></p><p>深浅拷贝都只针对引用类型数据，因为简单数据类型直接赋值就好了，也用不到它们。</p><p><strong>递归深拷贝</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/875.png" alt="875"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>   <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span>   <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">这是第</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">次</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">>=</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">return</span>     <span class="token punctuation">&#125;</span>     i<span class="token operator">++</span>     <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span>   <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>记住递归函数一般要写return，否则死递归，但也根据需求而定。</p><p><strong>那么怎么通过递归函数来深拷贝呢？</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>     <span class="token keyword">const</span> o<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>     <span class="token keyword">const</span> obj <span class="token operator">=</span><span class="token punctuation">&#123;</span>         age<span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>         gender<span class="token operator">:</span><span class="token string">'man'</span>     <span class="token punctuation">&#125;</span>     <span class="token keyword">function</span> <span class="token function">deepCopy</span><span class="token punctuation">(</span><span class="token parameter">newObj<span class="token punctuation">,</span>oldObj</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> k <span class="token keyword">in</span> oldObj<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>             newObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> oldObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span>         <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span>     <span class="token function">deepCopy</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span>obj<span class="token punctuation">)</span>     o<span class="token punctuation">.</span>gender<span class="token operator">=</span><span class="token string">'woman'</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当利用函数，通过对象遍历来赋值，还是浅拷贝。</p><p>如果对象中还有复杂数据类型，还是无法深拷贝，怎么办呢？我们需要通过一些手段判断是复杂数据类型还是简单数据类型，简单的直接放行，复杂的继续遍历。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>     uname<span class="token operator">:</span> <span class="token string">'pink'</span><span class="token punctuation">,</span>     age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>     hobby<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'乒乓球'</span><span class="token punctuation">,</span> <span class="token string">'足球'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>     family<span class="token operator">:</span> <span class="token punctuation">&#123;</span>       baby<span class="token operator">:</span> <span class="token string">'小pink'</span>     <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">const</span> o <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>   <span class="token comment">// 拷贝函数</span>   <span class="token keyword">function</span> <span class="token function">deepCopy</span><span class="token punctuation">(</span><span class="token parameter">newObj<span class="token punctuation">,</span> oldObj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">debugger</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> k <span class="token keyword">in</span> oldObj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token comment">// 处理数组的问题  一定先写数组 在写 对象 不能颠倒</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>oldObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         newObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>         <span class="token comment">//  newObj[k] 接收 []  hobby</span>         <span class="token comment">//  oldObj[k]   ['乒乓球', '足球']</span>         <span class="token function">deepCopy</span><span class="token punctuation">(</span>newObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> oldObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span>       <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         newObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>         <span class="token function">deepCopy</span><span class="token punctuation">(</span>newObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> oldObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span>       <span class="token punctuation">&#125;</span>       <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>         <span class="token comment">//  k  属性名 uname age    oldObj[k]  属性值  18</span>         <span class="token comment">// newObj[k]  === o.uname  给新对象添加属性</span>         newObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> oldObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span>       <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>   <span class="token function">deepCopy</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> obj<span class="token punctuation">)</span> <span class="token comment">// 函数调用  两个参数 o 新对象  obj 旧对象</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>   o<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">20</span>   o<span class="token punctuation">.</span>hobby<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'篮球'</span>   o<span class="token punctuation">.</span>family<span class="token punctuation">.</span>baby <span class="token operator">=</span> <span class="token string">'老pink'</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span>   <span class="token comment">// 复习</span>   <span class="token comment">// const obj = &#123;</span>   <span class="token comment">//   uname: 'pink',</span>   <span class="token comment">//   age: 18,</span>   <span class="token comment">//   hobby: ['乒乓球', '足球']</span>   <span class="token comment">// &#125;</span>   <span class="token comment">// function deepCopy(&#123; &#125;, oldObj) &#123;</span>   <span class="token comment">//   // k 属性名  oldObj[k] 属性值</span>   <span class="token comment">//   for (let k in oldObj) &#123;</span>   <span class="token comment">//     // 处理数组的问题   k 变量</span>   <span class="token comment">//     newObj[k] = oldObj[k]</span>   <span class="token comment">//     // o.uname = 'pink'</span>   <span class="token comment">//     // newObj.k  = 'pink'</span>   <span class="token comment">//   &#125;</span>   <span class="token comment">// &#125;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1-使用递归函数</p><p>2-当普通数据拷贝直接放行，如果遇到复杂数据类型如对象和数组，则再次调用此函数</p><p>3-判断是否是复杂类型的条件时候，必须先写数组再写对象，因为数组也是对象，需要先把数组筛选出去。</p><p><strong>利用lodash实现深拷贝</strong></p><p>lodash是一个人名，是这个人写的一个js库，里面的cloneDeep方法实现了深拷贝。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 先引用 <span class="token operator">--</span><span class="token operator">></span>  <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"./lodash.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>  <span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      uname<span class="token operator">:</span> <span class="token string">'pink'</span><span class="token punctuation">,</span>      age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>      hobby<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'乒乓球'</span><span class="token punctuation">,</span> <span class="token string">'足球'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      family<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        baby<span class="token operator">:</span> <span class="token string">'小pink'</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> o <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>    o<span class="token punctuation">.</span>family<span class="token punctuation">.</span>baby <span class="token operator">=</span> <span class="token string">'老pink'</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意 _.cloneDeep(obj)，前面有一个下划线</p><p><strong>利用json实现深拷贝</strong></p><p>上面的lodash库的cloneDeep其实就是帮助我们封装了一个完善的递归函数实现深拷贝的方法，很实用，但是我还得引入一个js库，也有些麻烦。</p><p>通过json的两个方法，我们可以直接实现深拷贝，先用json.stringify(obj)把对象转换为字符，再通过json.parse(字符串)，把字符串转化为对象即可。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    uname<span class="token operator">:</span> <span class="token string">'pink'</span><span class="token punctuation">,</span>    age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>    hobby<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'乒乓球'</span><span class="token punctuation">,</span> <span class="token string">'足球'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    family<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      baby<span class="token operator">:</span> <span class="token string">'小pink'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 把对象转换为 JSON 字符串</span>  <span class="token comment">// console.log(JSON.stringify(obj))</span>  <span class="token keyword">const</span> o <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>  o<span class="token punctuation">.</span>family<span class="token punctuation">.</span>baby <span class="token operator">=</span> <span class="token string">'123'</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><p>异常处理是指预估在代码执行过程中可能发生的错误，然后最大程度避免错误的发生导致整个程序无法继续运行。</p><h3 id="throw抛出异常"><a href="#throw抛出异常" class="headerlink" title="throw抛出异常"></a>throw抛出异常</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/876.png" alt="876"></p><p>这里需要自己判断哪里会出错，设置出错条件，然后自己抛出异常，从而提示自己。如上的没有传递进参数就是一个错误。</p><p>抛出错误后，程序会中断</p><h3 id="try-catch捕获异常"><a href="#try-catch捕获异常" class="headerlink" title="try/catch捕获异常"></a>try/catch捕获异常</h3><p>1-try/catch是捕获浏览器中发现的错误信息，如果 发现错误则执行catch中的代码（一般catch中代码会写return中断函数，因为发生了错误再运行下去可能发生更多错误），没有错误就继续运行。</p><p>2-finally中的代码不管有没有发生错误都会执行。</p><p>3-catch(error)中有一个参数error，它随便你命名，里面包含了错误的信息，一般我们会在catch中打印出error.message</p><p>4-try中写可能发生错误的代码</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/877.png" alt="877"></p><h3 id="debugger"><a href="#debugger" class="headerlink" title="debugger"></a>debugger</h3><p>1-debugger是程序员在调试代码的时候用到，当我们在代码中写一个debugger，在f12控制台中调试代码的时候，就会自动跳转到这里，不再需要我们自己设置断点。</p><p>2-debugger只是方便跳转到需要调试的代码断点处，并不会中断代码执行。</p><h2 id="this处理"><a href="#this处理" class="headerlink" title="this处理"></a>this处理</h2><h3 id="this指向"><a href="#this指向" class="headerlink" title="this指向"></a>this指向</h3><p><strong>普通函数this指向</strong></p><p>1-谁调用了这个函数，this就指向谁</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>   <span class="token comment">// 普通函数：  谁调用我，this就指向谁</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>  <span class="token comment">// window </span>   <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>  <span class="token comment">// window  因为当我们写fn()实际上完整写法是window.fn()</span>   <span class="token punctuation">&#125;</span>   window<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">// window 因为当我们写setTimeout(回调函数,时间)实际上完整写法是                                 window.setTimeout(回调函数,时间)</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>   document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>  <span class="token comment">// 指向 button，因为是button调用了这个函数</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>     <span class="token function-variable function">sayHi</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>  <span class="token comment">// 指向 obj 因为是obj.sayHi()，是 obj调用了这个函数</span>     <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>   obj<span class="token punctuation">.</span><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2-如果写了’use srtict‘在严格模式下，我们写fn()，则会被认为没有调用者，输出undefined</p><p>只有我们写window.fn()，才会获取到window</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/878.png" alt="878"></p><p><strong>箭头函数的指向</strong></p><p>箭头函数本身是没有this的，会通过外层作用域一层一层的查找有this定义来给自己。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/879.png" alt="879"></p><p>1-在监听事件中，不建议写箭头函数，如上如果用了箭头函数，那么这个事件执行程序就不能再用this了，因为这个thi是外一层的this，也就是window、</p><p>2-<strong>构造函数和原型对象的this都指向它们的实例</strong></p><p>构造函数和原型对象中一般也不用箭头函数 </p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/880.png" alt="880"></p><p>如上在原型对象中，我添加了严格walk方法，但是我需要在方法内写代码用this指向实例p1的</p><p>如果你用了箭头函数，那么this指向window，就不能再使用this操作实例p1了</p><h3 id="this改变"><a href="#this改变" class="headerlink" title="this改变"></a>this改变</h3><p>this的指向是可以改变的</p><p><strong>call方法</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/881.png" alt="881"></p><p>  <script><br>    const obj = {<br>      uname: 'pink'<br>    }<br>    function fn(x, y) {<br>      console.log(this)<br>      console.log(x + y)<br>    }<br>    // 1. 调用函数  <br>    // 2. 改变 this 指向<br>    fn.call(obj, 1, 2)  //本来指向window，现在就会指向obj<br>  </script></p><p>call方法不常用，了解即可，它的第一个参数可以指定this值，剩余的参数就是正常的给函数传参的作用。</p><p><strong>apply方法</strong></p><p>apply的第二个参数必须是数组，但是传入函数接的时候，还是一个一个数字接。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/882.png" alt="882"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    age<span class="token operator">:</span> <span class="token number">18</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">// &#123;age: 18&#125;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x <span class="token operator">+</span> y<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 1. 调用函数</span>  <span class="token comment">// 2. 改变this指向 </span>  <span class="token comment">//  fn.apply(this指向谁, 数组参数)</span>  <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">// 3. 返回值   本身就是在调用函数，所以返回值就是函数的返回值</span>  <span class="token comment">// 使用场景： 求数组最大值</span>  <span class="token comment">// const max = Math.max(1, 2, 3)</span>  <span class="token comment">// console.log(max)</span>  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">]</span>  <span class="token keyword">const</span> max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token comment">//虽然传的是数组里面有多个值，不是说接还是一个一个接收，为什么这里能全部接收到去判断谁最大？ 因为max底层是有循环的，不需要我们管。</span>  <span class="token keyword">const</span> min <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span> <span class="token comment">//你不想指向就写null，但不能不写</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> min<span class="token punctuation">)</span>  <span class="token comment">// 使用场景： 求数组最大值</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>求数组最大值，可以用for循环去比较，也可以用展开运算符就是那三个点，也可以用今天学的apply</p><p><strong>bind方法与应用</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/883.png" alt="883"></p><p>bind的参数传递和call一样，但是bind不会调用函数，只改变this指向</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    age<span class="token operator">:</span> <span class="token number">18</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 1. bind 不会调用函数 </span>  <span class="token comment">// 2. 能改变this指向</span>  <span class="token comment">// 3. 返回值是个函数，  但是这个函数里面的this是更改过的obj</span>  <span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>  <span class="token comment">// console.log(fun) </span>  <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>call和apply会调用函数，所以返回的就是函数体内设置的返回，但是bind不会调用函数，返回的是用一个原函数拷贝的新函数（新函数的this会改变成我们设置的）</p><p><strong>bind的应用</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 需求，有一个按钮，点击里面就禁用，2秒钟之后开启</span>   document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token comment">// 禁用按钮</span>     <span class="token keyword">this</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">true</span>     window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token comment">// 在这个普通函数里面，我们要this由原来的window 改为 btn</span>       <span class="token keyword">this</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>   <span class="token comment">// 这里的this 和 btn 一样</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/884.png" alt="884"></p><h2 id="节流"><a href="#节流" class="headerlink" title="节流"></a>节流</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/885.png" alt="885"></p><p>throttle掐死，勒死，节流阀。</p><p><strong>什么叫节流，就是在一定事件内，不管触发多少次事件，都只执行一次执行函数。</strong></p><p>如上的轮播图手动鼠标切换，如果没有节流，我们一秒钟点个七八次，轮播图直接乱了停不下来</p><p>但是如果加了节流，在1s内只能触发一次，那么在这1s内无论点多少次，也只切换一张图</p><p><strong>那么怎么写节流呢？</strong></p><p>其实就是把执行函数换成了一个节流函数，这个函数里面添加了条件来判断，如果时间到了才运行原来的执行函数。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"box"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">const</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span>  <span class="token comment">// 让这个变量++</span>    <span class="token comment">// 鼠标移动函数</span>    <span class="token keyword">function</span> <span class="token function">mouseMove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      box<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token operator">++</span>i      <span class="token comment">// 如果里面存在大量操作 dom 的情况，可能会卡顿</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// console.log(mouseMove)</span>    <span class="token comment">// 节流函数 throttle </span>       <span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 起始时间</span>      <span class="token keyword">let</span> startTime <span class="token operator">=</span> <span class="token number">0</span>      <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 得到当前的时间,这是时间戳</span>        <span class="token keyword">let</span> now <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">// 判断如果大于等于 500 采取调用函数</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> startTime <span class="token operator">>=</span> t<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 调用函数</span>          <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>           <span class="token comment">// 起始的时间 = 现在的时间   为了精准度，写在调用函数的下面 </span>          startTime <span class="token operator">=</span> now        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    box<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span> <span class="token function">throttle</span><span class="token punctuation">(</span>mouseMove<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// throttle(mouseMove, 500) === function () &#123; console.log(1) &#125;</span>    <span class="token comment">// box.addEventListener('mousemove', function () &#123;</span>    <span class="token comment">//   // 得到当前的时间</span>    <span class="token comment">//   let now = Date.now()</span>    <span class="token comment">//   // 判断如果大于等于 500 采取调用函数</span>    <span class="token comment">//   if (now - startTime >= t) &#123;</span>    <span class="token comment">//     // 调用函数</span>    <span class="token comment">//     fn()</span>    <span class="token comment">//     // 起始的时间 = 现在的时间   写在调用函数的下面</span>    <span class="token comment">//     startTime = now</span>    <span class="token comment">//   &#125;</span>    <span class="token comment">// &#125;)</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>原先我有一个疑问，每次触发，代码中不是都将   let startTime = 0了嘛？岂不是每次都能符合条件触发？</p><p>1-这里运用到了闭包，因为内存泄漏，所以startTime是不会被回收的，所以startTome会被赋值为now</p><p>2-你不会被回收就不会，我不是每次都赋值为0了？这里是闭包，事件执行函数并不是throttle(),而是里面的内函数，也就是那个return后的函数。（事件触发后，throttle(mouseMove, 500)会立即执行一次，然后得到闭包中的return后的函数体作为返回值，然后执行这个函数体）</p><blockquote><p>  // throttle(mouseMove, 500) === function () { 代码 }</p></blockquote><h2 id="防抖debounce"><a href="#防抖debounce" class="headerlink" title="防抖debounce"></a>防抖debounce</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/886.png" alt="886"></p><p>防抖和节流差不多，差别就是比如设置500ms，如果我一直触发这个事件，那么节流会在500ms后再次执行函数</p><p>防抖的话，因为如果中n s内又触发事件，会重新计算函数执行事件，当一直触发这个事件，就永远不会再触发。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"box"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">const</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span>  <span class="token comment">// 让这个变量++</span>    <span class="token comment">// 鼠标移动函数</span>    <span class="token keyword">function</span> <span class="token function">mouseMove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      box<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token operator">++</span>i      <span class="token comment">// 如果里面存在大量操作 dom 的情况，可能会卡顿</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 防抖函数</span>    <span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> timeId      <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 如果有定时器就清除</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>timeId<span class="token punctuation">)</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeId<span class="token punctuation">)</span>        <span class="token comment">// 开启定时器 200</span>        timeId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// box.addEventListener('mousemove', mouseMove)</span>    box<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span> <span class="token function">debounce</span><span class="token punctuation">(</span>mouseMove<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个是案例黑马给的代码，使用定时器，事件触发判断有定时器就清除定时器，重新设置一个，没有定时器的话就再设置一个，定时器的回调函数就是mouseMove()</p><p><strong>问题</strong></p><p>我寻思直接在节流的上面加上一行代码</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 得到当前的时间,这是时间戳</span>      <span class="token keyword">let</span> now <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment">// 判断如果大于等于 500 采取调用函数</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> startTime <span class="token operator">>=</span> t<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 调用函数</span>        <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token comment">// 起始的时间 = 现在的时间   为了精准度，写在调用函数的下面 </span>        startTime <span class="token operator">=</span> now      <span class="token punctuation">&#125;</span>     startTime <span class="token operator">=</span> now<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上，让条件不成立的时候，也把now赋予startTime，那么时间就重新计算不就完了。</p><p><strong>我的方法和黑马方法的区别</strong></p><p>黑马定时器的方法是触发事件后，指定时间内不再触发时间，再执行函数</p><p>我的方法是触发事件立即执行一次，指定时间内不再触发，再触发事件才会再执行函数</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/887.png" alt="887"></p><p>如上防抖一般使用场景是搜索框输入，肯定是触发事件后一段时间再发送请求，而不是用户刚打一个字母就里面请求，所以黑马的定时器方法 防抖更好，大家公认的也是这种。</p><p><strong>lodash防抖节流</strong></p><p>lodash是一个js库，里面提供了节流防抖方法</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>   <span class="token keyword">const</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span>   <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span>  <span class="token comment">// 让这个变量++</span>   <span class="token comment">// 鼠标移动函数</span>   <span class="token keyword">function</span> <span class="token function">mouseMove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     box<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token operator">++</span>i     <span class="token comment">// 如果里面存在大量操作 dom 的情况，可能会卡顿</span>   <span class="token punctuation">&#125;</span>   <span class="token comment">// box.addEventListener('mousemove', mouseMove)</span>   <span class="token comment">// lodash 节流写法</span>   <span class="token comment">// box.addEventListener('mousemove', _.throttle(mouseMove, 500))</span>   <span class="token comment">// lodash 防抖的写法</span>   box<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span> _<span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span>mouseMove<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>节流综合案例</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/888.png" alt="888"></p><p>当我们看视频到一个时间，如果刷新页面就会从头播放，怎么记录原先播放的时间点呢？</p><p>两个事件</p><p> ontimeupdate时间变化 ，当前视频播放位置发生改变时触发，触发较快，一秒钟好几次</p><p>onloadeddata数据加载因为视频比较特殊，还是用老的on来监听事件，而不是addEventListener </p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/889.png" alt="889"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"header"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"http://pip.itcast.cn"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"https://pip.itcast.cn/img/logo_v3.29b9ba72.png"</span> alt<span class="token operator">=</span><span class="token string">""</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"video"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>video src<span class="token operator">=</span><span class="token string">"https://v.itheima.net/LapADhV6.mp4"</span> controls<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>video<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"elevator"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span> data<span class="token operator">-</span>ref<span class="token operator">=</span><span class="token string">"video"</span><span class="token operator">></span>视频介绍<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>      <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span> data<span class="token operator">-</span>ref<span class="token operator">=</span><span class="token string">"intro"</span><span class="token operator">></span>课程简介<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>      <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span> data<span class="token operator">-</span>ref<span class="token operator">=</span><span class="token string">"outline"</span><span class="token operator">></span>评论列表<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>  <span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token comment">// 1. 获取元素  要对视频进行操作</span>     <span class="token keyword">const</span> video <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'video'</span><span class="token punctuation">)</span>    video<span class="token punctuation">.</span>ontimeupdate <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">throttle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// console.log(video.currentTime) 获得当前的视频时间</span>      <span class="token comment">// 把当前的时间存储到本地存储</span>      localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'currentTime'</span><span class="token punctuation">,</span> video<span class="token punctuation">.</span>currentTime<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>    <span class="token comment">// 打开页面触发事件，就从本地存储里面取出记录的时间， 赋值给  video.currentTime</span>    video<span class="token punctuation">.</span><span class="token function-variable function">onloadeddata</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// console.log(111)</span>      video<span class="token punctuation">.</span>currentTime <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'currentTime'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span>    <span class="token punctuation">&#125;</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>video.currentTime可以设置视频当前播放时间。</p><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><p>1.下列选项中关于深浅拷贝说法错误的是？ （d） 分值1分</p><p><em></em>A：直接赋值对象的方法，只要是对象，都会相互影响，因为是直接拷贝对象栈里面的地址</p><p><em></em>B：浅拷贝时，对象属性值是简单数据类型直接拷贝值，如果属性值是引用数据类型则拷贝的是地址</p><p><em></em>C：深拷贝拷贝的是对象，不是地址，所以不会相互影响了</p><p><em></em>D：我们可以采取函数递归的方式完成浅拷贝</p><p>回答正确+1分</p><p><strong>答案解析：</strong></p><p>递归函数可以实现深拷贝</p><p>2.下列选项中关于函数递归说法错误的是？ （c） 分值1分</p><p><em></em>A：如果一个函数在内部可以调用其本身，那么这个函数就是递归函数</p><p><em></em>B：递归函数的作用和循环效果类似，不断的自己调用自己</p><p><em></em>C：由于递归很容易发生“栈溢出”错误(stack overflow)，所以必须要加退出条件 break</p><p><em></em>D：我们可以利用递归函数实现 setTimeout 模拟 setInterval效果</p><p>回答正确+1分</p><p><strong>答案解析：</strong></p><p>退出选择return 退出</p><p>3.下列选项中可以完成深拷贝的是？ （abc） 分值1分</p><p><em></em>A：通过递归函数实现深拷贝</p><p><em></em>B：利用js库lodash里面cloneDeep内部实现了深拷贝</p><p><em></em>C：通过JSON.stringify() 转换字符串，再利用 JSON.parse() 方法转换为对象可以完成深拷贝</p><p><em></em>D：可以采取bind方法完成深拷贝</p><p>回答正确+1分</p><p>4.下列选项中throw抛异常说法错误的是？ （a） 分值1分</p><p><em></em>A：throw 抛出异常信息，但是我们必须加 return 来终止程序的往下执行</p><p><em></em>B： throw 后面跟的是错误提示信息</p><p><em></em>C：Error 对象配合 throw 使用，能够设置更详细的错误信息</p><p><em></em>D：Error 对象配合 throw 控制台显示的提示可以为红色更警示</p><p>回答正确+1分</p><p><strong>答案解析：</strong></p><p>throw 直接中断程序，不需要写return</p><p>5.下列选项中 try/catch捕获错误信息 说法错误的是？ （a） 分值1分</p><p><em></em>A：将预估可能发生错误的代码写在 catch 代码段中</p><p><em></em>B：如果 try 代码段中出现错误后，会执行 catch 代码段，并截获到错误信息</p><p><em></em>C：我们需要给catch 添加 return 可以终止程序继续执行</p><p><em></em>D：finally 不管是否有错误，都会执行</p><p>回答正确+1分</p><p><strong>答案解析：</strong></p><p>预估错误的代码写到 try 里面</p><p>6.下列选项中 关于this指向说法错误的是？ （d） 分值1分</p><p><em></em>A：普通函数this指向我们理解为谁调用 this 的值指向谁</p><p><em></em>B：定时器中的this 指向 window</p><p><em></em>C：箭头函数中的 this 与普通函数完全不同，也不受调用方式的影响，事实上箭头函数中并不存在 this</p><p><em></em>D：箭头函数中没有this， 是沿用 window，简单说，箭头函数的this 指向window</p><p>回答正确+1分</p><p><strong>答案解析：</strong></p><p>箭头函数没有this，但是是从上一级作用域里面找，以此类推</p><p>7.下列选项中 可以改变this指向的方法是？ （abc） 分值1分</p><p><em></em>A：call()</p><p><em></em>B：bind()</p><p><em></em>C：apply()</p><p><em></em>D：catch()</p><p>回答正确+1分</p><p>8.下列选项中说法错误的是？ （d） 分值1分</p><p><em></em>A：call 和 apply 会调用函数, 并且改变函数内部this指向</p><p><em></em>B：bind 不会调用函数, 可以改变函数内部this指向，它也是主要用来改变this指向的</p><p><em></em>C：call 和 apply 传递的参数不一样, call 传递参数 aru1, aru2..形式 apply 必须数组形式[arg]</p><p><em></em>D： apply 主要使用场景是可以改变定时器的this指向，并且不调用函数</p><p>回答正确+1分</p><p><strong>答案解析：</strong></p><p>apply 会调用函数</p><p>9.下列选项中关于节流和防抖说法正确的是？ （a bcd） 分值1分</p><p><em></em>A：节流: 就是指连续触发事件但是在 n 秒中只执行一次函数,比如可以利用节流实现 1s之内只能触发一次鼠标移动事件</p><p><em></em>B：防抖：如果在 n 秒内又触发了事件，则会重新计算函数执行时间</p><p><em></em>C：节流应用场景: 鼠标移动，页面尺寸发生变化，滚动条滚动等开销比较大的情况下</p><p><em></em>D：防抖应用场景：搜索框输入</p><p>回答正确+1分</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript高级_01day</title>
      <link href="archives/1c89bc8f.html"/>
      <url>archives/1c89bc8f.html</url>
      
        <content type="html"><![CDATA[<h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>js也是面向对象的语言。</p><p>这里的js高级就是es6+，包含了es6以上的语法。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/801.png" alt="801"></p><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p>作用域被分为全局作用域和局部作用域，局部作用域包含函数作用域和块级作用域。</p><h3 id="局部作用域"><a href="#局部作用域" class="headerlink" title="局部作用域"></a>局部作用域</h3><p><strong>函数作用域</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/802.png" alt="802"></p><p>1-函数的参数也是函数内部的一个局部变量</p><p>2-函数执行完毕，里面的变量实际被清空了。</p><p>3-var：函数作用域；存在变量提升；可重复定义；在最外层声明的变量作为window的属性。（在函数内声明的，捕获作为window的属性）</p><p><strong>块级作用域</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/803.png" alt="803"></p><p>1-var声明的变量，不存在块级作用域，也就是说在块级{}比如for和if里面用var声明变量，外面也是可用访问到的。</p><h3 id="全局作用域"><a href="#全局作用域" class="headerlink" title="全局作用域"></a>全局作用域</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/804.png" alt="804"></p><p>1-不声明的变量，会被视为全局变量</p><p>2-写在最外层的是全局变量，当有两个script标签，其实也可以访问到，如下代码，是可用正常输出i的</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> i <span class="token operator">=</span><span class="token number">1</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/805.png" alt="805"></p><p>1-很简单就是一个就近原则，从使用的地方，逐步向外查找声明，先找到谁声明了就是什么作用域，上图a的作用域就是f()中的函数作用域。</p><p>2-作用域链就是一种变量查找机制。</p><h3 id="js垃圾回收机制"><a href="#js垃圾回收机制" class="headerlink" title="js垃圾回收机制"></a>js垃圾回收机制</h3><p>垃圾回收机制是了解这种回收机制的执行过程，为闭包做铺垫。</p><h4 id="什么是垃圾回收机制"><a href="#什么是垃圾回收机制" class="headerlink" title="什么是垃圾回收机制"></a>什么是垃圾回收机制</h4><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/806.png" alt="806"></p><p>内存泄漏不是说一些东西泄露出来了。而是内存垃圾没有及时得到释放。</p><h4 id="内存的生命周期"><a href="#内存的生命周期" class="headerlink" title="内存的生命周期"></a>内存的生命周期</h4><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/807.png" alt="807"></p><p>分配—–使用——回收</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">for (let i = 1; i &lt;= 3; i++) &#123;   &#125;   let num = 10   function fn() &#123;     const str = 'andy'     console.log(str)   &#125;   fn()   fn()   fn() <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上我调用三次fn()，不就声明了三次str吗？为什么不冲突？</p><p>其实第一次str用完后，这个局部变量就被<strong>垃圾回收器自动回收</strong>了，第二次调用的时候，第一个已经没了，</p><h4 id="垃圾回收的算法说明"><a href="#垃圾回收的算法说明" class="headerlink" title="垃圾回收的算法说明"></a>垃圾回收的算法说明</h4><p><strong>引用计数法</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/808.png" alt="808"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/809.png" alt="809"></p><p>如图当有两个指向堆，那么就有两个应用，当person=1；p=null后，就没有指向了，那么引用为0，就会回收。</p><p>当嵌套引用时，会内存泄漏</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/810.png" alt="810"></p><p>如上，当这个函数执行完毕后，o1和o2因为是局部变量会被回收，但是内部堆里面的两个指向引用都为1，则不会被回收，导致内存泄漏。</p><p><strong>标记清除法</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/811.png" alt="811"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/812.png" alt="812"></p><p>先扫描内存中的对象，然后从根部global（就是全局对象一般为window）出发寻找，找到的的就有用，找不到的就说明无用了，清除掉。</p><blockquote><p>还是那个对象的相互嵌套引用，但是当函数执行完毕后，o1和o2已经被回收掉了，虽然里面还有嵌套，但是已经无法从根部访问到它们，所以会被标记清除，就不会再内存泄漏了。</p></blockquote><h3 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/813.png" alt="813"></p><p>简单来说闭包就是，一个外函数包含了一个内函数，内函数还使用了外函数的变量。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/814.png" alt="814"></p><p>我们可以看到，闭包被叫做closure闭合的，local是局部的，global是全局的。</p><blockquote><p>误区：闭包并不是这个外函数outer，而是由内函数和外函数的变量组成。</p></blockquote><p><strong>闭包就是能够读取其他函数内部变量的私有变量</strong></p><p><strong>搞个闭包的概念是吃饱了撑着？它有什么作用？</strong></p><p>闭包能让外部访问到函数内部的变量。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"> // 简单的写法// function outer() &#123;//   let a = 10//   function fn() &#123;//     console.log(a)//   &#125;//   fn()// &#125;// outer()// 常见的闭包的形式   外部可以访问使用 函数内部的变量// function outer() &#123;//   let a = 100//   function fn() &#123;//     console.log(a)//   &#125;//   return fn// &#125;// outer()   ===  fn   ===  function fn() &#123;&#125;// const fun = function fn() &#123; &#125;// // 常见的写法2// function outer() &#123;//   let a = 100//   return function () &#123;//     console.log(a)//   &#125;// &#125;// const fun = outer()// fun() // 调用函数// 常见的写法3// function outer() &#123;//   let a = 100//   return function () &#123;//     return a//   &#125;// &#125;// // console.log(outer())// const fun1 = outer()// // 调用函数// console.log(fun1())<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上，其实就是重新调用了一次内函数，实现了使用外函数的变量。</p><p><strong>问题</strong></p><p>如果闭包就是能够读取其他函数内部变量的变量值，那么为什么不直接return变量?如下</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">function f1()&#123;    var n=123;    return n;&#125;x=f1();alert(x);  ///123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为这里拿到的是一个值，而闭包还有很多功能</p><ol><li>直接 return 返回的是变量值，闭包返回的是执行环境；</li><li>闭包不是为了让函数外部拿到内部变量。<strong>而是为了得到的私有变量不被随意修改</strong>；</li><li>return 出来的是一个值，不是变量本身，此处的 return 是取得私有变量值的一种方法，跟闭包没有严格关系；</li><li>闭包作为一个可以访问函数内部变量的函数，更多的是可以在其中添加其他的条件，过滤无效的值。如果直接return 变量，然后赋值的话，还要在后续去判断这个值的有效性。</li></ol><p>参考链接<a href="https://segmentfault.com/q/1010000006178363">https://segmentfault.com/q/1010000006178363</a></p><p>所以如果直接返回拿到的只是一个值，不是私有变量；而闭包是通过重新访问内函数，达到访问外函数私有变量的效果，然后添加其他条件，过滤无效的值，如果直接返回变量值，那么无法判断这个值的合法性。</p><p><strong>闭包的应用，统计函数调用的次数</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/815.png" alt="815"></p><p>如上，如果直接这样写，这个count是全局变量，就容易会被篡改</p><p>就像上面提到的直接返回return变量，它得到的只是一个值赋予一个变量，如果我们是去利用这个变量去做一个统计，那么它是可以被随意修改的，但是使用闭包的方法，就不会被随意篡改。</p><p><strong>闭包可能引起的问题</strong></p><p>闭包可能会引起内存泄漏，因为当那个私有变量不需要再被使用，但是如上result—-fn—fun—count，这个count是能被根部找到的，所以标记清除法和引用计数法的回收机制，都无法回收这个count，则导致了内存泄漏。</p><h3 id="变量提升"><a href="#变量提升" class="headerlink" title="变量提升"></a>变量提升</h3><p>1-变量提示只有var定义的变量才会有，let和const是没有的，它的机制是在代码执行前，先去查找<strong>当前</strong>作用域下所有的var声明的变量，然后提升到<strong>当前</strong>作用域的最前面。</p><p>2-<strong>只提升声明，不提升赋值</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">console.log(num + '件')var num = 10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>上面这段代码打印的是undefined件，而不是10件</p><p>因为它等同于下面代码，只提升了声明，但不提升赋值。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">var numconsole.log(num + '件')num = 10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>误区：</strong></p><p>我以前的理解是var会直接提升到所有代码的最上面，自然以为它变成了全局作用域，其实它只能提升到当前作用域，在一个函数中使用var，也只是把声明提升到函数所有代码的最上面，不会提升到函数外面。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>         <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">10</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>等于</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">var</span> num         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>         num <span class="token operator">=</span> <span class="token number">10</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="函数进阶"><a href="#函数进阶" class="headerlink" title="函数进阶"></a>函数进阶</h2><h3 id="函数提升"><a href="#函数提升" class="headerlink" title="函数提升"></a>函数提升</h3><p>函数提升即，函数其实在声明之前就可以被调用。如下</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'函数提升'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码是可以正常打印的，但是我在声明前就使用了它</p><p><strong>执行机制</strong></p><p>只提示函数声明，不提升函数调用，把函数声明提升到当前作用域的最前面。</p><p><strong>函数表达式必须先声明后调用</strong>如下这一段代码会报错</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/816.png" alt="816"></p><p>因为这种函数表达式的声明方法，就没有函数提升，它是一种变量赋值，有变量提升，var fun会被提升到当前作用域最前面，但是后面的赋值（function的内容），是不提升的，自然无法运行。</p><h3 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h3><p>函数参数有三种，默认参数，动态参数，剩余参数。</p><h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h3><p><strong>动态参数</strong></p><p>动态参数，简而言之就是当不知道用户要传递多少个参数进来，如需求:不管用户传递多少个值，都要累加，这种情况下我们就无法写参数来接收，只能通过动态参数，通过动态参数arguments这个函数内部伪数组变量来实现。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">function</span> <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// arguments 动态参数 只存在于 函数里面</span>    <span class="token comment">// 是伪数组 里面存储的是传递过来的实参</span>    <span class="token comment">// console.log(arguments)  [2,3,4]</span>    <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      sum <span class="token operator">+=</span> arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>  <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意这个argument只在当前函数内有效，在外面使用打印是打印不了的</p><p><strong>剩余参数</strong></p><p>剩余参数可以把多余的参数写入一个数组，如下代码</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">function</span> <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token operator">...</span>arr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>  <span class="token comment">// 使用的时候不需要写 ...</span>  <span class="token punctuation">&#125;</span>  <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中a，b是变量，当用户传递过来的参数超过两个，则把多余的写入到arr数组中（arr这个名字自己随便设置，这个数组只能在当前函数使用）</p><p>注意：arr数组在使用中，不需要加…</p><p><strong>剩余参数和动态参数的区别</strong></p><p>1-它们都能实现多个不确定参数的传入使用</p><p>2-动态参数使用的是argument伪数组，剩余参数是自己设置的数组名称，它是真数组</p><p>3-开发中建议使用剩余参数，因为箭头函数中没有argument。</p><h3 id="展开运算符"><a href="#展开运算符" class="headerlink" title="展开运算符"></a>展开运算符</h3><p>在函数参数里面的…是剩余参数，在数组中使用的叫展开运算符。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/817.png" alt="817"></p><p>如上，它可以把数组展开，那有什么用呢？</p><p>1-平时我们判断数组里的值的最大值和最小值，是写一个for循环去慢慢判断，当有了展开运算符，我们就可以把这个数组展开当做多个数字去使用Math对象提供的方法如max()和min()去判断。</p><p>2-我们还可以合并数组，把两个数组展开，然后按照正常赋值给一个数组。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>    <span class="token comment">// 展开运算符 可以展开数组</span>    <span class="token comment">// console.log(...arr)</span>    <span class="token comment">// console.log(Math.max(1, 2, 3))</span>    <span class="token comment">// ...arr1  === 1,2,3</span>    <span class="token comment">// 1 求数组最大值</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>arr1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>arr1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>    <span class="token comment">// 2. 合并数组</span>    <span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>    <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span> <span class="token operator">...</span>arr2<span class="token punctuation">]</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="箭头函数-1"><a href="#箭头函数-1" class="headerlink" title="箭头函数"></a>箭头函数</h2><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><p>箭头函数属于表达式函数，没有函数提升。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/818.png" alt="818"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">//  1-原函数表达式</span>    <span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'原函数表达式'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 2-箭头函数</span>    <span class="token keyword">const</span> <span class="token function-variable function">fn1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'箭头函数'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 3-箭头函数当只有一个参数的时候，小括号可以省略，注意没有参数的话要写小括号</span>    <span class="token keyword">const</span> <span class="token function-variable function">fn2</span> <span class="token operator">=</span> <span class="token parameter">x</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment">//4-只有一行代码可以省略大括号</span>    <span class="token keyword">const</span> <span class="token function-variable function">fn3</span> <span class="token operator">=</span> <span class="token parameter">x</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token function">fn3</span><span class="token punctuation">(</span><span class="token string">'只有一行代码可以省略大括号'</span><span class="token punctuation">)</span>    <span class="token comment">//5-当只有一行return代码可以写成</span>    <span class="token keyword">const</span> <span class="token function-variable function">fn4</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=></span> x <span class="token operator">+</span> y    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fn4</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/819.png" alt="819"></p><p>以前的去除实际默认事件就有箭头函数的写法，比普通写法简洁很多。</p><p>6-箭头函数还可以直接返回对象</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/820.png" alt="820"></p><p>因为对象是大括号，函数体也是大括号，所以把函数体的大括号换成了小括号</p><h3 id="箭头函数参数"><a href="#箭头函数参数" class="headerlink" title="箭头函数参数"></a>箭头函数参数</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/821.png" alt="821"></p><h3 id="箭头函数this"><a href="#箭头函数this" class="headerlink" title="箭头函数this"></a>箭头函数this</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/822.png" alt="822"></p><p>箭头函数的this不是以前的谁调用就指向 谁，箭头函数没有自己的this，会沿用作用域链上一层的this</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token comment">// 以前this的指向：  谁调用的这个函数，this 就指向谁</span>    <span class="token comment">// console.log(this)  // window</span>    <span class="token comment">// // 普通函数</span>    <span class="token comment">// function fn() &#123;</span>    <span class="token comment">//   console.log(this)  // window</span>    <span class="token comment">// &#125;</span>    <span class="token comment">// window.fn()</span>    <span class="token comment">// // 对象方法里面的this</span>    <span class="token comment">// const obj = &#123;</span>    <span class="token comment">//   name: 'andy',</span>    <span class="token comment">//   sayHi: function () &#123;</span>    <span class="token comment">//     console.log(this)  // obj</span>    <span class="token comment">//   &#125;</span>    <span class="token comment">// &#125;</span>    <span class="token comment">// obj.sayHi()</span>    <span class="token comment">// 2. 箭头函数的this  是上一层作用域的this 指向</span>    <span class="token comment">// const fn = () => &#123;</span>    <span class="token comment">//   console.log(this)  // window</span>    <span class="token comment">// &#125;</span>    <span class="token comment">// fn()</span>    <span class="token comment">// 对象方法箭头函数 this</span>    <span class="token comment">// const obj = &#123;</span>    <span class="token comment">//   uname: 'pink老师',</span>    <span class="token comment">//   sayHi: () => &#123;</span>    <span class="token comment">//     console.log(this)  // this 指向谁？ window,它沿用了上一层的this</span>    <span class="token comment">//   &#125;</span>    <span class="token comment">// &#125;</span>    <span class="token comment">// obj.sayHi()</span>    <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      uname<span class="token operator">:</span> <span class="token string">'pink老师'</span><span class="token punctuation">,</span>      <span class="token function-variable function">sayHi</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>  <span class="token comment">// obj</span>        <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">10</span>        <span class="token keyword">const</span> <span class="token function-variable function">count</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>  <span class="token comment">// obj  沿用上一层的this</span>        <span class="token punctuation">&#125;</span>        <span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    obj<span class="token punctuation">.</span><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/823.png" alt="823"></p><p>在事件中的匿名函数，还是不建议使用箭头函数。</p><h2 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h2><h3 id="数组解构"><a href="#数组解构" class="headerlink" title="数组解构"></a>数组解构</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/824.png" alt="824"></p><p>它的作用就是批量声明赋值，把数组里面的值赋予给声明的不同的变量</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">   <span class="token comment">// const arr = [100, 60, 80]</span>   <span class="token comment">// 数组解构 赋值</span>   <span class="token comment">// // const [max, min, avg] = arr</span>   <span class="token keyword">const</span> <span class="token punctuation">[</span>max<span class="token punctuation">,</span> min<span class="token punctuation">,</span> avg<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">]</span>   <span class="token comment">// // const max = arr[0]</span>   <span class="token comment">// // const min = arr[1]</span>   <span class="token comment">// // const avg = arr[2]</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span> <span class="token comment">// 100</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>avg<span class="token punctuation">)</span> <span class="token comment">// 80</span>   <span class="token comment">// 交换2个变量的值</span>   <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span>   <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">// 这里必须加上分号</span>   <span class="token punctuation">[</span>b<span class="token punctuation">,</span> a<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token comment">// const pc =['小米','海尔','联想','方正']</span>  <span class="token comment">// const [xm,hr,lx,fz] = ['小米','海尔','联想','方正']</span>  <span class="token comment">// console.log(xm,hr,lx,fz)</span>  <span class="token keyword">function</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">return</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">let</span><span class="token punctuation">[</span>max<span class="token punctuation">,</span>min<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span>min<span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意解构的时候也要加上let或者const，否则变量就会变成未声明的，就会变成全局变量。</p><h3 id="js必须加分号的两种情况"><a href="#js必须加分号的两种情况" class="headerlink" title="js必须加分号的两种情况"></a>js必须加分号的两种情况</h3><p>一种是立即执行函数，一种是数组的直接使用。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>  <span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">'pink'</span><span class="token punctuation">;</span>  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上，如果不加分号，编译器会人为这个[1,2,3]不应该出现在这，会把这一行语句上移，就变成了</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>  <span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">'pink'</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>所以就会报错。</p><p><strong>数组解构细节和问题</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 1. 变量多， 单元值少 ， undefined</span>  <span class="token comment">// const [a, b, c, d] = [1, 2, 3]</span>  <span class="token comment">// console.log(a) // 1</span>  <span class="token comment">// console.log(b) // 2</span>  <span class="token comment">// console.log(c) // 3</span>  <span class="token comment">// console.log(d) // undefined</span>  <span class="token comment">// 2. 变量少， 单元值多</span>  <span class="token comment">// const [a, b] = [1, 2, 3]</span>  <span class="token comment">// console.log(a) // 1</span>  <span class="token comment">// console.log(b) // 2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们也可以用剩余参数来解决数组解构多余单元值的问题。</p><blockquote><p>剩余参数不止是能用于函数，也能用于数组结构</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 3.  剩余参数 变量少， 单元值多</span> <span class="token comment">// const [a, b, ...c] = [1, 2, 3, 4]</span> <span class="token comment">// console.log(a) // 1</span> <span class="token comment">// console.log(b) // 2</span> <span class="token comment">// console.log(c) // [3, 4]  真数组</span> <span class="token comment">// 4.  防止 undefined 传递</span> <span class="token comment">// const [a = 0, b = 0] = [1, 2]</span> <span class="token comment">// const [a = 0, b = 0] = []</span> <span class="token comment">// console.log(a) // 1</span> <span class="token comment">// console.log(b) // 2</span> <span class="token comment">// 5.  按需导入赋值</span> <span class="token comment">// const [a, b, , d] = [1, 2, 3, 4]</span> <span class="token comment">// console.log(a) // 1</span> <span class="token comment">// console.log(b) // 2</span> <span class="token comment">// console.log(d) // 4</span> <span class="token comment">// const arr = [1, 2, [3, 4]]</span> <span class="token comment">// console.log(arr[0])  // 1</span> <span class="token comment">// console.log(arr[1])  // 2</span> <span class="token comment">// console.log(arr[2])  // [3,4]</span> <span class="token comment">// console.log(arr[2][0])  // 3</span> <span class="token comment">// 多维数组解构</span> <span class="token comment">// const arr = [1, 2, [3, 4]]</span> <span class="token comment">// const [a, b, c] = [1, 2, [3, 4]]</span> <span class="token comment">// console.log(a) // 1</span> <span class="token comment">// console.log(b) // 2</span> <span class="token comment">// console.log(c) // [3,4]</span> <span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token punctuation">[</span>c<span class="token punctuation">,</span> d<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// 1</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// 2</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token comment">// 3</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token comment">// 4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="对象解构"><a href="#对象解构" class="headerlink" title="对象解构"></a>对象解构</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/826.png" alt="826"></p><p>注意对象解构的变量必须和属性名相同,它们提供名字来对应上。</p><p>为什么数组解构不用呢？因为数组是有序的，对象是无序的，无序就得用名字来对应</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 对象解构</span>    <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    uname<span class="token operator">:</span> <span class="token string">'pink老师'</span><span class="token punctuation">,</span>      age<span class="token operator">:</span> <span class="token number">18</span>    <span class="token punctuation">&#125;</span>   <span class="token comment">// obj.uname</span>   <span class="token comment">// obj.age </span>   <span class="token comment">// const uname = 'red老师'</span>   <span class="token comment">// 解构的语法</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> uname<span class="token punctuation">,</span> age <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> uname<span class="token operator">:</span> <span class="token string">'pink老师'</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当然这个变量名字也是可以改的，不然如果原先已经声明过了，岂不是这个对象就不能解构了？但是有一定的规则。（旧变量名字:新变量名字）</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> username<span class="token punctuation">,</span> age <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'pink老师'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样如果原先就声明了uname变量，在对象解构的时候就能用username代替</p><p><strong>数组对象的解构</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> pig <span class="token operator">=</span> <span class="token punctuation">[</span>     <span class="token punctuation">&#123;</span>       uname<span class="token operator">:</span> <span class="token string">'佩奇'</span><span class="token punctuation">,</span>       age<span class="token operator">:</span> <span class="token number">6</span>     <span class="token punctuation">&#125;</span>   <span class="token punctuation">]</span>   <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> uname<span class="token punctuation">,</span> age <span class="token punctuation">&#125;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pig   <span class="token comment">// const [&#123; uname &#125;] = pig 你不一定要获取完，你就获取uname也行，那么age就没值 </span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>uname<span class="token punctuation">)</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当数组里面有两个对象，变量名放在不同大括号中，也用逗号隔开，如下图</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">const</span> goods <span class="token operator">=</span><span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>        goodsName<span class="token operator">:</span><span class="token string">'xiaomia'</span><span class="token punctuation">,</span>        price<span class="token operator">:</span><span class="token number">9999</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>        userName<span class="token operator">:</span><span class="token string">'zdq'</span><span class="token punctuation">,</span>          age<span class="token operator">:</span><span class="token number">21</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token keyword">const</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span>goodsName<span class="token punctuation">,</span>price<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>userName<span class="token punctuation">,</span>age<span class="token punctuation">&#125;</span><span class="token punctuation">]</span> <span class="token operator">=</span> goodsconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>goodsName<span class="token punctuation">,</span>price<span class="token punctuation">,</span>userName<span class="token punctuation">,</span>age<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>多级对象解构</strong></p><p>对象包对象</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/827.png" alt="827"></p><p>数组包对象，对象又包对象</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>      name<span class="token operator">:</span> <span class="token string">'佩奇'</span><span class="token punctuation">,</span>      family<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        mother<span class="token operator">:</span> <span class="token string">'猪妈妈'</span><span class="token punctuation">,</span>        father<span class="token operator">:</span> <span class="token string">'猪爸爸'</span><span class="token punctuation">,</span>        sister<span class="token operator">:</span> <span class="token string">'乔治'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      age<span class="token operator">:</span> <span class="token number">6</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span>  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> family<span class="token operator">:</span> <span class="token punctuation">&#123;</span> mother<span class="token punctuation">,</span> father<span class="token punctuation">,</span> sister <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span> <span class="token operator">=</span> person  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mother<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>father<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sister<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>真实案例JSON数据的使用</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token comment">// 1. 这是后台传递过来的数据</span>    <span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token string">"code"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>      <span class="token string">"msg"</span><span class="token operator">:</span> <span class="token string">"获取新闻列表成功"</span><span class="token punctuation">,</span>      <span class="token string">"data"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>          <span class="token string">"id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>          <span class="token string">"title"</span><span class="token operator">:</span> <span class="token string">"5G商用自己，三大运用商收入下降"</span><span class="token punctuation">,</span>          <span class="token string">"count"</span><span class="token operator">:</span> <span class="token number">58</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>          <span class="token string">"id"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>          <span class="token string">"title"</span><span class="token operator">:</span> <span class="token string">"国际媒体头条速览"</span><span class="token punctuation">,</span>          <span class="token string">"count"</span><span class="token operator">:</span> <span class="token number">56</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>          <span class="token string">"id"</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>          <span class="token string">"title"</span><span class="token operator">:</span> <span class="token string">"乌克兰和俄罗斯持续冲突"</span><span class="token punctuation">,</span>          <span class="token string">"count"</span><span class="token operator">:</span> <span class="token number">1669</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 需求1： 请将以上msg对象  采用对象解构的方式 只选出  data 方面后面使用渲染页面</span>    <span class="token comment">// const &#123; data &#125; = msg</span>    <span class="token comment">// console.log(data)</span>    <span class="token comment">// 需求2： 上面msg是后台传递过来的数据，我们需要把data选出当做参数传递给 函数</span>    <span class="token comment">// const &#123; data &#125; = msg</span>    <span class="token comment">// msg 虽然很多属性，但是我们利用解构只要 data值</span>    <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// const &#123; data &#125; = arr</span>      <span class="token comment">// 我们只要 data 数据</span>      <span class="token comment">// 内部处理</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function">render</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>    <span class="token comment">// 需求3， 为了防止msg里面的data名字混淆，要求渲染函数里面的数据名改为 myData</span>    <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> data<span class="token operator">:</span> myData <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 要求将 获取过来的 data数据 更名为 myData</span>      <span class="token comment">// 内部处理</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myData<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function">render</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>数组的forEach方法和map方法遍历数组</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token comment">// forEach 就是遍历  加强版的for循环  适合于遍历数组对象</span>    <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span> <span class="token string">'green'</span><span class="token punctuation">,</span> <span class="token string">'pink'</span><span class="token punctuation">]</span>    <span class="token keyword">const</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>  <span class="token comment">// 数组元素 red  green pink</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token comment">// 索引号</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// console.log(result) 这里是undefined 因为forEach根本没有返回值</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一般匿名函数会用箭头函数代替，如（item,index）=&gt;{}</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/828.png" alt="828"></p><p>forEach原理<a href="https://www.bilibili.com/video/BV154411k7yW?spm_id_from=333.337.search-card.all.click&amp;vd_source=a1105d9022e153cf264a26ab9fa134c6">https://www.bilibili.com/video/BV154411k7yW?spm_id_from=333.337.search-card.all.click&amp;vd_source=a1105d9022e153cf264a26ab9fa134c6</a></p><p>1-map是返回一个新数组，但是forEach不返回东西。</p><p>2-参数有三个，分别是数组当前项值item和数组值的索引index，还有原始数组input，item必须写，其他两个可以不写。</p><p>3-forEach通过语句可以改变原数组，map通过语句也不改变原数组，因为它生成了一个新数组，操作也在新数组中操作。</p><p><strong>filter方法</strong></p><p>filter过滤，筛选</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">   <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span>   <span class="token comment">// const newArr = arr.filter(function (item, index) &#123;</span>   <span class="token comment">//   // console.log(item)</span>   <span class="token comment">//   // console.log(index)</span>   <span class="token comment">//   return item >= 20</span>   <span class="token comment">// &#125;)</span>   <span class="token comment">// 返回的符合条件的新数组</span>   <span class="token keyword">const</span> newArr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item <span class="token operator">>=</span> <span class="token number">20</span><span class="token punctuation">)</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArr<span class="token punctuation">)</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你可以自己设置函数体内容，返回相应条件的新数组。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/833.png" alt="833"></p><p>其中currentvalue必须传入，索引index可以不传入参数</p><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/832.png" alt="832"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/834.png" alt="834"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>商品渲染<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">*</span> <span class="token punctuation">&#123;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.list</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 990px<span class="token punctuation">;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>      <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>      <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.item</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 240px<span class="token punctuation">;</span>      <span class="token property">margin-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 20px 30px<span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span>      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.item:nth-child(4n)</span> <span class="token punctuation">&#123;</span>      <span class="token property">margin-left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.item:hover</span> <span class="token punctuation">&#123;</span>      <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0px 0px 5px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> -4px<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.item img</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.item .name</span> <span class="token punctuation">&#123;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.item .price</span> <span class="token punctuation">&#123;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> firebrick<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.item .price::before</span> <span class="token punctuation">&#123;</span>      <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"¥"</span><span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.filter</span> <span class="token punctuation">&#123;</span>      <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 990px<span class="token punctuation">;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 50px 30px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.filter a</span> <span class="token punctuation">&#123;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 10px 20px<span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> #f5f5f5<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>      <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token property">margin-right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.filter a:active,    .filter a:focus</span> <span class="token punctuation">&#123;</span>      <span class="token property">background</span><span class="token punctuation">:</span> #05943c<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>filter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">data-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>0-100元<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">data-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>100-300元<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">data-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>300元以上<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>全部区间<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- &lt;div class="item">      &lt;img src="" alt="">      &lt;p class="name">&lt;/p>      &lt;p class="price">&lt;/p>    &lt;/div> --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 2. 初始化数据</span>    <span class="token keyword">const</span> goodsList <span class="token operator">=</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        id<span class="token operator">:</span> <span class="token string">'4001172'</span><span class="token punctuation">,</span>        name<span class="token operator">:</span> <span class="token string">'称心如意手摇咖啡磨豆机咖啡豆研磨机'</span><span class="token punctuation">,</span>        price<span class="token operator">:</span> <span class="token string">'289.00'</span><span class="token punctuation">,</span>        picture<span class="token operator">:</span> <span class="token string">'https://yanxuan-item.nosdn.127.net/84a59ff9c58a77032564e61f716846d6.jpg'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        id<span class="token operator">:</span> <span class="token string">'4001594'</span><span class="token punctuation">,</span>        name<span class="token operator">:</span> <span class="token string">'日式黑陶功夫茶组双侧把茶具礼盒装'</span><span class="token punctuation">,</span>        price<span class="token operator">:</span> <span class="token string">'288.00'</span><span class="token punctuation">,</span>        picture<span class="token operator">:</span> <span class="token string">'https://yanxuan-item.nosdn.127.net/3346b7b92f9563c7a7e24c7ead883f18.jpg'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        id<span class="token operator">:</span> <span class="token string">'4001009'</span><span class="token punctuation">,</span>        name<span class="token operator">:</span> <span class="token string">'竹制干泡茶盘正方形沥水茶台品茶盘'</span><span class="token punctuation">,</span>        price<span class="token operator">:</span> <span class="token string">'109.00'</span><span class="token punctuation">,</span>        picture<span class="token operator">:</span> <span class="token string">'https://yanxuan-item.nosdn.127.net/2d942d6bc94f1e230763e1a5a3b379e1.png'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        id<span class="token operator">:</span> <span class="token string">'4001874'</span><span class="token punctuation">,</span>        name<span class="token operator">:</span> <span class="token string">'古法温酒汝瓷酒具套装白酒杯莲花温酒器'</span><span class="token punctuation">,</span>        price<span class="token operator">:</span> <span class="token string">'488.00'</span><span class="token punctuation">,</span>        picture<span class="token operator">:</span> <span class="token string">'https://yanxuan-item.nosdn.127.net/44e51622800e4fceb6bee8e616da85fd.png'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        id<span class="token operator">:</span> <span class="token string">'4001649'</span><span class="token punctuation">,</span>        name<span class="token operator">:</span> <span class="token string">'大师监制龙泉青瓷茶叶罐'</span><span class="token punctuation">,</span>        price<span class="token operator">:</span> <span class="token string">'139.00'</span><span class="token punctuation">,</span>        picture<span class="token operator">:</span> <span class="token string">'https://yanxuan-item.nosdn.127.net/4356c9fc150753775fe56b465314f1eb.png'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        id<span class="token operator">:</span> <span class="token string">'3997185'</span><span class="token punctuation">,</span>        name<span class="token operator">:</span> <span class="token string">'与众不同的口感汝瓷白酒杯套组1壶4杯'</span><span class="token punctuation">,</span>        price<span class="token operator">:</span> <span class="token string">'108.00'</span><span class="token punctuation">,</span>        picture<span class="token operator">:</span> <span class="token string">'https://yanxuan-item.nosdn.127.net/8e21c794dfd3a4e8573273ddae50bce2.jpg'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        id<span class="token operator">:</span> <span class="token string">'3997403'</span><span class="token punctuation">,</span>        name<span class="token operator">:</span> <span class="token string">'手工吹制更厚实白酒杯壶套装6壶6杯'</span><span class="token punctuation">,</span>        price<span class="token operator">:</span> <span class="token string">'100.00'</span><span class="token punctuation">,</span>        picture<span class="token operator">:</span> <span class="token string">'https://yanxuan-item.nosdn.127.net/af2371a65f60bce152a61fc22745ff3f.jpg'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        id<span class="token operator">:</span> <span class="token string">'3998274'</span><span class="token punctuation">,</span>        name<span class="token operator">:</span> <span class="token string">'德国百年工艺高端水晶玻璃红酒杯2支装'</span><span class="token punctuation">,</span>        price<span class="token operator">:</span> <span class="token string">'139.00'</span><span class="token punctuation">,</span>        picture<span class="token operator">:</span> <span class="token string">'https://yanxuan-item.nosdn.127.net/8896b897b3ec6639bbd1134d66b9715c.jpg'</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span>    <span class="token comment">// 1. 渲染函数  封装</span>    <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 声明空字符串</span>      <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">''</span>      <span class="token comment">// 遍历数组 </span>      arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 解构</span>        <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> picture<span class="token punctuation">,</span> price <span class="token punctuation">&#125;</span> <span class="token operator">=</span> item        str <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">         &lt;div class="item">          &lt;img src=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>picture<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> alt="">          &lt;p class="name"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/p>          &lt;p class="price"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>price<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/p>        &lt;/div>         </span><span class="token template-punctuation string">`</span></span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token comment">// 追加给list </span>      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.list'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> str    <span class="token punctuation">&#125;</span>    <span class="token function">render</span><span class="token punctuation">(</span>goodsList<span class="token punctuation">)</span>  <span class="token comment">// 页面一打开就需要渲染</span>    <span class="token comment">// 2. 过滤筛选  </span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.filter'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// e.target.dataset.index   e.target.tagName</span>      <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> tagName<span class="token punctuation">,</span> dataset <span class="token punctuation">&#125;</span> <span class="token operator">=</span> e<span class="token punctuation">.</span>target      <span class="token comment">// 判断 </span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>tagName <span class="token operator">===</span> <span class="token string">'A'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// console.log(11) </span>        <span class="token comment">// arr 返回的新数组</span>        <span class="token keyword">let</span> arr <span class="token operator">=</span> goodsList        <span class="token keyword">if</span> <span class="token punctuation">(</span>dataset<span class="token punctuation">.</span>index <span class="token operator">===</span> <span class="token string">'1'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          arr <span class="token operator">=</span> goodsList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>price <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>price <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>dataset<span class="token punctuation">.</span>index <span class="token operator">===</span> <span class="token string">'2'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          arr <span class="token operator">=</span> goodsList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>price <span class="token operator">>=</span> <span class="token number">100</span> <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>price <span class="token operator">&lt;=</span> <span class="token number">300</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>dataset<span class="token punctuation">.</span>index <span class="token operator">===</span> <span class="token string">'3'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          arr <span class="token operator">=</span> goodsList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>price <span class="token operator">>=</span> <span class="token number">300</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 渲染函数</span>        <span class="token function">render</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1-这里面的data-index就是一个自定义属性</p><p>2-e.taget.dataset就是自定义的属性的对象</p><p>3-e.target.tagName就是记录你点的是什么标签，这里就是A</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/835.png" alt="835"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网盘不限速下载</title>
      <link href="archives/bdae1980.html"/>
      <url>archives/bdae1980.html</url>
      
        <content type="html"><![CDATA[<h2 id="常用网盘"><a href="#常用网盘" class="headerlink" title="常用网盘"></a>常用网盘</h2><p>国内：百度网盘，阿里云网盘，蓝奏云，或者磁力bt链接</p><p>国外：微软的onedriver，mega等</p><h2 id="链接下载原理"><a href="#链接下载原理" class="headerlink" title="链接下载原理"></a>链接下载原理</h2><p>下面以常见的两种类型通俗的说一下</p><p><strong>百度网盘</strong>：它就是典型的服务器请求，所有的资源的存在服务器了，用户下载就从它的服务器下。</p><p>我们平常所使用的 <strong><em>HTTP*<strong>、</strong></em>FTP*</strong> 等协议需要一个 <strong>中心发布者</strong> 在网络上发布文件，即一种 <strong>点对多</strong> 的形式。当然，如果中心发布者由于某种原因被 ban 或者删除了资源，那么我们就无法下载到心爱的 <del>小姐姐</del> 资源了。</p><p><strong>磁力bt</strong>：如迅雷和百度网盘的离线bt下载，它是通过p2p的方式，服务器并不提供数据传输，只是告诉使用者一些基本的文件信息，由拥有这个种子文件的用户的闲置资源给另一个用户传递。（所以说很多死链的意思就是，这个磁力链接对应的文件已经没有任何人拥有）</p><p>我们平时所说的 <strong>BT 种子</strong>，实际上指的是由 <strong><em>BitTorrent*</em>* 协议所生成的一个包含资源信息的文件。与传统的网络传输协议不同，</strong>BitTorrent** 协议是一种以 <strong>Peer-To-Peer</strong>（P2P） ，即 <strong>用户对用户</strong> 模式为主的资源分享协议，采用的是一种 <strong>去中心化</strong> 的思想，不需要一个专门的文件发布者或者发布平台。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">磁力链接格式magnet:?xt=urn:btih:相关知识：https://zhuanlan.zhihu.com/p/350992390<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="如何实现高速下载"><a href="#如何实现高速下载" class="headerlink" title="如何实现高速下载"></a>如何实现高速下载</h2><p><strong>中心化网盘</strong></p><p>1-因为我们在这种网盘上下载东西，就是从它们平台的服务器进行下载，它们通常为了要我们开会员，会进行下载限速；我们只需要提取此文件的<strong>直链</strong>（通俗说就是平台无法给我们进行限速，速度取决于服务器和你有多快的网速）</p><p>2-工具：idm下载器，直链提取工具（自行百度）；我们先提取文件的直链，然后复制到idm进行下载即可。</p><p><img src="https://zhoudongqi.com/medias/picture/mix/4.png" alt="4"></p><p>直链：</p><p><img src="https://zhoudongqi.com/medias/picture/mix/5.png" alt="5"></p><p>idm：</p><p><img src="https://zhoudongqi.com/medias/picture/mix/6.png" alt="6"></p><p>点击确定即可高速下载。</p><p><strong>p2p下载去中心化模式网盘</strong></p><p>相关知识：<a href="https://zhuanlan.zhihu.com/p/350992390">https://zhuanlan.zhihu.com/p/350992390</a></p><p>我们磁力链接在某雷下载，会出奇的慢，何解呢？</p><p>这种模式下你下载的速度取决于，平台所为你找到的拥有此磁力链接对应文件的用户的数量，当其他用户在线越多，理所应当它们给你传递数据的速度就越快。某雷作为大平台自然知道谁拥有这些文件，但是要赚钱，所以还是可以给你限速，谁叫你用它呢？</p><p>解决方式：</p><p>我们自己配置tracker，取寻找其他用户，然后用其他免费下载器全速下载。</p><p>工具：支持磁力下载的下载器（这里用bitcomet）；tracker<a href="https://trackerslist.com/#/%EF%BC%9Bmagnet">https://trackerslist.com/#/；magnet</a> to torrent</p><p>torrent是什么？这些下载器下载磁力文件，都需要选择torrent文件，里面包括了链接和tracker等信息。</p><p>trackers是什么？<img src="https://zhoudongqi.com/medias/picture/mix/7.png" alt="7"></p><p>1-把别人发给你的磁力链接使用magnet to torrent转换成torrent文件</p><p>2-打开bitcomet（自己百度下载）</p><p><img src="https://zhoudongqi.com/medias/picture/mix/8.png" alt="8"></p><p>3-打开生成的torrent文件，然后更新tracker</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">https://trackerslist.com/#/tracker这里获取<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>4-高速下载即可。</p><p>问题</p><p>1-有时候下载端口被拦截，你需要自己去自己电脑防火墙，路由器设置什么的开启端口。</p><p>2-下载国外的磁力文件（拥有此文件的人都是国外的机子或者服务器），就需要在设置中开启代理（这个代理节点端口怎么来，和科学上网一样）</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>上面只是一些可用的例子，当你知道这些知识后，自然会了解到还有很多其他的配置方法。</p>]]></content>
      
      
      <categories>
          
          <category> 实用小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘高速下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电话&amp;邮箱轰炸</title>
      <link href="archives/1dfcea02.html"/>
      <url>archives/1dfcea02.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>1-本网站不提供任何工具，只做了相关短信压力测试</p><p>2-这个项目基本上秒杀市面所有免费测压工具，很多违规付费轰炸也是用的这个源码。</p><p>3-速度，基本上一秒几十条。</p><h2 id="被别人电话或者短信轰炸了怎么办？"><a href="#被别人电话或者短信轰炸了怎么办？" class="headerlink" title="被别人电话或者短信轰炸了怎么办？"></a>被别人电话或者短信轰炸了怎么办？</h2><p>1-如果是注册登入这些验证码电话短信轰炸，联系运营商说明情况屏蔽即可（可能也屏蔽掉你正常的操作）</p><p>2-如果是人家花钱找的实名电话轰炸，几十块一天那种，基本上无解，开勿扰模式吧。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">项目地址:https://github.com/OpenEthan/SMSBoom<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2><p><video src="https://www.zhoudongqi.com/medias/video/ssmboom.mp4" width="300px" height="500px" controls="controls"></video></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 恶意骚扰 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科学上网科普</title>
      <link href="archives/ef67e041.html"/>
      <url>archives/ef67e041.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>众所周知，作为程序员我们经常要访问github等网页，那有时进不去，咋办呢？我们需要科学上网，我们可以通过官方公司正当的vpn来获取国外学术等资源；但是这是有门槛的，所以一些普通人就可能利用下面提到的一些方法进行科学上网，但这种行为都是不合规的，不建议使用，所以这里我也不会提供任何工具，我们必须走正规的途径才能保证自身的网络安全，不给破坏分子可乘之机。</p><h2 id="手机"><a href="#手机" class="headerlink" title="手机"></a>手机</h2><p>1-各种app</p><p>优点：一键，免费。</p><p>缺点：不稳定，网速慢。</p><p>2-使用v2ray，然后去找节点，挂上节点即可</p><p>缺点：这些免费节点一般都是节点池筛选出来的，通常很容易过期，没几天就用不了了，又得找新的。</p><p><strong>怎么办</strong>：</p><p>1-找一个长期更新节点池的博主，订阅他的链接。</p><p>2-找几个较稳定的免费app</p><p>3-找付费app，付费app一般速度快，稳定，但是要付费，真是心里滴血，怎么办呢？</p><blockquote><p>一般这种app都有签到领时长的活动，每天免费个半小时左右，但这也不够用啊，怎么办？？？</p><p>反复安装，能不能重复签到？</p><p>不可以因为都有识别码记录了你手机的特征，同设备是无法反复的</p></blockquote><p>思路：所谓术业有专攻，不同的事交给专业的人去做。</p><p>1-大佬方法：如果你会的话，找出这个app通过什么识别你的特征码，手机再root用一些手段修改即可。</p><p>2-通过mt/np管理器，修改软件包名，或者app共存，达到反复安装同一个软件，实现无限白嫖，但是如果有相应检测，那这种方法也无效。</p><p>2-最简单方法：下一个多开分身助手，无限分身这个app即可，就可以无限签到，无限使用。</p><h2 id="PC电脑端"><a href="#PC电脑端" class="headerlink" title="PC电脑端"></a>PC电脑端</h2><p>因为手机端，ap主还可以植入一些广告赚取维护费，搞点恰饭钱（为什么不直接收费？这带点色的，直接收费，很容易是自寻死路），所以电脑端免费的程序就很少了。</p><p>1-v2ray电脑版，自己寻找节点，和手机端一样</p><p>2-还是电脑分身，无限白嫖。</p><h2 id="自己搭建"><a href="#自己搭建" class="headerlink" title="自己搭建"></a>自己搭建</h2><p>1-购买一台香港或外国服务器，带宽等配置根据自己需求而定。</p><p>2-xshell连接服务器，安装相关代理程序，一般为shadowsocks等</p><p>3-通过SSTAP-BETA，添加代理，连接即可。</p><p>详细这里不演示，有思路后，如果有学习想法，去百度教程就行了。</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>1-翻墙是违法违规行为，通过官方正常渠道去访问国外学术资源才是我们获取资源的方法。</p><p>2-通过以上方法进行上网，不仅是一种违法行为，更是对自己隐私安全的不负责。</p><p>3-本站不提供任何工具与相应网址。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="约定俗成：VPN"><a href="#约定俗成：VPN" class="headerlink" title="约定俗成：VPN"></a>约定俗成：VPN</h3><p>最为人所熟知的科学上网技能就是 VPN ，这个词甚至盛行到用来指代所有科学上网技能。在大陆的互联网上，VPN就是梯子，就是用来科学上网的代理。但实际上这个说法并禁绝确，如今大多数科学上网的方法并不是通过VPN。以是假如有人说“我的VPN又挂了”，你就有八成把我判定他是个不懂技能的小白。</p><p>VPN即Virtual Private Network。计划初心是用来在不安全的网络中传输秘密信息，尤其是在90年代网络还没那么发达的环境下。假如你在一个大公司工作，十有八九你会打仗过VPN。你可以通过VPN进入到公司的内网，要么学校的教诲网，访问外网无法获取的信息。这时间你能看到的信息，跟你在公司/学校内网络看到的一样。固然，会有延时。</p><p>实在这才是VPN的真正作用：在互联网上创建一条虚拟的加密通道。</p><p>适才说到，连上公司的VPN，你的网络会跟在公司内网里没有区别。于是智慧的大家很快发现，假如这家公司在境外会怎么样？没错，连上境外服务器的VPN，就跟在境外没区别了。于是本该用于内部通讯的VPN成了科学上网的工具。</p><p>VPN有许多种，L2TP、PPTP、IPsec、AnyConnect等等，这里不说技能细节。</p><p>至于为什么VPN成了科学上网工具的代称，我以为跟iOS有关。NetworkExtension是苹果提供的用于设置 VPN 和定制、扩展焦点网络功能的框架。Network Extension 最早出如今 iOS 8，不外只能调用 iOS 系统自带的 IPSec 和 IKEv2 协议的 VPN。在 iOS 9 中，开发者终于可以实现非尺度化的私密VPN技能。连上以后，Status Bar上都市有一个“VPN”的标示，尽管那不肯定是VPN。</p><h3 id="启蒙：无界-自由门"><a href="#启蒙：无界-自由门" class="headerlink" title="启蒙：无界/自由门"></a>启蒙：无界/自由门</h3><p>许多人最开始用的科学上网工具就是无界/自由门。由于当时候谷歌还能上，Facebook还没什么人知道，没有须要费钱在境外租服务器架设代理。这两个软件的原理大概就是通过常常变更代理服务器的地点，提供http和socks协议的代理。</p><p>不外这两个软件由于资金出处问题，每次连上后都市打开大纪元等轮子系网站。不外也正是由于有资金支持，这两个软件都很稳定。</p><h3 id="直达目标地：host"><a href="#直达目标地：host" class="headerlink" title="直达目标地：host"></a>直达目标地：host</h3><p>在防火墙的最初阶段，被墙的网站还没那么多。尤其是最常用的谷歌并没有完全被封闭，GFW会针对谷歌的域名进行DNS投毒。</p><p>什么是DNS？网络上每个装备都市有一个IP地点，用于通讯。假如你在境外可以用电脑ping一下域名，要么用其他在线服务，会得到一串数字。但这种数字太难记，加上服务器不肯定只有一个/只在一个地方，于是需要DNS服务器将  这种网址转换成相应的IP地点。</p><p>GFW会让你计划访问google.com的时间给你剖析到错误的地点。对于这种本领破解方法很easy，我不让DNS服务器剖析这个地点，在本机的hosts文件写好域名和IP的对应关系，直接在当地剖析。</p><p>这种方法对其时的谷歌系网站比较有效，由于谷歌的IP非常多，服务器遍布环球。香港的访问不了，新加坡的总能访问吧，新加坡不可，澳大利亚总行了吧。</p><p>后来封闭升级，不是针对 IP 地点，而是针对每一个网络连接。受限于为数不多的几个出入境节点，网民的每一个出境网络连接实际上都被扫描过一遍。HTTP协议的计划者哪能想到中国人的这些大聪明都用在研究封闭上了，以是计划时并没有思量到这点。导致HTTP/HTTPS协议的特性非常显着，看连接的前几十个字节就能认出来了。</p><p>于是域名没有封不掉的，只有没发现的。hosts路线走不通了。</p><h3 id="免费的午餐：Goagent"><a href="#免费的午餐：Goagent" class="headerlink" title="免费的午餐：Goagent"></a>免费的午餐：Goagent</h3><p>这个时间谷歌仍没有彻底被封杀，仍有服务器能连接。于是人们使用Google App Engine平台，在上面搭设代理服务器，通过HTTPS协议科学上网。还能实现通过pac设置条件，让国内数据直连，境外数据走代理。这实在就是用谷歌服务器搭的一个梯子。</p><p>后来随着谷歌服务器渐渐被封，这条路也死了。</p><h3 id="另辟蹊径：西厢计划"><a href="#另辟蹊径：西厢计划" class="headerlink" title="另辟蹊径：西厢计划"></a>另辟蹊径：西厢计划</h3><p>我之以是记着这个，是由于名字太好记。 西厢计划 不是一个协议或是服务，而是针对TCP连接重置、DNS挟制、IP封闭和URL重要字过滤的一组工具。好比GFW只检测出境的流量，而不检测入境的。通过让回程流量直连可以节流许多时间。</p><p>后来随着GFW的升级，可钻的空子越来越少。西厢计划终结。</p><h3 id="去中心化P2P：Tor"><a href="#去中心化P2P：Tor" class="headerlink" title="去中心化P2P：Tor"></a>去中心化P2P：Tor</h3><p>Tor 是美国开发的一款自由软件。初心也不是为了科学上网，而是为了匿名。在你和目的服务器之间，通过三个节点进行中转。这样目的服务器就没法知道你的真实IP。</p><p>Tor还可以创建只能通过Tor网络访问的网站，这就是所谓的暗网。曾经很著名的暗盘“丝绸之路”就只能通过Tor访问，在上面你可以用比特币购置种种违禁品。</p><p>尽管重要用途是匿名而不是科学上网，但假如最终的出口节点位于境外，也是能起到科学上网的作用的。只是你应该能想象到，经过三个节点的中转，Tor的速率非常慢。</p><h3 id="改变历史：Shadowsocks"><a href="#改变历史：Shadowsocks" class="headerlink" title="改变历史：Shadowsocks"></a>改变历史：Shadowsocks</h3><p>要讲科学上网史，不可不提的就是Shadowsocks。本质上这是Socks 5的加密版本，无法被检测出来。而且可以针对境内外流量主动分流。Shadowsocks摆设简单，对服务器设置要求低，使用自行计划的协议进行加密通讯。因此这个协议一经推出，就成为最盛行的科学上网协议。毕竟和VPN差别，Shadowsocks就是为科学上网而计划的。</p><p>别的另有在Shadowsocks底子上开发出来的ShadowsocksR，但这个协议的开发者引来过一些 争议 ，不再赘述。ShadowsocksR被昵称为SSR酸酸乳。Shadowsocks被简称为SS。</p><p>Shadowsocks的火爆也给开发者Clowwindy带来了麻烦，被请喝了茶。之后他删去Github上的项目，如今已经跑路美利坚。</p><p>由于Shadowsocks的标记是一个纸飞机，因此如今也会把提供科学上网服务的服务器称作机场。</p><h3 id="釜底抽薪：应用下架"><a href="#釜底抽薪：应用下架" class="headerlink" title="釜底抽薪：应用下架"></a>釜底抽薪：应用下架</h3><p>固然这些协议再怎么加密、殽杂，也斗不外GFW强盛的算力。如今之以是还能用纯粹是由于封掉全部境外服务器不实际。</p><p>于是想了一个新办法，要求各应用商店下架代理类应用，包括App Store。今后以后要想下载app得先科学上网，还得有个境外区的账号（Apple ID）才能下到。这一步拦截住了许多小白用户。</p><p>Surge是最早一批使用Network Extension支持SS等协议的产品（假如我没记错的话），纵然在今日这也是iOS平台最稳定、体验最好的代理应用—!—固然作者会说这个是网络调试工具不是让你科学上网的，但，你懂的。</p><p>但Surge的价格太高，于是一个叫Shadowrocket的产品渐渐盛行起来。这个产品支持SS、SSR等种种常见代理协议，价格又便宜。由于icon是一个火箭，又被称作小火箭。</p><p>需要分清，Shadowsocks、SSR这些是协议，而Surge和shadowrocket是应用，这些应用通过协议到达科学上网的目标。</p><h3 id="新年代：v2ray"><a href="#新年代：v2ray" class="headerlink" title="新年代：v2ray"></a>新年代：v2ray</h3><p>由于SS和SSR的作者都不再继续开发了，近两年有个后起之秀v2ray开始盛行。简单点说，v2ray是模块化的代理软件包。支持许多协议。</p><blockquote><p>模块化，简单来说就是乐高积木，每一块积木都有统一的接口（有破例，这里忽略），积木和积木之间想拼就拼，想拆就拆，很方便。V2Ray 也是这样，V2Ray 中的每一个功能都可以简单地添加或移除。</p></blockquote><p>此中Vmess是该项目组开发的协议，也拥有加密和殽杂的功能。通常环境下梯子服务商说提供“v2ray“的意思实在是”支持vmess协议“。</p><p>然而v2ray开发者也已经消散一年了。</p><p><strong>什么是墙</strong></p><p>墙最开始叫做 防火长城， 这个词是根据一篇《The Great Firewall of C!hina》的海外文章翻译过来的，由于与”Great Wall”(长城)一词非常相似，随后在网络上被称作墙。固然这里的墙与实际中的并不相同，而是指代的背后一系列的服务器和路由器等 <strong>软硬件装备</strong> ，这些装备会屏蔽一些海外黑名单网站。然而由于工作要么学习需要，偶然候我们急迫需要访问海外网站，而这时间这种行为就叫做科学上网。</p><p>接下来我们简单的明白一下 <strong>原理</strong> ：</p><p>当我们在browser输入 <code>google.com </code>这个域名的时间，盘算机首先需要去DNS服务器获取到 <code>google.com </code>域名的IP地点，域名只是为了方便人们记忆，而只有得到了 <strong>IP地点</strong> ，运营商才知道要将你的请求转发到哪儿。</p><p>以是一样平常来说，在你的请求真正到达Google服务器之前，需要经过两次网络请求。首先是DNS请求，假如防火长城发现这个 <strong>域名在黑名单</strong> 内里，则直接通过 DNS污染 将域名指向一个错误的地点，这种方法服从最高，但是比较原始，只需要变动当地盘算机HOST文件就能破。接下来直接根据IP地点进行屏蔽，防火长城会根据 深包检测 ，判定流量的指纹信息，假如发现流量不同寻常，则会将该IP地点参加黑名单。</p><p>以是假如我们要访问海外网站，那么首先需要一个海外的 <strong>IP地点和服务器</strong> ，而且这个IP地点没有在黑名单之中，在我们访问Google的时间，首先是将数据转发给这个服务器，然后服务器再转发给Google，最后再将Google的数据返回给我们，这样就完成了科学上网 。</p><p>固然，实际中肯定会碰到种种问题。此中最重要的怎样保证IP地点不会被墙，虽然防火长城无法破解加密的数据，但是任何数据总是存在 <strong>指纹特性</strong> 的，通过度析这些特性，则可以断定流量是否正当。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>以上就是对科学上网的科普，当我们需要国外学术资源，应该寻求正当的官方VPN代理，而不是”另辟蹊径“，这是不合规的，也是不安全的。</p>]]></content>
      
      
      <categories>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三剑客复习</title>
      <link href="archives/119335cf.html"/>
      <url>archives/119335cf.html</url>
      
        <content type="html"><![CDATA[<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>alt+shift+单击  多行选中</p><h2 id="H5-amp-C3"><a href="#H5-amp-C3" class="headerlink" title="H5&amp;C3"></a>H5&amp;C3</h2><p>1-可以通过id选择器和超链接a标签配合，制作锚链接，实现本页面的内容定位。</p><p>2-href用于建立当前页面与引用资源之间的关系（链接），而src则会替换当前标签。</p><p>遇到href，页面会并行加载后续内容；而src则不同，浏览器需要加载完毕src的内容才会继续往下走。</p><blockquote><p>通俗来说：src是当前页面就要用到它，如图片img需要src，脚本script引入也是src</p><p>而href只是建立一种关系，如超链接a，它绑定了一种关系，你点这个超链接就会跳转</p><p>注意css的引入是link，用的herf，为什么呢？这也是一个历史遗留问题</p><p>我认为是src引入进来的资源可能是对整个网页的呈现有支撑作用的，比如图片或者javascript。而css被link进来，是要表达了一些附属的含义在里面，比如没有css，网站的核心逻辑和结构是不会受影响的。</p></blockquote><p>3-URL是统一资源定位符（或称统一资源定位器/定位地址、URL地址等，英语：Uniform Resource Locator，常缩写为URL），有时也被俗称为网页地址（网址）。如同在网络上的门牌，是因特网上标准的资源的地址（Address）。</p><p>4-单标签闭口/在后面，如&lt; hr/&gt;</p><p>5-页面过三秒跳转另一个页面；&lt; meta http-equiv=”refresh” content=”3;URL=<a href="http://www.baidu.com&quot;&gt;/">http://www.baidu.com&quot;&gt;</a></p><p>6-父亲选择器div&gt;span选中div中子集的span元素；兄弟选择器div+span，选中div往下的第一个兄弟元素；div~span也是兄弟选择器，选中所有兄弟元素。</p><p>7-属性选择器，如p[title]，表示选中设置了title属性的p标签。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/715.png" alt="715"></p><p>其中属性选择器还有以上的选择方法，^表示属性值以指定值开头，$是指定值结尾，这个在正则表达式也学过。</p><p>8-链接的伪类这里介绍四个 :link ：visited ：hover ；active 其中link和visited只能超链接用，hover和active其他元素也能用 link为未点击的正常超链接，visited为游览过的超链接，hover为鼠标移入（鼠标移到这个超链接上面就改变样式）， active是鼠标点击。</p><p>9-::before&amp;::after(必须结合content使用)，注意这里是两个冒号</p><p>10-样式的继承，一般只继承文字样式；有时继承会失效，如h标题无法继承宽度，a超链接无法继承颜色，其实继承了，只是被它们自己的默认样式覆盖了。</p><p>11-当通过不同选择器，选中相同元素，且相同样式设置不同值，就会发生冲突 此时样式的值，通过选择器的权重来决定 ；可以看作内联样式（1000）&gt;id选择器（100)&gt;类和伪类选择器(10)&gt;元素选择器(1)&gt;通配选择器（0） ；可以说：管的范围越大，权重越小。 当优先级相等时，后面的覆盖前面的样式 当是交集选择器，两个选择器权重相加再判断 </p><blockquote><p>其中css语句后加了！important的权重最大，开发中很少使用，除非特殊情况。</p></blockquote><p>12-em和rem都是调节大小的 1em=1font-size ；1font-size如果不人为设置默认为16px； em根据元素字体大小改变而改变 rem根据根元素即html{不设置默认16px}里的字体大小来改变 r就是root根的意思</p><blockquote><p>注意，em是受使用它的本元素内文字元素大小的影响（没设置则继承父类），rem是受html根的font-size的影响。</p><p>em的全称就是element，1em则是一个元素font-size的大小</p></blockquote><p>13-颜色设置有rgba，分别是红色，绿色，蓝色，取值都在0-255；a是设置透明度，取值是0-1；十六进制是0-f，全0为白，全f为黑； <em>HSLA</em> 即色相、饱和度、亮度、透明度(英语:Hue, Saturation, Lightness, Alpha )，hsla不常用。</p><p>14-表格table必须设置border和width才会显示</p><p>15-input的radio属性值单选项要与name属性结合使用，游览器才知道两个单选项中的关系</p><p>reset要与form表单域结合使用，才知道要重置哪些东西</p><p>16-lable标签配合表单使用，可以直接lable包含表单，也可以表单添加id，使用lable的for属性。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>male<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Male<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>male<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>Female  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>17-<!doctype html>里面不需要写html5，字母不分大小写，html标签里面有一个lan属性，可以告诉浏览器本页面的内容语言，如en和zh-CN</p><p>18-a标签的rel属性有一个nofollow的值，可以优化seo，避免分散权重。</p><p>19-video有一个poster属性可以设置视频未播放时的页面，poster即海报的意思。</p><p>20-font-weight的值可以为700对应blod，400对应normal</p><p>21-除了用em/i，del/s，ins/u等来定义文字的样式，还可以通过font-style：ilastic等，也可以通过css的text-decoration来写，属性值有underline/line-through/overline/none等等</p><blockquote><p>注意，因为一个是标签，一个是css，所以他们是不会互相层叠的。</p></blockquote><p>22-如果文字样式复合属性font：连写，注意顺序style weight size family，写错顺序不会生效。</p><p>只能省略前面两个，后面的size 和family不能省略</p><blockquote><p>为什么严格按照顺序？因为底层就是这样设置的，而且各属性值很大相同，不按照顺序，底层要浪费很大的资源去区分，如weight 和size。</p><p>如果不想记，咱就单写。</p></blockquote><p>23-元素定位后，不管是绝对还是相对还是固定，都是用left/right/top/bottom来调整位置。</p><p>24-background-position： 可以书写left/right/bottom等，也可以写数字，单位是像素。</p><p>25-background复合属性也可以一起写，不需要注意顺序，因为他们的属性值都有很大不同。</p><p>26-p和h不能互相嵌套，因为一段文字不能即是段落又是标题</p><p>27-互相嵌套的块元素紧贴在一起，设置margin后外边距塌陷；解决方法：让它们不贴在一起即可，用个标签隔开，或者设置浮动，或者给父元素设置overflow：hidden（原理：父级元素设置了overflow:hidden;属性后布局正常，触发了BFC,导致了该父级就会按照BFC的规则进行布局。）</p><p>28-两个盒子间，就是有白色间距，也清除了margin等；这是因为代码中两个盒子的语句换行了，解决方法：给盒子设置浮动。（注意浮动会脱标）</p><p>29：input中的placeholder属性也是可以写css的，如input::placeholder{}</p><blockquote><p>最新的写法，伪类用一个冒号来表示，而伪元素则用两个冒号来表示。</p><p>::after和::before是伪元素，因为配合content生成了一个元素</p><p>:hover和:link等当用户做出一些动态状态是伪类，</p></blockquote><p>30-基线不对齐，图片文字同一行，上下位置对不齐；解决：使用vertical-algin：middle/top/bottom</p><p>31-清除浮动；为什么清除浮动？；因为元素浮动后，它就会脱标，但有时我们不想让它脱标，我们需要它占标准流的位置来撑开父盒子；</p><blockquote><p>1-什么额外标签和单伪元素，双伪元素清除浮动，原理都是添加了一个标签在父级里，然后设置css的clear:both清除浮动，记得设置vertical:hidden来隐藏这个标签</p><p>2-overflow:hidden也能清除浮动，为什么呢？它不就是超出盒子部分隐藏吗？</p><p>因为这个语句会格式化上下文，让浮动元素也参与计算，达到占位的效果。</p></blockquote><p>32-元素层级关系 标准流&lt;浮动&lt;定位，当三个都存在，页面显示定位的内容。也可以用z-index来调整。</p><p>33-属性border-radius和curser:move/text/point/default</p><p>34-overflow的属性值有scroll/auto/visible/hidden</p><p>35-visibility:hidden隐藏后，照样占标准流，一样占位置，只是那一片位置变成了空白</p><p>display:none完全隐藏，不占位置。</p><p>36-opacity：0-1设置透明</p><p>37-页面图标引入</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>shortcut icon<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>38-书写css，先写可能用到的浮动和定位，然后写盒子模型的样式，最后写文字样式，这样可以提高渲染效率；</p><p>如你先写了盒子模型，都渲染完了，又浮动一下，又要消耗性能。</p><p>39-伪元素是类似行内元素的特性，无法直接设置大小和margin和padding。</p><p>40-清除浮动有，额外标签法，单伪元素清除法，双伪元素清除法（相较与单伪元素它的display设置为了table，而且上面也加了一个块级元素，所以可以解决塌陷问题），它们的核心都是加一个块级元素，然后赋予clear:both的css；</p><p>还有overflow清除浮动（利用了BFC块级格式化上下文的特性）</p><p><a href="https://blog.csdn.net/always_die0/article/details/108296195">https://blog.csdn.net/always_die0/article/details/108296195</a></p><p>41-固定定位是脱标的，还有注意绝对定位和相对定位的left，right，top，bottom是基于谁比较的，不理解的话会写反。</p><p>比如left:100px.top:20px，是以相对与参照物（绝对定位就是以有定位的父级为参照物，相对定位就是起初自己的位置为参照物），移动后，参照物在移动后位置的上面20px，左边100px。</p><p>42-绝对定位移动后，移动前的原先的位置也是不脱标的，还是会占标准流的位置。</p><h2 id="C3拓展与移动端适配"><a href="#C3拓展与移动端适配" class="headerlink" title="C3拓展与移动端适配"></a>C3拓展与移动端适配</h2><p>1-transform:translate（x，y） rotate（xdeg）当一个动画既要旋转又要位移，必须先写位移后写旋转，因为先旋转会改变xy轴的方法，从而改变位移方向。</p><p>2-linear-gradient{transparent，rgba（0，0，0，0）}可以设置渐变颜色，参数用逗号隔开即可。</p><p>3-perspective：800-1200属性实现透视效果，此属性加给需要透视元素的父级(一代父级，不包括爷爷祖宗)，而且必须配合translateZ使用才有效果。</p><p>3-transform-origin：right bottom设置旋转点；</p><p>4-transform-style：perserve-3d设置立体，那个盒子需要立体，就给谁加此css，然后配合transform:rotateZ/Y/X(  deg)即可实现3d效果。</p><p>5-tansition属性可以设置内容动画运动时间。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">transition: all 1s;<span class="token comment">&lt;!-- 还有tansform:scaleX/Y/Z(倍数)注意这些css的属性一样，都是tansform，所以会互相层叠，如想不层叠，就写复合属性如transform: rotate(40deg) translateX(100px) scale(2.0); --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>6-动画animation中属性，backwards是停在动画初状态，forwards是停在动画结束状态；alternate属性值可以让动画方向来回移动；infinite可以让动画一直循环下去。</p><blockquote><p>alternate代替人，替补，轮流，交替</p><p>infinite无穷尽的</p></blockquote><p>7-animation-play-state:paused可以暂停动画，一般配合伪类:hover使用</p><p>8-step(X)属性值写在animation中，分几步则X写几，它和运行时间秒数不冲突，如step(10) 1s 则在一秒中完成这个动画，且分了十个停顿。</p><blockquote><p>animation有多个秒数，默认第一个是动画运行持续时长，后面一个是延迟动画时间。</p></blockquote><p>9-flex布局，flex=flexible即弹性布局，和浮动float效果差不多，但是浮动当宽度不够会换行，flex布局不会换行，而是会压缩元素宽度；也可以通过设置flex-wrap：wrap来设置换行；其次就是flex布局后没有行内元素，块元素的区分，行内元素也能被设置大小。</p><p>10-flex布局后，可以设置align-items竖轴（strech/center/flex-start/flex-end），也可以通过justify-content设置横轴（space-between/space-evenly/space-around/center/flex-start/flex-end）</p><blockquote><p>其中还有align-self是设置自己在父元素内的排序方式</p></blockquote><p>11-可以使用flex-direction：column修改主轴方向。</p><p>12-less的书写中加减乘可以直接写，但是除法需要写在小括号内</p><p>13-less中声明变量，如@jinnian:zdq；那么在后续使用中，@jinnian就可以代替zdq</p><p>14-less的引入 @import ‘xxx.less’；</p><p>15-less导出，在页面首行添加语句,如下</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">//out:./abc/xxx.css//out:false   禁止导出css这里自定义名字了，不自定义名字的话，默认是less文件的名字.css<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>16-媒体查询media在link引入的时候也可以使用，如下只有media条件符合，引入的css才会生效。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(min-width:992px)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>17-border-image-source/width/slice/repeat</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">border: 15px solid pink; border-image-source: url(images/border.png);/* 不要跟单位 */ border-image-slice: 30 30 30 30; /* border-image-slice: 30; */ /* 这个属性默认的是 border的宽度 但是 有区别， 这个是 边框图片的宽度 不会挤压文字 */ border-image-width: 30px; border-image-repeat: round/stretch/repeat;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="JavaScript基础"><a href="#JavaScript基础" class="headerlink" title="JavaScript基础"></a>JavaScript基础</h2><p>1-A65；a97</p><p>2-&amp;&amp;优先级比||高；非！是一元运算符，优先级也很高</p><p>3-三目运算符  条件？X:Y  会返回X或者Y，但并不会赋值。</p><p>4-prompt和input框等接收的用户输入，都是字符型。</p><p>5-数组名存的是一个地址，所以可以用const，交换给别人的也是地址。</p><blockquote><p>简单数据类型存储在栈, 复杂引用数据类型存储在堆(地址存在栈,内容在堆</p></blockquote><p>6-数组的增（push,unshift），都是返回增完后新数组的长度,可以同时增多个；删(shift,pop,splice)，返回的都是删去的那个数据；shift/unshift是从数组前面处理，pop/push是从数组后面处理；删pop和shift只能删一个，splice可以设置指定位置删多个。</p><p>7-undefined+任意类型（除了字符串，字符串会拼接）=NaN；只声明未赋值的变量就是undefined</p><p>8-可以在函数的形参中就设置一个值，防止调用时无实参传过来，导致错误。如下</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">function fn(x=0,y=0)&#123;return x+y&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>9-形参就是在函数内声明了的一个变量，在此函数内无法再声明和形参一样名称的变量。（除法用var）</p><p>10-对象的增添属性或者方法，对象名.新属性名/方法名=xx/函数  </p><p>11-对象的删除   delete 对象名.属性/方法</p><p>12- 对象取值除了对象.属性/方法名，还有对象名[‘属性/方法名’]。</p><p>13对象的遍历，因为对象是无序的，不像数组是有序的，所以需要用for k in 对象名 来实现遍历</p><blockquote><p>其中k是一个变量，随便设置，常用k；k等于每次循环的对象里的方法或属性名字（字符串形式），有多少个方法和属性和，就循环多少次；可以用对象[k]打印除了，得到对象中的方法和函数名。</p></blockquote><p>14-math对象的math.floor()/ceil()/round()/pi/max(x,y,z,…)/min(x,y,z,…)等方法和属性</p><p>15-取N-M随机数公式：Math.floor(Math.random()*(M-N+1)+N</p><p>17-script标签是可以写在body中的某个盒子div内的,如上图,那么script渲染出的东西（声明的变量什么的还是共享的）,也只会出现在盒子范围内</p><p>18-因为小数的精度问题，如0.1+0.2是不等于0.3的 </p><p>19-正负号解析和比较运算符都会进行数字的隐式转换。</p><p>20-数组的方法splice，中文为粘接的意思，就是删一些东西然后再加一些进去；第一个参数是指明从哪里粘接，第二个参数是删几个，第三个参数是需要添加进去的东西。splice没有返回值。</p><p>21-函数的return无法返回多个值，强制返回会取最后一个；但是可以把这多个值通过数组返回出来。</p><p>22-属性和方法的访问有两种方法；第一种 对象名.属性/方法名；第二种 对象名[‘属性/方法名’]</p><h2 id="webapi"><a href="#webapi" class="headerlink" title="webapi"></a>webapi</h2><p>1-document 是 window 的一个子对象</p><p>2-在页面中只存在一个的标签，如body和id选择器的元素，可以不用document.querySelector(‘’)查找，直接去使用对象，但使用前必须加上document，如document.body.style.backgroundColor=’red’</p><p>3-document.getElementById/getElementsByTagName/getElementsByClassName()</p><p>4-元素.ClassName=’avtive’;元素.ClassList.remove/add/toggle()</p><p>5-input有一个readonly属性和outline:none属性，textarea有一个resize:none属性</p><p>6-增加节点,如下创造了一个div盒子，但是页面是不显示的，我们需要使用appendChild追加（生成一个只能追加到一个地方）</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">let add = document.createElement('div')<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>7-插入和追加元素；父元素.appendChild(要插入的元素)；父元素.insertBefore(要插入的元素，在哪个元素的前面)</p><p>8-克隆节点，元素.cloneNode(true/false) 默认为false只复制标签不包括后代节点，true则包括后代节点，克隆和创建增加一样，创在浏览器的内存，还需要添加插入进去才显示。</p><p>9-删除节点，父元素.removeChild(要删除的子元素)</p><p>10-时间对象  ，先实例化一个对象，let data =new Date();然后data对象中有很多方法，如getFullYear/Month/Data/Day/Hours/Minutus/Seconds()</p><blockquote><p>注意月份和星期返回的是0-11 和0-6 需要自己加1</p></blockquote><p>11-let data =new Date()后，data是一个对象，打印它就是一个当前的网络时间；也可以通过toLocalString()获取当前本地电脑时间，代码如下</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">let date =new Date()document.write(date.toLocaleString())<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>12-时间戳是1970年1月1日00分00秒到现在的毫秒数;</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">方法一let date =new Date() document.write(+new Date())方法二let date =new Date() document.write(date.getTime())方法三  let date =new Date() document.write(Date.now())注意这里是Data.now()，now不是生成的对象的方法。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>+new Date() 会调用Date.prototype 上面的 valueOf方法</p><p>根据 ： new Date().getTime() === new Date().valueOf()</p></blockquote><p>13-重绘不一定回流，回流肯定导致重绘。</p><p>14-时间对象e中的pageX/Y和clientX/Y和offsetX/Y属性</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">let div =document.querySelector('div')       div.addEventListener('click',function(e，x,y)&#123;x=3               console.log(x)               console.log(e.clientX)       &#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意当事件函数中有多个参数，要用到事件对象e的话，需要把e写到第一个参数。</p><p>15-<strong>事件的冒泡和捕获</strong></p><p>先捕获阶段再到目标阶段，最后冒泡阶段</p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/829.png" alt="829" style="zoom:80%;" /><p>我们的addEventListener其实有三个参数，我们平时就写两个，最后一个就会默认false，也就是通过冒泡触发，如果点击“快乐按钮”就会先span再button最后body； 但是如果我们改为true就会是捕获触发，先body，再button最后soan</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/830.png" alt="830"></p><p>题目：</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/831.png" alt="831"></p><p>当我们点击baby，因为会先捕获再到目标再冒泡，而有的事件监听我们手动改成了true为捕获触发，所以会先捕获mother，再捕获daughter，然后到目标baby，最后冒泡上去，执行冒泡触发的grandma</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阶段重点复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ECharts_02day</title>
      <link href="archives/bec658a.html"/>
      <url>archives/bec658a.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>其实学了第一天，echarts就入门了，接下来就是练习不同的图的配置项；</p><p>先把页面布局好，把图表通过setOpotion丢进去就行了，然后自己修改一下相关配置</p><p><strong>重中之重在于学会如何把后端数据接收过来（学习ajax），然后进行显示，否则图表的数据都是写死的</strong></p><h2 id="点位发布统计"><a href="#点位发布统计" class="headerlink" title="点位发布统计"></a>点位发布统计</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/712.png" alt="712"></p><p>这个图在浏览器宽高变化的时候，不会变，外面可以通过resize事件来让它跟随浏览器变化进行变化</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/713.png" alt="713"></p><p>resize事件是当浏览器高度或者宽度发生变化时，会触发。</p><h2 id="ECharts社区"><a href="#ECharts社区" class="headerlink" title="ECharts社区"></a>ECharts社区</h2><blockquote><p>在官网<a href="https://echarts.apache.org/zh/index.html%E4%B8%AD%E6%9C%89%E4%B8%80%E4%B8%AA%E7%A4%BE%E5%8C%BA%EF%BC%8C%E4%B8%80%E4%BA%9B%E5%A4%A7%E4%BD%AC%E4%BC%9A%E6%8A%8A%E8%87%AA%E5%B7%B1%E5%88%B6%E4%BD%9C%E7%9A%84%E5%9B%BE%E8%A1%A8%E6%94%BE%E5%88%B0%E8%BF%99%E4%B8%AA%E4%B8%8A%E9%9D%A2%EF%BC%8C%E6%88%91%E4%BB%AC%E5%B0%B1%E4%B8%8D%E9%99%90%E4%BA%8E%E4%BD%BF%E7%94%A8%E5%AE%98%E6%96%B9%E6%8F%90%E4%BE%9B%E7%9A%84%E5%AE%9E%E4%BE%8B%E4%BA%86%E3%80%82">https://echarts.apache.org/zh/index.html中有一个社区，一些大佬会把自己制作的图表放到这个上面，我们就不限于使用官方提供的实例了。</a></p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/714.png" alt="714"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ECharts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ECharts_01day</title>
      <link href="archives/1959ca64.html"/>
      <url>archives/1959ca64.html</url>
      
        <content type="html"><![CDATA[<h1 id="数据可视化ECharts"><a href="#数据可视化ECharts" class="headerlink" title="数据可视化ECharts"></a>数据可视化ECharts</h1><h2 id="什么是数据可视化"><a href="#什么是数据可视化" class="headerlink" title="什么是数据可视化"></a>什么是数据可视化</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/682.png" alt="682"></p><p><strong>应用场景</strong></p><p>通用报表，移动端图标，大屏可视化，图编辑&amp;图分析，地理可视化。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/683.png" alt="683"></p><p><strong>常见的数据可视化库</strong></p><p>简单来说就是能实现上图效果的js代码库</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/684.png" alt="684"></p><h2 id="数据可视化项目概述"><a href="#数据可视化项目概述" class="headerlink" title="数据可视化项目概述"></a>数据可视化项目概述</h2><p><strong>项目展示</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/685.png" alt="685"></p><p><strong>项目目的</strong></p><p>首先目前市面上对数据可视化有大的需求</p><p>其次本项目可以对所学知识承上启下，为下面学习的服务器知识如何拿到后端数据做铺垫。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/686.png" alt="686"></p><p><strong>项目技术</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/687.png" alt="687"></p><h2 id="ECharts简介"><a href="#ECharts简介" class="headerlink" title="ECharts简介"></a>ECharts简介</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/688.png" alt="688"></p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">官网echartsjs.com&#x2F;zh&#x2F;index.htmlhttps:&#x2F;&#x2F;echarts.apache.org&#x2F;zh&#x2F;index.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/689.png" alt="689"></p><p>它有非常丰富的可视化模板，特效非常绚丽，而且支持多种数据格式的传入。</p><h2 id="ECharts基本使用"><a href="#ECharts基本使用" class="headerlink" title="ECharts基本使用"></a>ECharts基本使用</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/690.png" alt="690"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/691.png" alt="691"></p><p>第一步 下载引入echarts.js因为我们需要用到这个库</p><p>第二步 写一个设置了宽高的盒子，它的作用就是在此区域显示我们的图表。</p><p>第三步 初始化echarts实例对象（给第二步的盒子生成一个对象）</p><p>第四步 写配置项和数据，配置项会决定图表的样式</p><p>第五步 配置项设置好了，我们需要把它赋予给echarts实例对象</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/692.png" alt="692"></p><p>1-这是课程中的笔记，因为视频是19年的，所以上图中的var现在可以写成const或者let，dom对象选择器的查找可以写成document.querySelector(‘选择器’)</p><p>2-配置项不需要我们自己去写，后面再学，直接去官网复制一个即可</p><p>3-<em>初始化实例对象，echarts有专门的初始化实例方法init，而不是new</em></p><p>4-这种引入的js，里面的方法等东西是没有提示的，需要自己写。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.box</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 第一步导入echarts的js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./代码/js/echarts.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 第二步，写一个盒子去存图表，注意必须写大小 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 初始化实例对象，echarts有专门的初始化实例方法init，而不是new</span>        <span class="token keyword">const</span> firstecharts <span class="token operator">=</span> echarts<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment">// 写入配置文件</span>        <span class="token keyword">const</span> option <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            xAxis<span class="token operator">:</span> <span class="token punctuation">&#123;</span>                data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'2022-05-24'</span><span class="token punctuation">,</span> <span class="token string">'2022-05-25'</span><span class="token punctuation">,</span> <span class="token string">'2022-05-26'</span><span class="token punctuation">,</span> <span class="token string">'2022-05-27'</span><span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            yAxis<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            series<span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    type<span class="token operator">:</span> <span class="token string">'candlestick'</span><span class="token punctuation">,</span>                    data<span class="token operator">:</span> <span class="token punctuation">[</span>                        <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token punctuation">[</span><span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">]</span>                    <span class="token punctuation">]</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// 将配置文件赋予实例对象</span>        firstecharts<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如图</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/693.png" alt="693"></p><p>需要生成不同的图，去官网实例中，复制不同的option配置代码即可。</p><h2 id="echarts相关配置"><a href="#echarts相关配置" class="headerlink" title="echarts相关配置"></a>echarts相关配置</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/694.png" alt="694"></p><p>例如</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/695.png" alt="695"></p><p><strong>grid配置</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/696.png" alt="696"></p><p>注意：option是一个对象，里面的内容，你添加其他属性的话，记得用逗号隔开。</p><p>1-其中我们设置的box大小是粉色框区域，grid网格区域是红色框，设置left等就是设置两个盒子的距离。</p><p>2-containlable是刻度标签，如上图的500，1000，1500等，设置为true的话，即使left设置为0%，这些数字也是会显示的</p><p>3-grid也是一个封装好的对象，left，right等是它的属性</p><p>4-echarts.js中有很多个对象，也有很多个属性，我们记住常用的就行，具体细节作用需要看开发文档，熟能生巧，即查即用。</p><p>5-修改上述图表的数据线的颜色就可以用color：[]来设置</p><p>6-xAxis和yAxis就是x/y轴的意思</p><p>7-tooltip配置中的trigger属性就是什么情况下触发显示出tip。</p><p><strong>series</strong></p><p>series英文是系列连续的意思</p><p>它是一个数组，里面有若干对象，对象就是图表中的数据，如上图中，删去一个数组内容，就会少一条线。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/697.png" alt="697"></p><p>1-series中name属性和legend中的data属性，数据要能对上，否则legend不会显示此name</p><p>stack堆叠属性</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/698.png" alt="698"></p><p>1-当stack属性设置为相同的值，那么就会数据堆叠，如上图，第二行的数据是220，但是线段却在340，因为堆叠加上了第一条线的120</p><p>2-当不需要堆叠，设置不同的属性值即可，或者直接删了这个属性。</p><p>我们一般在echarts官网中找到需要的实例，在网站在线修改option后，复制到编辑器中。</p><h2 id="数据可视化项目开发"><a href="#数据可视化项目开发" class="headerlink" title="数据可视化项目开发"></a>数据可视化项目开发</h2><h3 id="响应式适配"><a href="#响应式适配" class="headerlink" title="响应式适配"></a>响应式适配</h3><p>1-适配我们可以用媒体查询，也可以用2022最新的vw，vh，但是视频中是2019年，所以用的rem，因为现在各大项目也还有很多rem写法，所以这里我也就跟着视频写了。</p><p>2-cssrem是一个把px自动计算出rem的插件罢了，自己算也可以。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/699.png" alt="699"></p><p>flexible不一定把屏幕分为10等分，就像bootstrap默认分为12等分，这些都是默认值，可以修改的（去flexible.js的源码中改）</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/700.png" alt="700"></p><p>！important是防止此css被其他的css层叠掉，屏幕宽度在1024以下，字体全部42.66大小，因为害怕再小，图片文字就显示的不清楚了。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/701.png" alt="701"></p><h3 id="项目准备"><a href="#项目准备" class="headerlink" title="项目准备"></a>项目准备</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/702.png" alt="702"></p><blockquote><p>核心思路就是先盒子布局，然后把echarts的图表填入</p><p>盒子即可。</p></blockquote><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/703.png" alt="703"></p><blockquote><p>这里一个低等错误，引入js，用的link去引入，应该用script，真是愚蠢至极，还纳闷flexible不生效</p></blockquote><h3 id="边框图片"><a href="#边框图片" class="headerlink" title="边框图片"></a>边框图片</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/704.png" alt="704"></p><p>这里可以看到，每个小盒子上面两个角有一个都有一个边框，它们是相同样式，我们可以统一加一个背景图片吗？ 不行因为每个盒子大小不同，所以就需要用到边框图片。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/705.png" alt="705"></p><p><strong>怎么生成的？</strong></p><p>因为就四个角不同，所以需要把四个角切出来，其余部分让它拉伸即可。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/706.png" alt="706"></p><p><strong>边框图片的语法</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/707.png" alt="707"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ie=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>边框图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">div</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 15px solid pink<span class="token punctuation">;</span>            <span class="token property">border-image-source</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>images/border.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span>            <span class="token comment">/* 不要跟单位 */</span>            <span class="token property">border-image-slice</span><span class="token punctuation">:</span> 30 30 30 30<span class="token punctuation">;</span>            <span class="token comment">/* border-image-slice: 30; */</span>            <span class="token comment">/* 这个属性默认的是 border的宽度 但是 有区别，  这个是 边框图片的宽度 不会挤压文字 */</span>            <span class="token property">border-image-width</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>            <span class="token property">border-image-repeat</span><span class="token punctuation">:</span> round<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>加油<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意border-image-slice： 必须上右下左顺序，如果只写一个值，则四边都一样的值。</p><h2 id="写公共面板样式与概览区域"><a href="#写公共面板样式与概览区域" class="headerlink" title="写公共面板样式与概览区域"></a>写公共面板样式与概览区域</h2><p><strong>注意每个写了数据的地方，必须单独写标签，因为我们前端需要接收数据然后改变数据，有标签才能进行此改变操作。</strong></p><p>即上面的边框图片等，写公共样式，哪个盒子用到了，就给它加上这个样式的类名。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/708.png" alt="708"></p><p>注意</p><p>1-border-width 也有上右下左四个值</p><p>2-border-image-slice是没有单位的，它底层的机制就是这样，你在本电脑切好四个角记住像素值即可。</p><p>3-上图的51，38，20，132就是需要的部分，设置为边框宽度转为rem，因为是响应式网页，这个宽度是变化的。</p><p>4-边框宽度和图片设置好了后，边框长度就会跟着内容的大小去自动改变（我们设置的是边框宽度，长度并没有设置）</p><p>5-注意border-image-source：url()，这里是需要写一个url的</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">.panel &#123;    /* 先设置一个边框15px，下面的border-width会覆盖它 */    border: 15px solid pink;    border-width: 0.6375rem 0.475rem 0.25rem 1.65rem;    border-image-source: url(../images/border.png);    border-image-slice: 51 38 20 132;    margin-bottom: 0.25rem;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>概览区域效果如下</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/709.png" alt="709"></p><p>1-问题一：我的内容上图p标签1，为什么往下面挪了那么多？</p><p>答：因为我们设置的border-width就有那么宽，而且边框图片被切割下来的部分是透明的，所以就感觉那部分没内容，我们的真正内容也无法占据它（因为它是有一个边框存在的）</p><p>解决：用子绝父相，把所有内容再写入一个子盒子，然后left 和right 和bottom和top写负值，把子盒子拉伸，从而盖住边框图片的透明部分。</p><p>注意：绝对定位后，内容脱标，那么内容变多，盒子也不会变大，边框长度也就不变，所以后续还要设置或者指定一个高度。</p><p>2-问题二：当图片地址万一失效，border的颜色会变成我们设置的颜色，所以最好提前设置transparent透明</p><p>3-里面的内容用flex布局排列即可，使用ul加4个li。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/710.png" alt="710"></p><h2 id="监控区域"><a href="#监控区域" class="headerlink" title="监控区域"></a>监控区域</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/711.png" alt="711"></p><p>1-这里布局也很简单，重点在tab栏切换，在原生js已经学过了，tab栏与内容数量对应上，然后默认隐藏一个，点击按钮再通过js显示即可。</p><p>2-文字上下滚动动画，用animation和transform移动即可，注意无缝动画移动需要在后面追加一些元素，否则留白。</p><p>自我问题：我这个盒子移动上去了？下面的盒子不挤上来？</p><p>答：这里只是子盒子内容移动，外面还有父盒子占位呢。</p><p>3-鼠标移入动画停止，用hover和animation-play-state:paused即可</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ECharts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery_02day</title>
      <link href="archives/8dab0bcc.html"/>
      <url>archives/8dab0bcc.html</url>
      
        <content type="html"><![CDATA[<p><strong>学习目标</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/632.png" alt="632"></p><p><strong>获取位置</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/633.png" alt="633"></p><p>1-调用它们后，返回的是一个对象，里面存储了位置的值。</p><p>2-如果页面元素都没有定位，则position会找到最顶层元素位置，以它为参照物，即html</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/634.png" alt="634"></p><p><strong>滚动距离</strong></p><p>这些个的意思和dom是完全一样的，但是写法不同。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/635.png" alt="635"></p><p><strong>显示和隐藏动画</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/636.png" alt="636"></p><p>这三个方法的原理是内置了设置了元素的display属性。</p><p>设置持续时间，就是动画的时间，以毫秒计算，在动画过程中，是通过行内不断改变元素大小和透明度等实现。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/637.png" alt="637"></p><p><strong>淡出和淡入动画</strong></p><p>用法和动画的显示隐藏大致一样，只是动画效果不一样。</p><p>淡入和淡出不出时间，也会自带动画时间。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/638.png" alt="638"></p><p><strong>展开和收起动画</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/639.png" alt="639"></p><p>slide滑动的，逐渐的</p><p>注意down是展开，up是收起</p><p><strong>三个动画分别是隐藏显示，淡入淡出，展开收起，它们的原理基本相同，只是动画效果不同。</strong></p><p>再者就是动画返回的都是原对象，所以可以使用链式编程。</p><p><strong>动画队列及停止方法。</strong></p><p>问题：如网页下滑出现返回顶部的控件，当我们上下反复快速滑动，那么这个返回顶部控件的动画会有显示和不显示来回切换（我不滑动了，动画还在来回执行）和需求效果不符合，非常不美观，所以我们需要停止它，就用到了停止方法。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/640.png" alt="640"></p><p>stop会停止当前动画运行，然后继续执行后续动画</p><p>stop(true)会停止在当前动画执行到的样子，不执行后续动画</p><p>stop(true,true)会直接把动画跳到停止在当前动画的结束状态的样子，不执行后续动画。</p><p><strong>自定义动画</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/641.png" alt="641"></p><p>自定义动画使用animation方法，因为自定义传入的键值对较多，所以用对象的形式传入。</p><p><strong>插入节点</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/642.png" alt="642"></p><p><strong>回调函数</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/643.png" alt="643"></p><p>注意回调函数，总是写在最后面。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/644.png" alt="644"></p><p>我们可以通过回调函数来知道此动画有没有被执行完毕，因为动画执行完毕后才会调用设置的回调函数。</p><p>$(this)可以把this的dom对象转换为jquery对象。</p><p><strong>延迟动画</strong></p><p>通俗讲就是等多少毫秒，这个动画再执行。</p><p>$(‘选择器’).delay(延迟时间).动画方法()</p><p>与动画的区别就算前面加了个delay()方法</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/645.png" alt="645"></p><p><strong>获取尺寸</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/646.png" alt="646"></p><p><strong>事件参数</strong></p><p>事件参数和dom中的意义也完全一样，如判断键盘按下事件，是哪个键盘按的，就可以加一个事件参数e，对象e中会记录一个属性，让你知道这一次按的是哪个键。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/647.png" alt="647"></p><p><strong>删除节点</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/648.png" alt="648"></p><p>注意这个remove()方法中jquery中才有，别在原生dom中也去乱用。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/649.png" alt="649"></p><p><strong>事件委托</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/650.png" alt="650"></p><p>事件委托的原理是利用了事件冒泡</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/651.png" alt="651"></p><p>如图，事件委托可以直接给父级添加事件，让子元素不需要再进行事件绑定，优化了代码。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery_01day</title>
      <link href="archives/9f1ea422.html"/>
      <url>archives/9f1ea422.html</url>
      
        <content type="html"><![CDATA[<p>jquery的基本语法内容和思路与原生js的bom中差不多，只是写法不同。但jquery是一个js库，可以通过调用，用极少代码写出和dom一样的效果。</p><p> jquery在如今（2022年）就业开发岗位已经被淘汰，但一些老项目还在用，有时需要我们修改，所以我们需要学习，但是了解即可。</p><p>第一天和第二天就是学基础语法，和dom差不多，学了又不精反而可能把两个语法记混，重点在第三天利用一些jquery插件快速实现功能。</p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/603.png" alt="603"></p><p><strong>什么是jQuery</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/604.png" alt="604"></p><p>jQuery是一个js库，绝大多数是用来简化dom操作，利用jquery可以少些很多dom代码。</p><p><strong>使用步骤</strong></p><p>1-官网下载jquery的包</p><p>其中有jquery.js和jquery.min.js两个版本，前面的就是代码规范，后面的是代码压缩后的文件，非常凌乱，但是代码和效果功能是一样的。</p><p>2-在需要使用jquery的页面引入，和bootstrap差不多</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/605.png" alt="605"></p><h2 id="jquery的选择器"><a href="#jquery的选择器" class="headerlink" title="jquery的选择器"></a>jquery的选择器</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/606.png" alt="606"></p><p><strong>使用</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/607.png" alt="607"></p><h2 id="jquery对象"><a href="#jquery对象" class="headerlink" title="jquery对象"></a>jquery对象</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/608.png" alt="608"></p><p>jquery中语法获取的对象不是原生的dom对象，而是jquery对象</p><p>jquery的语法和原生dom语法不能混用，因为它们完全是两个不同的东西。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/609.png" alt="609"></p><p>1-为了区分jquery和dom对象的不同，一般jquery获取的对象名前面加一个$来区别</p><p>2-jquery获取的对象里面有很多种方法，上面用到的.css就是方法的一种。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/610.png" alt="610"></p><p>1-jquery对象无法使用dom的语法来操作，dom对象也无法用jquery语法来操作</p><p>2-$获取的对象，把条件符合的所有元素都获取过来了</p><p><strong>用jquery对象绑定事件</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/611.png" alt="611"></p><p>注意这里把dom对象的this直接给$，然后转化为jquery可以操作的的对象。</p><p><strong>链式编程</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/612.png" alt="612"></p><p>优点：避免重复书写需要绑定事件的jquery对象</p><p>原理：如上图调用focus方法后，会返回一个值，这个返回值还是原$(‘.text’)对象，因为对象不变，所以可以继续下一个方法的调用。</p><p>如下图，text是等于text2的</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/613.png" alt="613"></p><p>新知识：change事件，内容发生改变时使用。</p><p><strong>内容操纵</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/614.png" alt="614"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/615.png" alt="615"></p><p>1-html方法解析标签，text方法不解析标签，只解析文字</p><p>2-取值操作后无法继续使用链式编程，因为取值操作后返回的是一个值，并不是原来的对象。</p><p><strong>案例-计数器</strong></p><p>这些在bom中都学过，只是dom和jquery的语法书写方法不同。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/616.png" alt="616"></p><h2 id="过滤方法"><a href="#过滤方法" class="headerlink" title="过滤方法"></a>过滤方法</h2><p>我们获取jquery元素后，是把选择器等符合条件的元素全部取中了，那么我只想操作其中一个怎么办呢？所以有了过滤方法，把jquery对象中的dom元素再次筛选</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/617.png" alt="617"></p><p>1-注意eq索引和数组一样，是从0开始的。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/618.png" alt="618"></p><p><strong>样式操作</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/619.png" alt="619"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/620.png" alt="620"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/621.png" alt="621"></p><p>1-css样式数字类样式，不写单位的话，默认为px</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/622.png" alt="622"></p><p><strong>属性操纵</strong></p><p>attr属性的意思。</p><p>属性操作和css操作很相似。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/623.png" alt="623"></p><p>当是赋值操作，则attr方法中传递两个参数</p><p>当是取值，则只需要一个参数，就算被取值的属性名。</p><p>removeAttr()删除属性的方法</p><p><strong>简易轮播图</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/624.png" alt="624"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ie=edge<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>图片切换<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./css/index.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/logo.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 图片 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cover<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/1.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token comment">&lt;!-- 左箭头 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/prev.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 右箭头 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/next.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 导入jQuery --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./jquery/jquery-3.5.1.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">      <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">1</span>      <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.center a'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">mouseenter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'transform'</span><span class="token punctuation">,</span> <span class="token string">'scale(1.1)'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">mouseleave</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'transform'</span><span class="token punctuation">,</span> <span class="token string">'scale(1)'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.center a'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'display'</span><span class="token punctuation">,</span> <span class="token string">'none'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            index<span class="token operator">--</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">./images/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>index<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.png</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.right'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'display'</span><span class="token punctuation">,</span> <span class="token string">'block'</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'display'</span><span class="token punctuation">,</span> <span class="token string">'none'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'别点啦,到底啦!'</span><span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.center .right'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          index<span class="token operator">++</span>          <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">./images/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>index<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.png</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>          <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.left'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'display'</span><span class="token punctuation">,</span> <span class="token string">'block'</span><span class="token punctuation">)</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'display'</span><span class="token punctuation">,</span> <span class="token string">'none'</span><span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'别点啦,到头啦!'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span> # css* &#123;  margin: 0;  padding: 0;&#125;html,body,#mask &#123;  width: 100%;  height: 100%;&#125;#mask &#123;  background-color: #c9c9c9;  position: relative;&#125;#mask .center &#123;  position: absolute;  background-color: #fff;  left: 50%;  top: 50%;  transform: translate(-50%, -50%);  padding: 10px;&#125;#mask .center .title &#123;  position: absolute;  display: flex;  align-items: center;  height: 56px;  top: -61px;  left: 0;  padding: 5px;  padding-left: 10px;  padding-bottom: 0;  color: rgba(175, 47, 47, 0.8);  font-size: 26px;  font-weight: normal;  background-color: white;  padding-right: 35px;  z-index: 2;&#125;#mask .center .title img &#123;  height: 40px;  margin-right: 10px;&#125;#mask .center .title::before &#123;  content: '';  position: absolute;  width: 0;  height: 0;  border: 65px solid;  border-color: transparent transparent white;  top: -65px;  right: -65px;  z-index: 1;&#125;#mask .center > img &#123;  display: block;  width: 640px;  height: 360px;&#125;#mask .center a &#123;  text-decoration: none;  width: 45px;  height: 100px;  position: absolute;  top: 140px;  vertical-align: middle;  opacity: 0.5;  transition: 0.2s;&#125;#mask .center a :hover &#123;  opacity: 0.8;&#125;#mask .center .left &#123;  left: 15px;  text-align: left;  padding-right: 10px;  border-top-right-radius: 10px;  border-bottom-right-radius: 10px;&#125;#mask .center .right &#123;  right: 15px;  text-align: right;  padding-left: 10px;  border-top-left-radius: 10px;  border-bottom-left-radius: 10px;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>操作value</strong></p><p>操作value的方法是val()</p><p>取值不需要传参，赋值给小括号内写赋值内容即可。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/625.png" alt="625"></p><p><strong>查找方法</strong></p><p>和bom里面的子节点，父节点，兄弟节点很像</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/626.png" alt="626"></p><p>其中父元素只有一个，方法也不需要传入参数。</p><p>children()是拿到所有孩子元素，小括号内写选择器，就可以获取指定子元素。</p><p>sbling()拿到的是同一个父元素下的兄弟元素，不包括自己，同样小括号内能指定单个元素。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/627.png" alt="627"></p><p>find()是拿到所有后代元素，因为通常很多，所以一般在小括号内通过选择器指定。</p><p><strong>类名操纵</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/628.png" alt="628"></p><p>其中注意hasClass是判断是否有此类名，有则返回true，无则返回fasle</p><p>toggleClass和bom一样，有此类名则移除，没有则添加。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/629.png" alt="629"></p><p><strong>on/off和one方法处理dom事件</strong></p><p>前面事件不是好好的吗？用起来也简单，为什么多此一举呢？</p><p>因为前面的操作对于没有提供方法的事件无法提供绑定，如input事件。jqeury并没有提供input事件方法</p><p>或者一些高级操作，如绑定后设置只能触发一次也无法做到</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/630.png" alt="630"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/631.png" alt="631"></p><p>.one()注册的事件只会被执行一次，执行后再触发事件源也不会再被执行</p><p>.off()会移除调用它的对象的所有事件</p><p>.off(‘事件名’)则会移除指定事件</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery_03day</title>
      <link href="archives/35176ca9.html"/>
      <url>archives/35176ca9.html</url>
      
        <content type="html"><![CDATA[<p>前面两天的内容和原生dom差不多，只是jquery提供了自己的方法，书写方式也不同，我没有自己写案例，因为本就了解一下，怕把原生dom和jquery的用法记混了</p><p>jquery的重点在第三天，学习插件，快速写出需求功能。</p><p><strong>目标</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/652.png" alt="652"></p><p><strong>入口函数</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/653.png" alt="653"></p><p>其实原生写法现在是addEventListener，这个教程是20年的，也有点老了。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/654.png" alt="654"></p><p>一个是dom加载完成就执行，一个是整个window加载完成包括外部资源等再执行，所以$(document).ready(function （）{})执行的更快，因为window是包括document的。</p><blockquote><p>window与document<br>window指浏览器的窗口，document指浏览器窗口中加载的dom元素。在浏览器中，当其中加载的页面超过一屏时，$(window).height()与$(document).height()的值是不等的</p><p>load与ready<br>load事件在jquery中主要用来代替原生的window.onload</p><p>load只能用在两个场景下：</p><p>window对象上：$(window).load(function(){})<br>带有src的元素：如：$(‘img’).load(function(){})<br>除此之外，任何元素都没有load事件，如$(document).load()是错误的写法，不会执行。</p><p>load事件需要页面完全加载完才可以触发事件，所谓的完全加载完，指dom结构加载完毕和所有的链接加载完。比如页面中有大量的图片，必须等每一个图片都加载完，才叫完全加载完毕。</p><p>不过，load事件跨浏览器兼容性很差，不推荐使用load事件</p><p>ready事件则可以加在任意元素上，如$(window).ready(fn),$(document).ready(fn),$(‘div’).ready(fn)等</p><p>ready事件不要求等待页面完全加载完，只需要dom结构加载完就可以触发。</p><p>ready事件可以同时注册多个，执行时按照事件注册的先后顺序进行。<br>原文链接：<a href="https://blog.csdn.net/qq_41192335/article/details/82025172">https://blog.csdn.net/qq_41192335/article/details/82025172</a></p></blockquote><p>使用场景：获取一个图片的尺寸，如果我们直接获取，因为图片没有加载完，所以无法取到，当我们设置图片加载完再执行获取语句，就可以取到。</p><h2 id="轮播图插件slick"><a href="#轮播图插件slick" class="headerlink" title="轮播图插件slick"></a>轮播图插件slick</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/655.png" alt="655"></p><p>插件有很多种，可以快捷的实现功能，比如轮播图插件也有很多种，就像聊天，可以用qq也可以用微信很多个软件都可以，但是我们只学最稳定最好用的那一个。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/656.png" alt="656"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/657.png" alt="657"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/658.png" alt="658"></p><pre class="line-numbers language-none"><code class="language-none">slick文档：github.com&#x2F;kenwheeler&#x2F;slick<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>jQuery对象名.slick()即可</p><p>如果插件的样式和你需要的有偏差，我们可以直接再写一个内嵌css覆盖即可。</p><p><strong>插件的配置不需要去背，随用随查即可。</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>03-轮播图插件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./slick/slick.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./slick/slick-theme.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment">&lt;!-- 自己的样式 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">      <span class="token selector">body</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">.slider</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 640px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 360px<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">.control</span> <span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">.prev,      .next</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">.slick-dots</span> <span class="token punctuation">&#123;</span>        <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">.slick-dots li.slick-active button:before</span> <span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> yellowgreen<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>03-轮播图插件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>学习使用jQuery的轮播图插件slick<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 测试用标签 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!-- 轮播图区域 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/1.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/2.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/3.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/4.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/5.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!-- 自定义左右箭头 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>control<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prev<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上一个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>下一个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./jquery/jquery-3.5.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./slick/slick.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">      <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.slider'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slick</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token comment">// autoplay: true,</span>        <span class="token comment">// arrows: false,</span>        prevArrow<span class="token operator">:</span> <span class="token string">'.prev'</span><span class="token punctuation">,</span>        dots<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下一个和上一个等按钮是自己设置的，最后在prevArroy中传入选择器即可。</p><h2 id="懒加载插件lazyload"><a href="#懒加载插件lazyload" class="headerlink" title="懒加载插件lazyload"></a>懒加载插件lazyload</h2><p>懒加载插件，可以让图片等资源，用户用到了再加载，可以减少服务器压力，节省用户的流量。</p><p>1-下包：官网下载即可</p><p>2-导包：先导入jquery再导入插件，最后导入css（如果需要，此插件没有）</p><p>3-用包：看官方文档</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/659.png" alt="659"></p><p>jquery对象名.lazyload()即可</p><p>注意：使用懒加载的资源，需要把src属性改成data-original作为图片地址，src属性变成了占位图片地址。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">文档：github.com/tuupola/lazyload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="全屏滚动插件fullpage"><a href="#全屏滚动插件fullpage" class="headerlink" title="全屏滚动插件fullpage"></a>全屏滚动插件fullpage</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/660.png" alt="660"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/661.png" alt="661"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/662.png" alt="662"></p><p>div结构必须要对上，否则插件不会生效，如类名必须用section</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/663.png" alt="663"></p><p>锚链接可以让我们地址栏随着页面变化而变化，当我们刷新就不会再回到默认页，而是当前页。</p><p>afterLoad会返回两个参数，一个是锚链接一个是当前是第几页。</p><h2 id="提交事件"><a href="#提交事件" class="headerlink" title="提交事件"></a>提交事件</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/664.png" alt="664"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/665.png" alt="665"></p><p>可以直接让表单的提交返回fasle，就不会再自动刷新页面，我们提供事件参数获取到数据后，再自己提交。</p><h2 id="日期选择器datapicker"><a href="#日期选择器datapicker" class="headerlink" title="日期选择器datapicker"></a>日期选择器datapicker</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/666.png" alt="666"></p><p>此插件默认英文，我们需要导入语言包。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/667.png" alt="667"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/668.png" alt="668"></p><h2 id="表单验证插件validate"><a href="#表单验证插件validate" class="headerlink" title="表单验证插件validate"></a>表单验证插件validate</h2><p>表单验证，在dom中有正则表达式等来验证，作用是在客户端就判断我完成用户的输入规范，减少服务器的压力。 但是原生来写未免很繁琐，所以这里有了validate插件</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/669.png" alt="669"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/670.png" alt="670"></p><p><strong>注意以下是两个自定义属性。</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/671.png" alt="671"></p><p>下面两个自定义属性，会在验证失败时，在我们设置的（通过id选择器）指定位置显示错误内容。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/672.png" alt="672"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>10-表单验证<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">      <span class="token selector">body</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 0 30px<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">p</span> <span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">ul</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">li</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 10px 0<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token selector">span.error</span> <span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>10-表单验证插件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>基于 jQuery 的表单验证插件，验证用户在表单中填写的内容。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 测试用标签 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          昵称:          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>            <span class="token attr-name">data-required</span>            <span class="token attr-name">data-describedby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nickname-error<span class="token punctuation">"</span></span>            <span class="token attr-name">data-description</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nickname<span class="token punctuation">"</span></span>            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nickname<span class="token punctuation">"</span></span>          <span class="token punctuation">/></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nickname-error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          密码:          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>            <span class="token attr-name">data-required</span>            <span class="token attr-name">data-pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.&#123;6,&#125;<span class="token punctuation">"</span></span>            <span class="token attr-name">data-describedby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password-error<span class="token punctuation">"</span></span>            <span class="token attr-name">data-description</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>          <span class="token punctuation">/></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password-error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>              <span class="token attr-name">data-required</span>              <span class="token attr-name">data-describedby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>agree-error<span class="token punctuation">"</span></span>              <span class="token attr-name">data-description</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>agree<span class="token punctuation">"</span></span>              <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span>              <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>              <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>agree<span class="token punctuation">"</span></span>            <span class="token punctuation">/></span></span>            同意注册协议          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>agree-error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 导入jQuery --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./jquery/jquery-3.5.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 导入 validate插件 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./jquery-validate/jquery-validate.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">      <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'form'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        sendForm<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        description<span class="token operator">:</span> <span class="token punctuation">&#123;</span>          password<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            required<span class="token operator">:</span> <span class="token string">'密码不能为空!'</span><span class="token punctuation">,</span>            pattern<span class="token operator">:</span> <span class="token string">'密码的长度必须大于等于6!'</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          nickname<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            required<span class="token operator">:</span> <span class="token string">'昵称不能为空!'</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          agree<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            required<span class="token operator">:</span> <span class="token string">'必须同意用户协议!'</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function">valid</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'验证成功'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function">invalid</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'验证失败'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="克隆对象的方法"><a href="#克隆对象的方法" class="headerlink" title="克隆对象的方法"></a>克隆对象的方法</h2><p>jquery对象.clone()只克隆元素</p><p>jquery对象.clone(true)除了克隆元素，还克隆事件。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/673.png" alt="673"></p><p><strong>获取dom对象</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/674.png" alt="674"></p><p>为什么需要获取dom对象呢？因为jquery并没有封装所有dom方法。也就是说一些功能必须用原生对象来操作，</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/675.png" alt="675"></p><p>可以看到play方法找不到，因为播放按钮的jquery对象中没有封装这个play方法。</p><p>所以我们可以使用 jquery对象.get(索引)或者jquery对象[索引]来得到dom对象再进行操作。（因为这个对象获取了很多个符合条件的元素对象，所以需要使用索引）</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/676.png" alt="676"></p><h2 id="表单序列化"><a href="#表单序列化" class="headerlink" title="表单序列化"></a>表单序列化</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/677.png" alt="677"></p><p>注意必须设置表单的name值，此serialize()方法才会生效。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/678.png" alt="678"></p><h2 id="jquery插件机制"><a href="#jquery插件机制" class="headerlink" title="jquery插件机制"></a>jquery插件机制</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/679.png" alt="679"></p><p>给jquery添加方法，就是人工添加一个方法到jquery大对象中，以后通过$()获取的对象，都能使用这个方法。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/680.png" alt="680"></p><h2 id="版本差异"><a href="#版本差异" class="headerlink" title="版本差异"></a>版本差异</h2><p>不考虑ie低版本浏览器的兼容性直接用最新的即可</p><p>如果需要考虑兼容性，就使用1打头的版本。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/681.png" alt="681"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dom&amp;Bom_03Day</title>
      <link href="archives/cdfefaa1.html"/>
      <url>archives/cdfefaa1.html</url>
      
        <content type="html"><![CDATA[<h2 id="节点操作"><a href="#节点操作" class="headerlink" title="节点操作"></a>节点操作</h2><h3 id="DOM节点"><a href="#DOM节点" class="headerlink" title="DOM节点"></a>DOM节点</h3><p>js获取过来的节点就是对象（你不获取它也在那，只是你用不了，document对象包含了如下图所有对象），我们以前学的就是获取元素节点。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/562.png" alt="562"></p><p>节点有元素节点，属性节点，文本节点，重点在元素节点</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/563.png" alt="563"></p><p>节点可以让我们更好的认识元素间的关系，就不需要再获取多个元素来操作事件。获取一个就行了，然后利用元素间的关系去获取另一个元素节点（获取过来了就可以使用这个对象）。</p><h3 id="查找节点"><a href="#查找节点" class="headerlink" title="查找节点"></a>查找节点</h3><p><strong>子找父</strong> ： 子元素对象.parentNode</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/566.png" alt="566"></p><p>node就是节点的意思。注意只找最近一级的父节点，父节点没有就返回null；不像绝对定位父节点没有再去找爷爷。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/564.png" alt="564"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/565.png" alt="565"></p><p><strong>优点：</strong>如上图，节省了用querySelector获取father的语句；son.parentNode就是father对象。</p><p><strong>父找子节点</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/567.png" alt="567"></p><p>childNodes是获取所有子节点，包含了无用的换行等，开发中基本上不用，我们只用 父元素.children获取子元素节点（注意返回的是一个伪数组，和querySelectorAll一样）</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/568.png" alt="568"></p><p><strong>兄弟节点</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/569.png" alt="569"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/570.png" alt="570"></p><h3 id="增加节点"><a href="#增加节点" class="headerlink" title="增加节点"></a>增加节点</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/571.png" alt="571"></p><p><strong>创建节点</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/572.png" alt="572"></p><p>上图是创造标签，那么在浏览器中就已经准备好这个div标签对象了，但是我们没告诉它放哪里，所以页面不会显示。</p><p><strong>插入节点</strong></p><p>往父元素后追加   父元素.appendChild(要插入的元素)</p><p>往父元素中某个子元素前面加， 父元素.insertbefore(要插入的元素，在哪个元素前面)</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/573.png" alt="573"></p><p>注意</p><p>1-生成的元素对象，因为只创建了一个，所以只能被追加到一个地方，后面的语句覆盖前面的语句。</p><p>2-你像追加多少个，就要生成多少个，哪怕生成的对象内容一模一样。</p><p>问题：</p><p>我生成了多个一样的li标签，不会冲突吗？</p><p>不会，它们是标签又不是变量，按生成顺序存储中浏览器内存中，但是它好像无法打印出来，至于哪一个是哪一个，视频中pink老师也没说，看后面会不会学。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/574.png" alt="574"></p><p><strong>案例</strong></p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/575.png" alt="575"></p><p>1-原先这个案例是把数组对象中的数据，通过for循环，使用document.write打印出来，这是不科学的，只是为了学习。（因为html和js写在一起了，结构混乱）</p><p>2-实际中，应该是先准备好一个ul结构，根据数据的个数创建新的li，然后再完善li的内容，再插入到ul中</p><p>3-完善内容用innerHTML即可。</p><p>所以工作中我们只需要先写一个li，把css等样式写好，其他的li数据来了，用js往后面复制就行了。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ie=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>学车在线首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 4. box核心内容区域开始 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box w<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box-hd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>精品推荐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>查看全部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box-bd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!-- &lt;li>                    &lt;img src="./images/course01.png" alt="">                    &lt;h4>                        Think PHP 5.0 博客系统实战项目演练                    &lt;/h4>                    &lt;div class="info">                        &lt;span>高级&lt;/span> • &lt;span> 1125&lt;/span>人在学习                    &lt;/div> --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span>                src<span class="token operator">:</span> <span class="token string">'images/course01.png'</span><span class="token punctuation">,</span>                title<span class="token operator">:</span> <span class="token string">'Think PHP 5.0 博客系统实战项目演练'</span><span class="token punctuation">,</span>                num<span class="token operator">:</span> <span class="token number">1125</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                src<span class="token operator">:</span> <span class="token string">'images/course02.png'</span><span class="token punctuation">,</span>                title<span class="token operator">:</span> <span class="token string">'Android 网络动态图片加载实战'</span><span class="token punctuation">,</span>                num<span class="token operator">:</span> <span class="token number">357</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                src<span class="token operator">:</span> <span class="token string">'images/course03.png'</span><span class="token punctuation">,</span>                title<span class="token operator">:</span> <span class="token string">'Angular2 大前端商城实战项目演练'</span><span class="token punctuation">,</span>                num<span class="token operator">:</span> <span class="token number">22250</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                src<span class="token operator">:</span> <span class="token string">'images/course04.png'</span><span class="token punctuation">,</span>                title<span class="token operator">:</span> <span class="token string">'Android APP 实战项目演练'</span><span class="token punctuation">,</span>                num<span class="token operator">:</span> <span class="token number">389</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                src<span class="token operator">:</span> <span class="token string">'images/course05.png'</span><span class="token punctuation">,</span>                title<span class="token operator">:</span> <span class="token string">'UGUI 源码深度分析案例'</span><span class="token punctuation">,</span>                num<span class="token operator">:</span> <span class="token number">124</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                src<span class="token operator">:</span> <span class="token string">'images/course06.png'</span><span class="token punctuation">,</span>                title<span class="token operator">:</span> <span class="token string">'Kami2首页界面切换效果实战演练'</span><span class="token punctuation">,</span>                num<span class="token operator">:</span> <span class="token number">432</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                src<span class="token operator">:</span> <span class="token string">'images/course07.png'</span><span class="token punctuation">,</span>                title<span class="token operator">:</span> <span class="token string">'UNITY 从入门到精通实战案例'</span><span class="token punctuation">,</span>                num<span class="token operator">:</span> <span class="token number">888</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                src<span class="token operator">:</span> <span class="token string">'images/course08.png'</span><span class="token punctuation">,</span>                title<span class="token operator">:</span> <span class="token string">'我会变，你呢？'</span><span class="token punctuation">,</span>                num<span class="token operator">:</span> <span class="token number">590</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                src<span class="token operator">:</span> <span class="token string">'images/course08.png'</span><span class="token punctuation">,</span>                title<span class="token operator">:</span> <span class="token string">'我会变，你呢？'</span><span class="token punctuation">,</span>                num<span class="token operator">:</span> <span class="token number">590</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>        <span class="token comment">// 先获取父元素ul</span>        <span class="token keyword">let</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span>        <span class="token comment">// 根据数据的个数,创造出多少个数的li元素对象</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> li <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span>            <span class="token comment">// 完善每个li的内容</span>            li<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;img src=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> alt="">                    &lt;h4>                        </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">                    &lt;/h4>                    &lt;div class="info">                        &lt;span>高级&lt;/span> • &lt;span> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>num<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/span>人在学习                    &lt;/div></span><span class="token template-punctuation string">`</span></span>            ul<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 1200px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #f3f5f7<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">li</span> <span class="token punctuation">&#123;</span>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">a</span> <span class="token punctuation">&#123;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.clearfix:before,.clearfix:after</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span>table<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>  <span class="token selector">.clearfix:after</span> <span class="token punctuation">&#123;</span>    <span class="token property">clear</span><span class="token punctuation">:</span>both<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.clearfix</span> <span class="token punctuation">&#123;</span>     *<span class="token property">zoom</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>    <span class="token selector">.header</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span>    <span class="token comment">/* background-color: pink; */</span>    <span class="token comment">/* 注意此地方会层叠 w 里面的margin */</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 30px auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.logo</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 198px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.nav</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.nav ul li</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.nav ul li a</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0 10px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #050505<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token selector">.nav ul li a:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">border-bottom</span><span class="token punctuation">:</span> 2px solid #00a4ff<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #00a4ff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* search搜索模块 */</span><span class="token selector">.search</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 412px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.search input</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 345px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #00a4ff<span class="token punctuation">;</span>    <span class="token property">border-right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #bfbfbf<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">padding-left</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.search button</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span>    <span class="token comment">/* 按钮button默认有个边框需要我们手动去掉 */</span>    <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>images/btn.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.user</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span>    <span class="token property">margin-right</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* banner区域 */</span><span class="token selector">.banner</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 421px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #1c036c<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.banner .w</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 421px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>images/banner2.png<span class="token punctuation">)</span></span> no-repeat top center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.subnav</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 190px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 421px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.subnav ul li</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 45px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 45px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.subnav ul li a</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.subnav ul li a span</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.subnav ul li a:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #00a4ff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.course</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 230px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token comment">/* 浮动的盒子不会有外边距合并的问题 */</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.course h2</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #9bceea<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.bd</span> <span class="token punctuation">&#123;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.bd ul li</span> <span class="token punctuation">&#123;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 14px 0<span class="token punctuation">;</span>    <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.bd ul li h4</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #4e4e4e<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.bd ul li p</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #a5a5a5<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.bd .more</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 38px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #00a4ff<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 38px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #00a4ff<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 700<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 精品推荐模块 */</span><span class="token selector">.goods</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 2px 3px 3px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/* 行高会继承， 会继承给3个孩子 */</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.goods h3</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #00a4ff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.goods ul</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.goods ul li</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.goods ul li a</span> <span class="token punctuation">&#123;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0 30px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #050505<span class="token punctuation">;</span>    <span class="token property">border-left</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mod</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>    <span class="token property">margin-right</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #00a4ff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box-hd</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 45px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box-hd h3</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #494949<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box-hd a</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #a5a5a5<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">margin-right</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 把li 的父亲ul 修改的足够宽一行能装开5个盒子就不会换行了 */</span><span class="token selector">.box-bd ul</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 1225px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box-bd ul li</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 228px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 270px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">margin-right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all .3s<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token selector">.box-bd ul li:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">top</span><span class="token punctuation">:</span> -8px<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 2px 2px 2px 2px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box-bd ul li img</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box-bd ul li h4</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 20px 20px 20px 25px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #050505<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box-bd .info</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0 20px 0 25px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #999<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box-bd .info span</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ff7c2d<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* footer 模块 */</span><span class="token selector">.footer</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 415px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.footer .w</span> <span class="token punctuation">&#123;</span>    <span class="token property">padding-top</span><span class="token punctuation">:</span> 35px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.copyright</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.copyright p</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 20px 0 15px 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.copyright .app</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 118px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 33px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #00a4ff<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 33px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #00a4ff<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.links</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.links dl</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.links dl dt</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.links dl dd a</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>复制节点</strong></p><p>  <img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/576.png" alt="576"></p><p>在移动端第二天讲过，走马灯因为是动画移动transform：translate（）,在infinite后，当一轮走完继续第二轮循环的时候，中间会出现留白，所以需要复制几张去填充。</p><p>学完js后就可以用克隆节点来复制。</p><p>1-当布尔值为true则把后代节点全部克隆，如ul克隆，会把里面的li等也全部复制过来</p><p>2-当为false则这克隆一个ul标签</p><p>3-默认为false</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/577.png" alt="577"></p><h3 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/578.png" alt="578"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/579.png" alt="579"></p><h2 id="时间对象"><a href="#时间对象" class="headerlink" title="时间对象"></a>时间对象</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/580.png" alt="580"></p><h3 id="实例化"><a href="#实例化" class="headerlink" title="实例化"></a>实例化</h3><p>什么叫实例化？当遇到一个关键词new</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/582.png" alt="582"></p><p>先前的数组和对象其实我们都是写的缩写，完整写法也需要实例化new</p><p>当一个类，new之后会生成一个对象，后面js高级会讲。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/581.png" alt="581"></p><p>注意：</p><p>1-new Date()的D是大写</p><p>2-获取指定时间里面必须是写时间，不能写一些无意义的字符串，否则返回Invalid Date</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/583.png" alt="583"></p><p>如上图，返回的时间有英文星期几，还有月份等等，但我们通常只需要年份或者月份等其中一个，怎么办 呢？所以提供了很多时间对象的方法。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/584.png" alt="584"></p><p>还有一个方法toLocalString（）可以生成本地时间</p><p>注意</p><p>1-月份和星期是返回0-11和0-6</p><p>2-月份我们取得后加1即可，如1月，它得到的就是0月</p><p>3-但是星期，星期日，它获取得到0，星期一得到1，所以我们要把0改成星期日即可（使用数组）</p><p>4-获取年是getFullYear()，时分秒单词后要加s</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/585.png" alt="585"></p><p>注意这些都是时间对象的方法，时间对象必须先使用new Data()实例化出来</p><p>如上图时间对象被声明为date，则它们的方法为   date.方法名()</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/586.png" alt="586"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">div</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 因为获取星期的时间对象方法取值为0-6,星期天为0</span>        <span class="token keyword">let</span> days <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'星期天'</span><span class="token punctuation">,</span> <span class="token string">'星期一'</span><span class="token punctuation">,</span> <span class="token string">'星期二'</span><span class="token punctuation">,</span> <span class="token string">'星期三'</span><span class="token punctuation">,</span> <span class="token string">'星期四'</span><span class="token punctuation">,</span> <span class="token string">'星期五'</span><span class="token punctuation">,</span> <span class="token string">'星期六'</span><span class="token punctuation">]</span>        <span class="token comment">// 获取div对象</span>        <span class="token keyword">let</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span>        <span class="token comment">// 提前调用一次函数,防止定时器的第一秒内容留白</span>        <span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">// 每一秒重新获取时间,保证是最新时间</span>        <span class="token function">setInterval</span><span class="token punctuation">(</span>getTime<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>        <span class="token keyword">function</span> <span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 实例化时间对象</span>            <span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> year <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> month <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> dates <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> hours <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> minutes <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> seconds <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> day <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            div<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">当前时间为  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>year<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>month<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>dates<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>hours<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>minutes<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>seconds<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>days<span class="token punctuation">[</span>day<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/588.png" alt="588"></p><p>时间戳就是1970年1月1日00分00秒到现在的毫秒数</p><p>它常用于倒计时，如还有多久下课，用下课时间的时间戳减去此时时间的时间戳，再把毫秒转换为时分秒即可。</p><p><strong>获取当前时间戳有三种方法，如下图</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/587.png" alt="587"></p><p><strong>案例</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/589.png" alt="589"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">div</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        18:00下课    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        距离下课时间还有    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>daojishi<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 因为获取星期的时间对象方法取值为0-6,星期天为0</span>        <span class="token keyword">let</span> days <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'星期天'</span><span class="token punctuation">,</span> <span class="token string">'星期一'</span><span class="token punctuation">,</span> <span class="token string">'星期二'</span><span class="token punctuation">,</span> <span class="token string">'星期三'</span><span class="token punctuation">,</span> <span class="token string">'星期四'</span><span class="token punctuation">,</span> <span class="token string">'星期五'</span><span class="token punctuation">,</span> <span class="token string">'星期六'</span><span class="token punctuation">]</span>        <span class="token comment">// 获取div对象</span>        <span class="token keyword">let</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span>        <span class="token comment">// 提前调用一次函数,防止定时器的第一秒内容留白</span>        <span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">// 每一秒重新获取时间,保证是最新时间</span>        <span class="token function">setInterval</span><span class="token punctuation">(</span>getTime<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>        <span class="token keyword">function</span> <span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 实例化时间对象</span>            <span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> year <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> month <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            month <span class="token operator">=</span> month <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> month <span class="token operator">:</span> month            <span class="token keyword">let</span> dates <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> hours <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> minutes <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            minutes <span class="token operator">=</span> minutes <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> minutes <span class="token operator">:</span> minutes            <span class="token keyword">let</span> seconds <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            seconds <span class="token operator">=</span> seconds <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> seconds <span class="token operator">:</span> seconds            <span class="token keyword">let</span> day <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            div<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">当前时间为  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>year<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>month<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>dates<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>hours<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>minutes<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>seconds<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>days<span class="token punctuation">[</span>day<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>            <span class="token comment">// 设置倒计时</span>            <span class="token comment">// 获取当前时间戳</span>            <span class="token keyword">let</span> time <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> classOver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">'2022-05-29 18:00:00'</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token punctuation">(</span>classOver <span class="token operator">-</span> time<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span>            <span class="token keyword">let</span> h <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>count <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">)</span>            h <span class="token operator">=</span> h <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> h <span class="token operator">:</span> h            <span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>count <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">)</span>            m <span class="token operator">=</span> m <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> m <span class="token operator">:</span> m            <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>count <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">)</span>            s <span class="token operator">=</span> s <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> s <span class="token operator">:</span> s            <span class="token comment">// 获取显示倒计时的div</span>            <span class="token keyword">let</span> daojishi <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.daojishi'</span><span class="token punctuation">)</span>            daojishi<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>h<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">时</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>m<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">分</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>s<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">秒</span><span class="token template-punctuation string">`</span></span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/590.png" alt="590"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/591.png" alt="591"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/592.png" alt="592"></p><p><strong>新知识</strong>：</p><p>1-字符串.trim()可以去除字符两边的空格；trim修剪; 修整; 切去，割掉，剪下，除去(不必要的部分);</p><p><strong>2-当我们creatElement一个标签元素，它只是在内存中生成了，在document对象里面是找不到的，必须插入到页面后，才能提供document找到。</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ie=edge<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>微博发布<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">*</span> <span class="token punctuation">&#123;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">ul</span> <span class="token punctuation">&#123;</span>      <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.w</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.controls textarea</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 878px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>      <span class="token property">resize</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>      <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token property">padding-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>      <span class="token property">padding-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.controls</span> <span class="token punctuation">&#123;</span>      <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.controls div</span> <span class="token punctuation">&#123;</span>      <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.controls div span</span> <span class="token punctuation">&#123;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.controls div .useCount</span> <span class="token punctuation">&#123;</span>      <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.controls div button</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>      <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 132<span class="token punctuation">,</span> 255<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>      <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>      <span class="token property">font</span><span class="token punctuation">:</span> bold 14px <span class="token string">'宋体'</span><span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> all 0.5s<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.controls div button:hover</span> <span class="token punctuation">&#123;</span>      <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 225<span class="token punctuation">,</span> 255<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.controls div button:disabled</span> <span class="token punctuation">&#123;</span>      <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 225<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.contentList</span> <span class="token punctuation">&#123;</span>      <span class="token property">margin-top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.contentList li</span> <span class="token punctuation">&#123;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 20px 0<span class="token punctuation">;</span>      <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px dashed #ccc<span class="token punctuation">;</span>      <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.contentList li .info</span> <span class="token punctuation">&#123;</span>      <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.contentList li .info span</span> <span class="token punctuation">&#123;</span>      <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>      <span class="token property">top</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>      <span class="token property">left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>      <span class="token property">font</span><span class="token punctuation">:</span> bold 16px <span class="token string">'宋体'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.contentList li .info p</span> <span class="token punctuation">&#123;</span>      <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>      <span class="token property">top</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>      <span class="token property">left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #aaa<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.contentList img</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>      <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.contentList li .content</span> <span class="token punctuation">&#123;</span>      <span class="token property">padding-left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>      <span class="token property">word-break</span><span class="token punctuation">:</span> break-all<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.contentList li .the_del</span> <span class="token punctuation">&#123;</span>      <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>      <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 28px<span class="token punctuation">;</span>      <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>w<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 操作的界面 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/9.6/tip.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>      <span class="token comment">&lt;!-- maxlength 可以用来限制表单输入的内容长度 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>说点什么吧...<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>area<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>useCount<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>useCount<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>200<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>send<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>发布<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 微博内容列表 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>contentList<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 添加了hidden属性元素会直接隐藏掉 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">hidden</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userpic<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/9.6/03.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>死数据:百里守约<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>send-time<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>死数据:发布于 2020年12月05日 00:07:54<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>死数据:111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>the_del<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// maxlength 是一个表单属性, 作用是给表单设置一个最大长度</span>    <span class="token comment">// 模拟数据</span>    <span class="token keyword">let</span> dataArr <span class="token operator">=</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'司马懿'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/01.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'女娲'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/02.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'百里守约'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/03.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'亚瑟'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/04.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'虞姬'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/05.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'张良'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/06.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'安其拉'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/07.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'李白'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/08.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'阿珂'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/09.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'墨子'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/10.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'鲁班'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/11.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'嬴政'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/12.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'孙膑'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/13.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'周瑜'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/14.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'老夫子'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/15.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'狄仁杰'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/16.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'扁鹊'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/17.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'马可波罗'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/18.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'露娜'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/19.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'孙悟空'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/20.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'黄忠'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/21.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span> uname<span class="token operator">:</span> <span class="token string">'百里玄策'</span><span class="token punctuation">,</span> imgSrc<span class="token operator">:</span> <span class="token string">'./images/9.5/22.jpg'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span>    <span class="token comment">// 需求1：检测用户输入字数</span>    <span class="token comment">//   1. 注册input事件</span>    <span class="token comment">//   2. 将文本的内容的长度赋值给对应的数值</span>    <span class="token comment">//   3. 表单的maxlength属性可以直接限制在200个数之间</span>    <span class="token keyword">let</span> textarea <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'textarea'</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> useCount <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.useCount'</span><span class="token punctuation">)</span>    <span class="token comment">// 发布按钮</span>    <span class="token keyword">let</span> send <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#send'</span><span class="token punctuation">)</span>    <span class="token comment">// ul</span>    <span class="token keyword">let</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#list'</span><span class="token punctuation">)</span>    textarea<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// console.log(this.value.length)</span>      useCount<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span>length    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 需求2： 输入不能为空</span>    <span class="token comment">//   点击button之后判断</span>    <span class="token comment">//   判断如果内容为空，则提示不能输入为空, 并且直接return 不能为空</span>    <span class="token comment">//   防止输入无意义空格, 使用字符串.trim()去掉首尾空格</span>    <span class="token comment">// console.log('  str')</span>    <span class="token comment">// console.log('  str '.trim())</span>    <span class="token comment">//   并将表单的value值设置为空字符串</span>    <span class="token comment">//   同时下面红色为设置为0</span>    send<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>textarea<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//   并将表单的value值设置为空字符串</span>        textarea<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">''</span>        <span class="token comment">//   同时下面红色为设置为0</span>        useCount<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'内容不能为空'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// 随机数</span>      <span class="token keyword">function</span> <span class="token function">getRandom</span><span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> min      <span class="token punctuation">&#125;</span>      <span class="token keyword">let</span> random <span class="token operator">=</span> <span class="token function">getRandom</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> dataArr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>      <span class="token comment">// 需求3：   新增留言  写到send 的里面</span>      <span class="token comment">// 创建一个小li，然后里面通过innerHTML追加数据</span>      <span class="token keyword">let</span> li <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span>      <span class="token comment">// 随机获取数据数组里面的内容, 替换newNode的图片和名字以及留言内容</span>      li<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">       &lt;div class="info">      &lt;img class="userpic" src=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>dataArr<span class="token punctuation">[</span>random<span class="token punctuation">]</span><span class="token punctuation">.</span>imgSrc<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">>      &lt;span class="username"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>dataArr<span class="token punctuation">[</span>random<span class="token punctuation">]</span><span class="token punctuation">.</span>uname<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/span>      &lt;p class="send-time"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> &lt;/p>      &lt;/div>      &lt;div class="content"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>textarea<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div>      &lt;span class="the_del">X&lt;/span>      </span><span class="token template-punctuation string">`</span></span>      <span class="token comment">// 需求4：删除留言  放到追加的前面</span>      <span class="token comment">// 在事件处理函数里面获取点击按钮, 注册点击事件</span>      <span class="token comment">//   (易错点: 必须在事件里面获取, 外面获取不到)</span>      <span class="token comment">// 删除对应的元素(通过this获取对应的那条需要删除的元素)</span>      <span class="token comment">// 教你一招: 放到追加进ul的前面，这样创建元素的同时顺便绑定了事件，赞~~</span>      <span class="token comment">// 使用 li.querySelector()</span>      <span class="token keyword">let</span> del <span class="token operator">=</span> li<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.the_del'</span><span class="token punctuation">)</span>      del<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 删除操作  点击的是X  删除的小li  父元素.removeChild(子元素)</span>        ul<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token comment">// 利用时间对象将时间动态化       new Date().toLocaleString()</span>      <span class="token comment">// 追加给 ul  用  父元素.insertBefore(子元素, 那个元素的前面)</span>      ul<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>li<span class="token punctuation">,</span> ul<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment">// 需求5：重置</span>      <span class="token comment">// 将表单域内容重置为空</span>      <span class="token comment">// 将userCount里面的内容重置为0</span>      textarea<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">''</span>      <span class="token comment">//   同时下面红色为设置为0</span>      useCount<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token number">0</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="重绘和回流"><a href="#重绘和回流" class="headerlink" title="重绘和回流"></a>重绘和回流</h2><p>attachment附件; 依恋; 爱慕; 信念; 信仰; 忠诚; 拥护; (机器的)附件; 附加装置; 附属物; 连接;</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/593.png" alt="593"></p><p>回流就是布局，获取控件的位置大小</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/594.png" alt="594"></p><p>重绘就是绘制控件的颜色等，不允许控件的大小，结构</p><p>重绘就改个颜色，不会影响布局，但是回流布局改变了，控件的位置都不同了，颜色的位置自然也变了，就需要重绘。</p><p><strong>所以重绘不一定引起回流，但是回流一定会引起重绘。</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/594.png" alt="594"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/596.png" alt="596"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webApi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dom&amp;Bom_02Day</title>
      <link href="archives/75429dc4.html"/>
      <url>archives/75429dc4.html</url>
      
        <content type="html"><![CDATA[<p><strong>这里是学习webapi的dom，不是学h5与c3，为了不让代码太繁琐复杂，案例中的一些css我会写的很简单，体现出bom的知识点即可。</strong></p><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><p>什么是事件？用户点击了一下控件，或者键盘按下，鼠标经过等都是事件。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/539.png" alt="539"></p><p>事件记得引号，事件一般都是小写。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/540.png" alt="540"></p><p>后面的匿名函数，写成一个函数名也行。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>        点我    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> btn <span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span>        <span class="token keyword">function</span> <span class="token function">demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"被点击了"</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span>demo<span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/541.png" alt="541"></p><p>点击关闭图片案例</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">*</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">span</span> <span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span>        <span class="token property">vertical-align</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>x<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./6.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> span <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span>        span<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            img<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>事件类型有click,mouseenter，mouseleave，keydown，keyup，blur，focus，input等等等等，注意事件一般都是小写。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/544.png" alt="544"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/542.png" alt="542"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/543.png" alt="543"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.main</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>                        <span class="token comment">/* background-color: pink; */</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.head</span><span class="token punctuation">&#123;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token comment">/* background-color: blue; */</span>            <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>            <span class="token property">padding-left</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.name</span><span class="token punctuation">&#123;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">button</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.button</span><span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>head<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>随机点名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>名字是：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>瑾年<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>开始<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>结束<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> names<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'瑾年'</span><span class="token punctuation">,</span><span class="token string">'周东奇'</span><span class="token punctuation">,</span><span class="token string">'张三'</span><span class="token punctuation">,</span><span class="token string">'李四'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> name<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> start<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button:first-child'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> end<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button:last-child'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">let</span> random <span class="token operator">=</span> <span class="token number">0</span>        start<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 定时器间歇函数，让名字随机变化</span>            timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                random<span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>names<span class="token punctuation">.</span>length<span class="token punctuation">)</span>                name<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>names<span class="token punctuation">[</span>random<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>            names<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>random<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>names<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'没有名字了'</span><span class="token punctuation">)</span>                <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        end<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意，因为作用域的问题，timer和random需要在全局就声明好</p><p><strong>老版本事件写法</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/545.png" alt="545"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>点我<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> btn <span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span>        btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我是老版本的写法'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>小米搜索框</strong></p><p>使用blur和focus事件。（失去焦点和取得焦点，这个焦点需要鼠标点击才有）</p><p>也可以用mouseleave和mouseenter，鼠标在上面就行</p><p>tips：属性值选择器，以前很少用</p><p>如此案例中的input[type=search]就是选择类型是search的input选择器</p><p>a[href]就是选择所有设置了href的超链接。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">教程参考：https://blog.csdn.net/nicepainkiller/article/details/116132605https://www.w3school.com.cn/css/css_selector_attribute.asp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">*</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">ul</span> <span class="token punctuation">&#123;</span>            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.mi</span> <span class="token punctuation">&#123;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 223px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 100px auto<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>        <span class="token selector">.mi input</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 223px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0 10px<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #e0e0e0<span class="token punctuation">;</span>            <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> all .5s        <span class="token punctuation">&#125;</span>        <span class="token selector">.mi .search</span> <span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ff6700<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.result-list</span> <span class="token punctuation">&#123;</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 223px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ff6700<span class="token punctuation">;</span>            <span class="token property">border-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.result-list a</span> <span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 6px 15px<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #424242<span class="token punctuation">;</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.result-list a:hover</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mi<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小米笔记本<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>result-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>全部商品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>小米11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>小米10S<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>小米笔记本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>小米手机<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>黑鲨4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>空调<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.mi input'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> resultList <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.result-list'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        input<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseenter'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            resultList<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span>            input<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'search'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        input<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseleave'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            resultList<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>            input<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'search'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>微博输入案例</strong></p><p>用户输入文字后，字数会自动统计输入了多少个。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/546.png" alt="546"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>说点什么吧...<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>area<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.main</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.botton</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> 520px<span class="token punctuation">;</span>            <span class="token property">font</span><span class="token punctuation">:</span> bold 14px <span class="token string">'宋体'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">button</span> <span class="token punctuation">&#123;</span>            <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> aliceblue<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">textarea</span> <span class="token punctuation">&#123;</span>            <span class="token property">resize</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>82<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>7<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>你今天有什么要分享给瑾年呢？<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>botton<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>200<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>发布<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> textarea <span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'textarea'</span><span class="token punctuation">)</span>        <span class="token keyword">const</span> button <span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span>        <span class="token keyword">const</span> text_num <span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div span:first-child'</span><span class="token punctuation">)</span>        <span class="token comment">// 看看有没有获取到，对选择器有点不自信</span>        <span class="token comment">// console.log(text_num)</span>        button<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'发布成功'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        textarea<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            text_num<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color<span class="token operator">=</span><span class="token string">"red"</span>            text_num<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span> textarea<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length            button<span class="token punctuation">.</span>value<span class="token operator">=</span> textarea<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>button<span class="token punctuation">.</span>value<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1-其中textarea可以设置placeholder和id和cols与rows以及maxlength，它还有一个css叫resize：none就可以禁止用户拖拉它的大小（默认是可以的）</p><p>2-input有一个readonly属性，可以只读，不可修改。</p><p>注意：</p><p>1-placeholder设置不生效的原因可能是，textarea标签之间有空格或者换行</p><p>错误：</p><p>1-在把textarea中的文字长度赋予span的时候，一直不生效，原来是把text_num.innerHTML写成了text_num.value，value是textarea，input等的属性，无法修改span的内容。把修改内容和属性记混了。</p><p><strong>案例全选</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/547.png" alt="547"></p><p>1-当一个事件为false就把全选状态修改为false，使用return能提高性能，遇到false直接退出，减少后续的无用判断。</p><p>2-当同时给多个元素绑定相同事件，用for循环遍历。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/548.png" alt="548"></p><p>其实就是多练习熟悉事件的语法，这些逻辑都很简单。</p><p><strong>犯错：</strong></p><p>1-层次不清晰，写着写着自己选择器记不得了，把获取对象后面的选择器写错，控制台也不报错，效果一直不生效。</p><p>2-注意循环中变量的声明，它们的作用域，哪些变量给了全局，哪些没有！</p><p>我自认为两个for循环可以使用一样的i，因为作用域不同，谁知道我原先定义了i为全局变量，一个bug能卡半小时找不出问题。也许这就是变量污染吧，也是立即使用函数诞生的原因。</p><p>3-所以说能使用不同变量，就使用不同的，不要以为自己对作用域很了解，最后把自己绕进去。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">*</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">table</span> <span class="token punctuation">&#123;</span>            <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span>            <span class="token property">border-spacing</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #c0c0c0<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 100px auto<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">th</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> #09c<span class="token punctuation">;</span>            <span class="token property">font</span><span class="token punctuation">:</span> bold 16px <span class="token string">"微软雅黑"</span><span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">td</span> <span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #d0d0d0<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #404060<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.allCheck</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>allCheck<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkAll<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>all<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>全选<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>商品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>商家<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>价格<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>check<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ck<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>小米手机<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>小米<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>￥1999<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>check<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ck<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>小米净水器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>小米<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>￥4999<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>check<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ck<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>小米电视<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>小米<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>￥5999<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">//   给遍历存储所有复选框的checked状态伪数组的i</span>        <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>        <span class="token comment">// 全选框后的全选/取消字体</span>        <span class="token keyword">let</span> span <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">)</span>        <span class="token keyword">const</span> all <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#checkAll'</span><span class="token punctuation">)</span>        <span class="token keyword">const</span> cks <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.ck'</span><span class="token punctuation">)</span>        <span class="token comment">//   web计算机二级还是老写法，练一练</span>        all<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 当全选框被点击后，子ck的checked全部变为true,再点击就全是false</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cks<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                cks<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>checked <span class="token operator">=</span> all<span class="token punctuation">.</span>checked            <span class="token punctuation">&#125;</span>            <span class="token comment">// 一定要放在这个函数里面，放外面的话，还没点就判断了，这个判断语句等于白写。</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>all<span class="token punctuation">.</span>checked <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'取消'</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'全选'</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 小按钮事件</span>        <span class="token comment">// 先遍历所有小按钮,添加监听器</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> cks<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cks<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>            cks<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> g <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> g <span class="token operator">&lt;</span> cks<span class="token punctuation">.</span>length<span class="token punctuation">;</span> g<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>cks<span class="token punctuation">[</span>g<span class="token punctuation">]</span><span class="token punctuation">.</span>checked <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        all<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">false</span>                        span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'全选'</span>                        <span class="token comment">// 有一个是false,下面的小按钮就没必要再判断了</span>                        <span class="token keyword">return</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">// 如果所有的按钮都是选中状态true,则让all.checked为true</span>                all<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">true</span>                span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'取消'</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>案例购物车加减案例</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/549.png" alt="549"></p><p>input的一个css，outline:none可以去除input获取焦点后的默认样式</p><p>outline：轮廓线</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/550.png" alt="550"></p><p>注意：</p><p>1-文本框表单等取过来的值和prompt一样都是字符串型的，记得转换。</p><p>2-这里的每次加1，可以把值从字符串转换成数字再加，也可以直接用++自增，因为自增可以隐式转换。（自增自减和比较运算符==，+=，-=都有隐士转换）</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>total<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">readonly</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>+<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reduce<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">            <span class="token keyword">const</span> total <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#total'</span><span class="token punctuation">)</span>            <span class="token keyword">const</span> add <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#add'</span><span class="token punctuation">)</span>            <span class="token keyword">const</span> reduce <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#reduce'</span><span class="token punctuation">)</span>            <span class="token comment">// 点加事件发生的事件函数</span>            add<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    total<span class="token punctuation">.</span>value<span class="token operator">++</span>                    reduce<span class="token punctuation">.</span>disabled <span class="token operator">=</span><span class="token boolean">false</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token comment">// 点减号发生的</span>            reduce<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                total<span class="token punctuation">.</span>value<span class="token operator">--</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>total<span class="token punctuation">.</span>value<span class="token operator">&lt;=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    reduce<span class="token punctuation">.</span>disabled <span class="token operator">=</span><span class="token boolean">true</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="高阶函数"><a href="#高阶函数" class="headerlink" title="高阶函数"></a>高阶函数</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/551.png" alt="551"></p><p>高阶函数就是把函数当做值来对待</p><p><strong>函数表达式</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/552.png" alt="552"></p><p>如let fn = function（）{}和btn.onclick= function(){}都是函数表达式，是高阶函数的一种。</p><p><strong>回调函数</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/553.png" alt="553"></p><p>当参数的那个函数就叫做回调函数。</p><h2 id="环境对象"><a href="#环境对象" class="headerlink" title="环境对象"></a>环境对象</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/554.png" alt="554"></p><p>this叫做环境对象，它就是一个对象</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/555.png" alt="555"></p><p>上图第一个，因为fn()调用的全称是window.fn()所以this指向window</p><p>上图第二个因为btn对象调用了这个函数，所以this指向btn</p><h2 id="排他思想（了解）"><a href="#排他思想（了解）" class="headerlink" title="排他思想（了解）"></a>排他思想（了解）</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/557.png" alt="557"></p><p><strong>排他思想用于多个中只能存在一个的场景，如tab栏（只能选中一个），或者轮播图下面的小圆点（是哪张图片哪个圆点被选中，变css样式）</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/558.png" alt="558"></p><p>1-首先用for循环，把其他所有人干掉，让所有人都被生效这个样式</p><p>2-复活自己，所有人都不生效后，再给自己加上</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>第1个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>第2个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>第3个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>第4个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>第5个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> btns <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> btns<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            btns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// this.classList.add('pink')</span>                <span class="token comment">// 干掉所有人</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> btns<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    btns<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'pink'</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">// 复活我自己</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'pink'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/559.png" alt="559"></p><p>如上，五个按钮，选中谁，谁变粉色，先for循环让所有人都不生效粉色，然后给自己加上粉色的样式。</p><p><strong>问题</strong></p><p>其实一开始只会有一个生效，为了找到它，用for循环去遍历所有的，会浪费很多性能。</p><p><strong>解决：</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/556.png" alt="556"></p><p>我们直接用document.querySelector找出哪个生效的，然后再去除即可。</p><p>然后再用this把事件加上即可。</p><p><strong>注意</strong></p><p>1-标签换行会有缺口，写在同一行就没有，如下</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/560.png" alt="560"></p><p>解决一：把标签写在一行，但是代码看起来凌乱</p><p>方法二：把父类font-size设置为0px，缺点是子类字体必须再设置font-size</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">参考https://baijiahao.baidu.com/s?id=1552352366285716&amp;wfr=spider&amp;for=pc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2-注意documen.querySelector和classList.add等的区别，一个是通过选择器选，一个是加类，一个带点，一个不带。如上图的pink类</p><h2 id="综合案例tab栏"><a href="#综合案例tab栏" class="headerlink" title="综合案例tab栏"></a>综合案例tab栏</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/561.png" alt="561"></p><p>注意：</p><p>1-tab个数和页面个数必须一样，tab多了会没页面显示，页面多了会不隐藏，直接跳到下面去。</p><p>2-找选择器的时候，后代用空格隔开，如果要找的选择器有多个类，而且你需要用多个类找，需要把两个类连起来因为它们是兄弟。</p><p><strong>思路：</strong></p><p>js都好说，原先我的难点是四/多个内容页面，如何排在同一个地方？第一时间想到了绝对定位和浮动，因为它们脱标，再想想脱标也没用呀，照样会显示。</p><p><strong>解决：</strong></p><p>其实直接display：none就好了，因为是排他的，只有一个显示，所以可以多个内容在同一个地方。（其实就一个，其他的全部隐藏） </p><p><strong>tips：</strong></p><p>display：none不仅仅视觉上消失还脱标；visibility：hidden仅仅是视觉上消失，还占位。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.tab .active</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>1.2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">a</span><span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 这个active和上面的tab active不一样,虽然都是给标签添加了active类名,但是生效的css不同 */</span>        <span class="token selector">.content .active</span><span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wraper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>第一个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>第二个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>第三个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>第四个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>第五个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>第一张<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>第二张<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>第三张<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>第四张<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>第五张<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> buttons <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span>        <span class="token comment">// 获取所有的a</span>        <span class="token keyword">let</span> <span class="token keyword">as</span> <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.content a'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> buttons<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            buttons<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 找出先前生效的,给它去除</span>                document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.tab .active'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>                <span class="token comment">// 让当前选中的生效</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>                                <span class="token comment">// 设置内容</span>                 <span class="token comment">// 找出先前生效的,给它去除</span>                 document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.content .active'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>                <span class="token comment">// 让当前选中的生效</span>                <span class="token keyword">as</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webApi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dom&amp;Bom_04Day</title>
      <link href="archives/5029c218.html"/>
      <url>archives/5029c218.html</url>
      
        <content type="html"><![CDATA[<h2 id="购物车案例"><a href="#购物车案例" class="headerlink" title="购物车案例"></a>购物车案例</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/597.png" alt="597"></p><p>技巧：</p><p>1-一个事件如点击会影响到谁，就把被影响的东西写到这个事件源的function里面</p><p>如点加号，会改变数量，还会改变小计，和总价，就把他们三个的变化写到加号的监听器里面</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">加号对象.addEventListener('click',function()&#123; 小计对象.innerHTML='xxx' 数量input对象.value='xxx' 总价格对象.innerText='xxx' //这里的操作如总价的变化，也可以在外写一个函数，调用函数修改text即可//什么时候用函数呢，因为加减都要变化总价，所以需要代码复用，所以用函数代替可以减少代码&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：</p><p>1-  <em>// div  span  ul  li  标签  有文字内容  怎么得到或则设置文字内容呢  元素.innerText  元素.innerHTML</em></p><p>  <em>// 表单  input 单选 复选   textarea  select  怎么得到或则设置值  表单的value</em> </p><p>  // 特殊的  button 是通过inner来设置*</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ie=edge<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>购物车全选功能<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 引入初始化 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">*</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">ul</span> <span class="token punctuation">&#123;</span>            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">a</span> <span class="token punctuation">&#123;</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">body</span> <span class="token punctuation">&#123;</span>            <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">input</span> <span class="token punctuation">&#123;</span>            <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.clearfix::before,        .clearfix::after</span> <span class="token punctuation">&#123;</span>            <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>            <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.clearfix</span> <span class="token punctuation">&#123;</span>            *<span class="token property">zoom</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 引入购物车样式 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">table</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>            <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">th</span> <span class="token punctuation">&#123;</span>            <span class="token property">font</span><span class="token punctuation">:</span> normal 14px/50px <span class="token string">'宋体'</span><span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">th,        td</span> <span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px dashed #ccc<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">input[type='checkbox']</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 13px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 13px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">tbody p</span> <span class="token punctuation">&#123;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">tbody .add,        tbody .reduce</span> <span class="token punctuation">&#123;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">tbody input[type='text']</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">tbody .count-c</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 98px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">button[disabled]</span> <span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #ddd<span class="token punctuation">;</span>            <span class="token property">cursor</span><span class="token punctuation">:</span> not-allowed<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">tbody tr:hover</span> <span class="token punctuation">&#123;</span>            <span class="token property">background</span><span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">tbody tr.active</span> <span class="token punctuation">&#123;</span>            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>241<span class="token punctuation">,</span> 209<span class="token punctuation">,</span> 149<span class="token punctuation">,</span> 0.945<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.controls</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 790px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 10px auto<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">padding-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.controls .del-all,        .controls .clear</span> <span class="token punctuation">&#123;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">margin-right</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.controls p</span> <span class="token punctuation">&#123;</span>            <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>            <span class="token property">margin-right</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.controls span</span> <span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.controls .pay</span> <span class="token punctuation">&#123;</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 54px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>            <span class="token property">font</span><span class="token punctuation">:</span> bold 20px/54px <span class="token string">'宋体'</span><span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">bottom</span><span class="token punctuation">:</span> -1px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.controls .total-price</span> <span class="token punctuation">&#123;</span>            <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>all<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>全选<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>商品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>单价<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>商品数量<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>小计<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carBody<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s_ck<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">readonly</span> <span class="token punctuation">/></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/01.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>牛奶<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>price<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>5￥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>count-c clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reduce<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>total<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>5￥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>del<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s_ck<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/01.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>牛奶<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>price<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>10￥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>count-c clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reduce<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>total<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>20￥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>del<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s_ck<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/01.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>牛奶<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>price<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>20￥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>count-c clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reduce<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>total<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>40￥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>del<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s_ck<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/01.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>牛奶<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>price<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>35￥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>count-c clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reduce<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>total<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>70￥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>del<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>del-all<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除所选商品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clear<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>清理购物车<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pay<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>去结算<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                已经选中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>totalCount<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>件商品;总价：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>totalPrice<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>total-price<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>0￥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">//   商品数量模块与删除操作</span>        <span class="token comment">// 获取商品数量模块所有的控件对象,加减与输入框与删除操作</span>        <span class="token keyword">let</span> adds <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.add'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> reduces <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.reduce'</span><span class="token punctuation">)</span>        <span class="token comment">// 删除字体</span>        <span class="token keyword">let</span> dels <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.del'</span><span class="token punctuation">)</span>        <span class="token comment">// 获取删除字体的爸爸的爸爸，因为需要remove删除字体的爸爸</span>        <span class="token keyword">let</span> carbody <span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#carBody'</span><span class="token punctuation">)</span>        <span class="token comment">// 获取所有inputs里面商品数量</span>        <span class="token keyword">let</span> inputs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.count-c input'</span><span class="token punctuation">)</span>        <span class="token comment">// 获取所有的单价</span>        <span class="token keyword">let</span> prices <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.price'</span><span class="token punctuation">)</span>        <span class="token comment">// 获取所有的小计</span>        <span class="token keyword">let</span> totals <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.total'</span><span class="token punctuation">)</span>        <span class="token comment">// 获取总价格对象</span>        <span class="token keyword">let</span> totalsResult <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#totalPrice'</span><span class="token punctuation">)</span>        <span class="token comment">// 获取总商品数量</span>        <span class="token keyword">let</span> totalCount <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#totalCount'</span><span class="token punctuation">)</span>        <span class="token comment">// 在页面加载时，就调用一次总价格和总数量</span>        <span class="token function">totalNumPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">// 给上述对象添加事件</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> adds<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 1点加号事件</span>            adds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                inputs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token operator">++</span>                reduces<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span>                totals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>innerText<span class="token punctuation">)</span> <span class="token operator">*</span> inputs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">'￥'</span>                <span class="token function">totalNumPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token comment">// 2点减号事件</span>            reduces<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                inputs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token operator">--</span>                totals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>innerText<span class="token punctuation">)</span> <span class="token operator">*</span> inputs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">'￥'</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>inputs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    reduces<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">true</span>                <span class="token punctuation">&#125;</span>                <span class="token function">totalNumPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token comment">// 3 点删除事件</span>            dels<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">// 用数组删是没用的，因为tr变化，那么里面的节点顺序也发生变化，无法正确取到儿子</span>                    carBody<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">)</span>                    <span class="token function">totalNumPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 算总价格和总数量并输出</span>        <span class="token keyword">function</span> <span class="token function">totalNumPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 因为这个小计和数量是变化的，所以每次要重新获取，否则就一直是刚开始页面的数量个数</span>            <span class="token comment">// 获取所有的小计</span>            <span class="token keyword">let</span> totals <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.total'</span><span class="token punctuation">)</span>            <span class="token comment">// 获取所有inputs里面商品数量</span>            <span class="token keyword">let</span> inputs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.count-c input'</span><span class="token punctuation">)</span>            <span class="token comment">// 总价sum</span>            <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span>            <span class="token comment">// 总数量number</span>            <span class="token keyword">let</span> number <span class="token operator">=</span> <span class="token number">0</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> adds<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sum <span class="token operator">+=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>totals<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>innerText<span class="token punctuation">)</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>inputs<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>innerText<span class="token punctuation">)</span>                number <span class="token operator">+=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>inputs<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>                totalsResult<span class="token punctuation">.</span>innerText <span class="token operator">=</span> sum <span class="token operator">+</span> <span class="token string">'￥'</span>                totalCount<span class="token punctuation">.</span>innerText <span class="token operator">=</span> number            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/598.png" alt="598"></p><p>事件对象就是一个对象，存储了一个事件发生时，触发的相关信息</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/599.png" alt="599"></p><p>如上图，事件对象就存储了鼠标点击的位置等放在e对象里（这个名字随便取，常用e，event，ev）</p><p>它看似是一个形参，其实是一个声明定义好的对象</p><p><strong>事件对象常用属性</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/600.png" alt="600"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/601.png" alt="601"></p><p>offsetX/Y是鼠标距离事件源元素左上角的位置</p><p>clientX/Y是鼠标距离<strong>可见</strong>浏览器窗口左上角的位置。</p><p>事件对象e还有pageX和pageY的属性， 它是根据<strong>整个浏览器网页大小</strong>距离窗口左上角来取值</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">参考https://www.bilibili.com/video/BV1AT4y1v75t?p=40<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>案例</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/602.png" alt="602"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">img</span><span class="token punctuation">&#123;</span>            <span class="token comment">/* 绝对定位，以窗口为参照物 */</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/tianshi.gif<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> img <span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span>        <span class="token comment">// document对象不需要获取，以前获取的元素对象都是从document找的</span>        <span class="token comment">// document添加监听器，就相当于整个页面都加了</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseover'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                img<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left<span class="token operator">=</span> e<span class="token punctuation">.</span>pageX<span class="token operator">+</span><span class="token string">'px'</span>                img<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top<span class="token operator">=</span> e<span class="token punctuation">.</span>pageY<span class="token operator">+</span><span class="token string">'px'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中用到了mousemove的事件，就是鼠标移动，mouseenter/mouseleave是鼠标移入和离开</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p> 没写完</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webApi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dom&amp;Bom_05Day</title>
      <link href="archives/e895a57d.html"/>
      <url>archives/e895a57d.html</url>
      
        <content type="html"><![CDATA[<h2 id="mix"><a href="#mix" class="headerlink" title="mix"></a>mix</h2><p>1-location.href=’./xxx.html’可以跳转页面。</p><p>2-window.confirm(‘’)和alert(‘’)差不多</p><p>3-固定定位和绝对定位和浮动都脱标，块元素会变成行内块元素。</p><p>3-固定定位的left/top/bottom/right等是基于浏览器窗口定位的，相对定位是基于自己，绝对定位是相对于父级。</p><p>4-transform:translateY/X(50%)是基于自己本身的大小</p><p>5-当可视窗口大小发生变化的事件，resize</p><p>6-如ul中多个li，给所有li绝对定位absolute后，会重叠到一起（可以通过给上面内容设置opacity看到下面的内容），因为没设置left和top的话，默认定在父级左上角。</p><p>7-虽然浮动脱标，不能给父级元素撑起高度，然后标准流的盒子会去占浮动盒子的位置，但是当标准流盒子有内容，是无法互相层叠的，如浮动的最初设计是用于设置文字环绕图片的效果，图片浮动，但是文字是标准流，它们是不重叠的。</p><blockquote><p>参考：<a href="https://blog.csdn.net/codeHeYiQing/article/details/105179576">https://blog.csdn.net/codeHeYiQing/article/details/105179576</a></p></blockquote><p>8-类名和变量都是区分大小写的。</p><h2 id="JS特效"><a href="#JS特效" class="headerlink" title="JS特效"></a>JS特效</h2><p>现在来说，最好建议用css来写特效和动画，js多用于来触发它，js和css搭配使用才会最方便最简洁，效果最好。</p><h3 id="滚动和加载事件"><a href="#滚动和加载事件" class="headerlink" title="滚动和加载事件"></a>滚动和加载事件</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/716.png" alt="716"></p><p>其中window也可以换成任意一个有滚动条的元素对象。如一个div内容超出盒子，overflow:auto后有滚动条也可用此事件监听。</p><p><strong>加载事件</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/717.png" alt="717"></p><p>这里是load事件，给window加则是等整个window，包括图片，外联css和js等都加载完毕，再执行事件函数。</p><p>作用：有时页面资源没加载完，我们是做不了事情的，比如一个图片都没加载出来，你没办法去操作它；其次是老代码js写在body前面，body中的dom树结构节点都没有，怎么可能被js操作。</p><p>拓展：上面是给window添加load事件，等window加载完就执行；当然也可以给其他对象添加，如一个图片img.addEventListener(‘load’,function(){})，就是等这个图片加载完再执行。</p><p><strong>DOMContentLoaded</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/718.png" alt="718"></p><p>DOMContentLoaded和load的区别就是，前者是 使用的对象中的dom树节点加载完毕即可，如div这些标签加载完就行了；后者是外联css/js/图片等都加载完才可以。</p><blockquote><p>注意事件大小写，写错就不生效的，一般是小驼峰，这个事件DOM全大写了</p></blockquote><h2 id="元素大小和位置"><a href="#元素大小和位置" class="headerlink" title="元素大小和位置"></a>元素大小和位置</h2><h3 id="scroll"><a href="#scroll" class="headerlink" title="scroll"></a>scroll</h3><p>作用：获取用户滚动了多少像素，从而精准进行交互。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/719.png" alt="719"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/720.png" alt="720"></p><p>其中scrollWidth和scrollHeight是<strong>获取盒子对象内容的大小</strong>的，而非盒子大小</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/721.png" alt="721"></p><p>如上盒子是150x150，但是scrollHeight是336，因为内容超出了。</p><p>当内容没超出，如就一行字，内容就是150x150大小，不是说内容就是div里面的文字等，盒子本身就是一个内容。</p><p><strong>scrollLeft和scrollTop</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/722.png" alt="722"></p><p>上图中箭头部分就是scrollTop，也就是向下滚动了多少px，页面向上隐藏了多少px</p><p>scrollLeft和scrollTop一般用于html对；众所周知在页面中是唯一的标签，不需要用document.querySelector去寻找，如id选择器和body，直接写成document.body即是一个对象。</p><p><strong>id唯一，免寻找</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/1119.png" alt="1119"></p><p>底层直接把id名字当做了dom对象名字，我们可以操作</p><p>html同样不需要，但是不能直接写为document.html.scrollTop，html得用documentElement代替，即写成document.documentElement.scrollTop，别问为什么就是这样规定。</p><p>注意：</p><p>1-scrollTop和scrollLeft可以直接赋值，即让用户打开网页就滚动一定距离。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/723.png" alt="723"></p><p>2-scrollTop和scrollLeft返回的是数字，不带单位，赋值时同时不需要给单位，默认px</p><p><strong>返回顶部按钮</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/724.png" alt="724"></p><p>1-第三步我本来还想用锚链接，id配合a来回到顶部，其实可以直接设置scrollTop等于0</p><p>2-父元素.children[x];父子节点children是一个数组，需要用数组形式来取子元素对象。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">body</span> <span class="token punctuation">&#123;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 3000px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">a</span> <span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> aliceblue<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> 90%<span class="token punctuation">;</span>            <span class="token property">bottom</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>回到顶部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> backTop <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>        window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'scroll'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> num <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop            <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">></span> <span class="token number">500</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                backTop<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                backTop<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        backTop<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> <span class="token number">0</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="offset"><a href="#offset" class="headerlink" title="offset"></a>offset</h3><p>使用scrollTop虽然可以取得滑动的像素，然后配合js显示出返回顶部，但是有一个缺点</p><p>上面的判断条件500是指定的，但是实际开发中，一般是当用户滑到某个元素内容区域，再进行”回到顶部“控件的显示，但这个内容区域的位置是变化的，所以需要用到offset来动态获取位置。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/725.png" alt="725"></p><p>1-offsetWidth和offsetHeight 与scrollWidth/scrollHeight的区别是，前者是自身盒子高度（包括padding和border），后者scroll是盒子内容高度。</p><p>2-offsetTop/offsetLeft是只读无法修改的，很简单的道理，这个如果可以随便修改，布局不全乱套了。</p><p>3-offsetTop/offsetLeft获取的是获取元素到有定位的父级（父亲没有定位就找爷爷，都没有就以文档左上角为准）的上/左距离</p><h3 id="导航栏案例"><a href="#导航栏案例" class="headerlink" title="导航栏案例"></a>导航栏案例</h3><p>需求：当用户滑动到秒杀模块时，导航栏显示出来。</p><p>1-定位后的left/right/bottom/top是可以为负数的，让元素在页面以外，等相应条件满足再滑下来（使用tansition：all 1s），这个案例中的导航栏就会用到。</p><p>2-linear-gradient(red,blue)，注意这里是括号，而且是给background-image设置才有效，不是给background-color设置。</p><p>3-因为导航栏要显示在内容的上面，根据层级 标准&lt;浮动&lt;定位,所以导航需要给一个固定定位，注意固定定位会脱标，然后块元素会被转换为行内块元素，所以导航盒子需要给宽。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/726.png" alt="726"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">*</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.container</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 1200px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.content</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>            <span class="token property">min-height</span><span class="token punctuation">:</span> 1900px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.nav</span> <span class="token punctuation">&#123;</span>            <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>pink<span class="token punctuation">,</span>                    skyblue<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> -40px<span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> all .3s<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.miaosha</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>我是顶部导航栏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 秒杀模块，滑到这个模块。让导航栏显现 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>miaosha<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                我是秒杀模块            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> miaosha <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.miaosha'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> nav <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.nav'</span><span class="token punctuation">)</span>        window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'scroll'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> num <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>miaosha<span class="token punctuation">.</span>offsetTop<span class="token punctuation">)</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">>=</span> miaosha<span class="token punctuation">.</span>offsetTop<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                nav<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token string">'0px'</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                nav<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token string">'-80px'</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>电梯导航案例</strong></p><p>犯错：js事件不生效</p><p>原因：找类选择器需要加点，但是增加删除classList的类名不需要加点。</p><p>犯错：for循环中i没有用let i =0 声明，而是直接写i = 0，导致有作用域链的问题，从而后面的content[i]无法识别。</p><blockquote><p>在js中，如果某个变量没有var声明，会自动移到上一层作用域中去找这个变量的声明语句，如果找到，就是用，如果没找到，就继续向上寻找，一直查找到全局作用域为止，如果全局中仍然没有这个变量的声明语句，那么自动在全局作用域进行声明，这个就是js中的<strong>作用域链</strong>，也叫变量提升</p></blockquote><p>因为我这里直接写i=0，上面也没有其他的声明i，所以默认也是全局作用域了</p><blockquote><p>“所谓的变量提升(Hoisting)就是:在任何作用域中使用var声明的变量,都会被提升到其作用域最顶部,也就 是说该变量的作用域相当于其函数或者全局,但是其赋值操作还是在原先的位置”</p></blockquote><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/734.png" alt="734"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/735.png" alt="735"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/736.png" alt="736"></p><p>所以原因是：i=0，通过作用域链变成了全局变量，点击事件是我们主动去触发的，但是循环是一直在运行的，我们点击之前，循环体早已经执行完。因为var的作用域是全局，所以i恒等于最后执行的那一个值。</p><p>这是一个同步和异步的问题，并不是绑定事件的时候通过循环i的不同值就绑定好了，那个绑定事件当我们点击触发的时候，还是会去找i</p><p>解决方法：let=0即可</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/727.png" alt="727"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">*</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.aside</span> <span class="token punctuation">&#123;</span>            <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>            <span class="token comment">/* 固定定位的top等是以浏览器窗口为参照物 */</span>            <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>            <span class="token comment">/* translate是以自身为参照物 */</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">li</span> <span class="token punctuation">&#123;</span>            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.content</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>            <span class="token property">min-height</span><span class="token punctuation">:</span> 1500px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0px 430px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.content div</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.active</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>男装<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>女装<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>电子产品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>美食<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aside<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男装<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>女装<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>电子产品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>美食<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> contents <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.content div'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span>        <span class="token comment">// console.log(lis)</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lis<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            lis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 可以用排他原则，但是我设置了默认active，可以用以下语句更简单</span>                document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.active'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>contents<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>                document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> contents<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>offsetTop            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="client"><a href="#client" class="headerlink" title="client"></a>client</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/728.png" alt="728"></p><p>1-clientWidth/clientHeight是获取元素可视区域的宽高，不包含滚动条和边框等。</p><p>2-clientLeft和clientTop获取的就是盒子可视区域到盒子最外边框的宽度，其实就是滚动条和边框的大小，所以很少使用。</p><h2 id="综合案例轮播图"><a href="#综合案例轮播图" class="headerlink" title="综合案例轮播图"></a>综合案例轮播图</h2><h3 id="新知识点和技巧"><a href="#新知识点和技巧" class="headerlink" title="新知识点和技巧"></a>新知识点和技巧</h3><p>1-轮播图目前我会两种方法实现，一种是给多张图片放在一个盒子里，然后浮动，让它们在一排显示，再使用overflow:hidden来隐藏超出盒子部分，然后通过transform：translateX()来实现不同图片的显示。（可以设置用户左右滑动事件，但是到了最后一张怎么办呢？如何做到无缝轮播）</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/733.png" alt="733"></p><p>我们可以通过js复制第一张和最后一张（注意不要写硬编码，因为不好维护修改，最好用变量代替）</p><p>当用户滑到最后一张即轮播图3的时候，以极快的速度让轮播图移动到前面那个轮播图3即可（这种变化用户是感觉不到的）</p><p>向左滑动原理一样，当在图1再向右滑动，按理要到后面的图3，所以我们要以极快的速度，从前面的图1，转换为后面的图1即可。</p><p>2-第二种方法就是下面用到的，让图片绝对定位到一起，利用opacity来决定谁显示。（无法让用户左右滑动）</p><p>3-轮播图的自动轮播就用定时器来操作。</p><p>4**-直接调用监听函数**，如下面代码中dom对象next设置了click监听函数，我们可以通过next.click()直接调用</p><p><strong>需求分析：</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/729.png" alt="729"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/730.png" alt="730"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/731.png" alt="731"></p><p>思路步骤：</p><p>1-先分清楚样式结构，这里只自己写js思路，样式用老师现有代码。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/732.png" alt="732"></p><p>这个轮播图分为两大部分，一个是图片部分（包含图片和图片描述）和指示器部分（用户自行选择轮播图的显示，和大多轮播图那个小圆点一样，只是给了图片来代替）</p><p>2-其中所有的图包含在ul中的每个li中，通过给予绝对定位，全部重叠到一起，通过opacity的样式来决定显示哪一张。（为什么不用hidden或者display:none什么的呢，因为opacity有动画效果，可以设置transition）</p><p>3-指示器indicater图片的兄弟标签可以加一个span（背景设置灰色）当做遮罩，然后通过绝对定位和图片重叠到一起。即li相对定位，包含图片和遮罩span（两个都绝对定位）。</p><p>我的代码</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>QQ音乐轮播图<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">*</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">li</span> <span class="token punctuation">&#123;</span>            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.main</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 700px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.slides</span> <span class="token punctuation">&#123;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 320px<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.slides ul li</span> <span class="token punctuation">&#123;</span>            <span class="token comment">/* display: none; */</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token comment">/* 这里实现淡入淡出的关键 */</span>            <span class="token property">transition</span><span class="token punctuation">:</span> all .3s<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.slides li.active</span> <span class="token punctuation">&#123;</span>            <span class="token comment">/* display: block; */</span>            <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.slides .extra</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 700px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 53px<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 53px<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">bottom</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">z-index</span><span class="token punctuation">:</span> 10<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.slides .extra h3</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 82%<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">margin-right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">padding-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #98E404<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 28px<span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">font-weight</span><span class="token punctuation">:</span> 500<span class="token punctuation">;</span>            <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Microsoft Yahei"</span><span class="token punctuation">,</span> Tahoma<span class="token punctuation">,</span> Geneva<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.slides .extra a</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 29px<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>            <span class="token property">margin-right</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>./assets/icon_focus_switch.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.slides .extra .prev</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-position</span><span class="token punctuation">:</span> 0 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.slides .extra .prev:hover</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-position</span><span class="token punctuation">:</span> -30px 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.slides .extra .next</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-position</span><span class="token punctuation">:</span> -60px 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.slides .extra .next:hover</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-position</span><span class="token punctuation">:</span> -90px 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.indicator</span> <span class="token punctuation">&#123;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 10px 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.indicator ul</span> <span class="token punctuation">&#123;</span>            <span class="token property">list-style-type</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0 0 0 4px<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.indicator ul li</span> <span class="token punctuation">&#123;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0 4px 0 5px<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.indicator li img</span> <span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.indicator li .mask</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.4<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.indicator li .border</span> <span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 54px<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">z-index</span><span class="token punctuation">:</span> 20<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 3px solid #98E404<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* li里面的mask 和 border 刚开始都是显示的 */</span>        <span class="token comment">/* 我们写一个样式css */</span>        <span class="token selector">.indicator .active .mask</span> <span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.indicator .active .border</span> <span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slides<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_01.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第1张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_02.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第2张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_03.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第3张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_04.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第4张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_05.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第5张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_06.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第6张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_07.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第7张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_08.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第8张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_09.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第9张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_10.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第9张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>extra<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>第1张图的描述信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prev<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>next<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indicator<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_01.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_02.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_03.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_04.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_05.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_06.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_07.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_08.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_09.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_10.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 1-让indicater鼠标移入后高亮，即加上active类，让mask消失</span>        <span class="token comment">// 获取indicater中的每个li</span>        <span class="token keyword">let</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.indicator li'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> piclis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.slides  li'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> text <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.extra h3'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> next <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.next'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> prev <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.prev'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> main <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.main'</span><span class="token punctuation">)</span>        <span class="token comment">// 给这些li添加绑定事件，同时绑定多个，用for循环</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lis<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            lis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseenter'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 排他原则，或让当前有active的对象去除active样式</span>                document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.indicator .active'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>                <span class="token comment">// 给当前鼠标移入的li添加active类名</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>                <span class="token comment">// 2-让轮播图随着indicater变化</span>                document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.slides ul .active'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>                <span class="token comment">// 给当前鼠标移入的li添加active类名,这里的active和上面的css是不同的，各自写了带active交集选择器不同的css语句</span>                piclis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>                <span class="token comment">// 让图片说明变化</span>                text<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">第</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">张图的描述信息</span><span class="token template-punctuation string">`</span></span>                <span class="token comment">// 4-：解决一个BUG</span>                <span class="token comment">// 点击右侧按钮可以实现播放下一张，但是鼠标经过前面的，播放就会乱序</span>                <span class="token comment">// 解决方案：  让变化量 index 重新赋值为 当前鼠标经过的索引号</span>                <span class="token comment">// 鼠标经过了那个小li 他的索引号就是 i </span>                <span class="token comment">// 右侧按钮是通过 index 来了控制播放的</span>                index <span class="token operator">=</span> i            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 3- 点击按钮播放上一张下一张</span>        <span class="token comment">// 定义一个index变量记录当前是第几张图，让相应的indicater和图片显示</span>        <span class="token comment">// 这个index一定要是个全局变量，因为后面很多地方都需要用到它，也需要它来连接</span>        <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>        next<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            index<span class="token operator">++</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> lis<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                index <span class="token operator">=</span> <span class="token number">0</span>            <span class="token punctuation">&#125;</span>            <span class="token function">common</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        prev<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            index<span class="token operator">--</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                index <span class="token operator">=</span> lis<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>            <span class="token punctuation">&#125;</span>            <span class="token function">common</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token comment">// 5-next和prev函数中也有很多代码一样，后续定时器轮播也需要用到，所以封装一个公用函数</span>        <span class="token keyword">function</span> <span class="token function">common</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.indicator .active'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>            lis<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>            document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.slides ul .active'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>            piclis<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>            text<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">第</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">张图的描述信息</span><span class="token template-punctuation string">`</span></span>        <span class="token punctuation">&#125;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span>        <span class="token comment">// 6-轮播图</span>        <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 这里直接使用next.click()，因为当给next对象添加了一个点击事件，这个对象中就有了一个这样的方法</span>            next<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>        <span class="token comment">// 7-鼠标移入轮播图盒子范围清除定时器 停止轮播，移除后再开启定时器</span>        main<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseenter'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        main<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseleave'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 这里直接使用next.click()，因为当给next对象添加了一个点击事件，这个对象中就有了一个这样的方法</span>                next<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考代码</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>QQ音乐轮播图<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">*</span> <span class="token punctuation">&#123;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">li</span> <span class="token punctuation">&#123;</span>      <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.main</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 700px<span class="token punctuation">;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.slides</span> <span class="token punctuation">&#123;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 320px<span class="token punctuation">;</span>      <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.slides ul li</span> <span class="token punctuation">&#123;</span>      <span class="token comment">/* display: none; */</span>      <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>      <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token comment">/* 这里实现淡入淡出的关键 */</span>      <span class="token property">transition</span><span class="token punctuation">:</span> all .3s<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.slides li.active</span> <span class="token punctuation">&#123;</span>      <span class="token comment">/* display: block; */</span>      <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.slides .extra</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 700px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 53px<span class="token punctuation">;</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> 53px<span class="token punctuation">;</span>      <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>      <span class="token property">bottom</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">z-index</span><span class="token punctuation">:</span> 10<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.slides .extra h3</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 82%<span class="token punctuation">;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">margin-right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>      <span class="token property">padding-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #98E404<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 28px<span class="token punctuation">;</span>      <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>      <span class="token property">font-weight</span><span class="token punctuation">:</span> 500<span class="token punctuation">;</span>      <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Microsoft Yahei"</span><span class="token punctuation">,</span> Tahoma<span class="token punctuation">,</span> Geneva<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.slides .extra a</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 29px<span class="token punctuation">;</span>      <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>      <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>      <span class="token property">margin-top</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>      <span class="token property">margin-right</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>      <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>./assets/icon_focus_switch.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.slides .extra .prev</span> <span class="token punctuation">&#123;</span>      <span class="token property">background-position</span><span class="token punctuation">:</span> 0 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.slides .extra .prev:hover</span> <span class="token punctuation">&#123;</span>      <span class="token property">background-position</span><span class="token punctuation">:</span> -30px 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.slides .extra .next</span> <span class="token punctuation">&#123;</span>      <span class="token property">background-position</span><span class="token punctuation">:</span> -60px 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.slides .extra .next:hover</span> <span class="token punctuation">&#123;</span>      <span class="token property">background-position</span><span class="token punctuation">:</span> -90px 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.indicator</span> <span class="token punctuation">&#123;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 10px 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.indicator ul</span> <span class="token punctuation">&#123;</span>      <span class="token property">list-style-type</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0 0 0 4px<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.indicator ul li</span> <span class="token punctuation">&#123;</span>      <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>      <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0 4px 0 5px<span class="token punctuation">;</span>      <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>      <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.indicator li img</span> <span class="token punctuation">&#123;</span>      <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>      <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.indicator li .mask</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>      <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>      <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.4<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.indicator li .border</span> <span class="token punctuation">&#123;</span>      <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 54px<span class="token punctuation">;</span>      <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>      <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">z-index</span><span class="token punctuation">:</span> 20<span class="token punctuation">;</span>      <span class="token property">border</span><span class="token punctuation">:</span> 3px solid #98E404<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* li里面的mask 和 border 刚开始都是显示的 */</span>    <span class="token comment">/* 我们写一个样式css */</span>    <span class="token selector">.indicator .active .mask</span> <span class="token punctuation">&#123;</span>      <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.indicator .active .border</span> <span class="token punctuation">&#123;</span>      <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slides<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_01.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第1张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_02.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第2张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_03.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第3张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_04.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第4张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_05.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第5张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_06.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第6张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_07.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第7张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_08.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第8张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_09.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第9张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./assets/b_10.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第9张图的描述信息<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>extra<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>第1张图的描述信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prev<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>next<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indicator<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_01.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_02.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_03.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_04.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_05.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_06.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_07.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_08.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_09.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assets/s_10.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>border<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 轮播图开始啦</span>    <span class="token comment">// 需求①：小图标鼠标经过事件</span>    <span class="token comment">//   鼠标经过小图片，当前高亮，其余兄弟变淡  添加类</span>    <span class="token keyword">let</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.indicator li'</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> piclis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.slides ul li'</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> text <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.extra h3'</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> next <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.next'</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> prev <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.prev'</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> main <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.main'</span><span class="token punctuation">)</span>    <span class="token comment">// 给多个小li绑定事件</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lis<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      lis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseenter'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 选出唯一的那个active ，删除类</span>        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.indicator .active'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>        <span class="token comment">// 鼠标经过谁，谁加上active 这个类</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>        <span class="token comment">// 需求② ：大图片跟随变化  一定要放到鼠标经过事件里面</span>        <span class="token comment">// 对应的大图片跟着显示，如果想要过渡效果，可以使用opacity效果，可以利用CSS淡入      淡出的效果，还是添加类</span>        <span class="token comment">// 选出唯一的那个active ，删除类</span>        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.slides ul .active'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>        <span class="token comment">// 对应序号的那个 li，谁加上active 这个类</span>        piclis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>        text<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">第</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">张图的描述信息</span><span class="token template-punctuation string">`</span></span>        <span class="token comment">// 需求④：解决一个BUG</span>        <span class="token comment">// 点击右侧按钮可以实现播放下一张，但是鼠标经过前面的，播放就会乱序</span>        <span class="token comment">// 解决方案：  让变化量 index 重新赋值为 当前鼠标经过的索引号</span>        <span class="token comment">// 鼠标经过了那个小li 他的索引号就是 i </span>        <span class="token comment">// 右侧按钮是通过 index 来了控制播放的</span>        index <span class="token operator">=</span> i      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 需求③：右侧按钮播放效果</span>    <span class="token comment">//   点击右侧按钮，可以自动播放下一张图片</span>    <span class="token comment">//   需要一个变化量  index 不断自增</span>    <span class="token comment">//   然后播放下一张图片</span>    <span class="token comment">//   如果到了最后一张，必须要还原为第1张图片</span>    <span class="token comment">//   教你一招： 索引号 = 索引号 % 数组长度 （放到播放前面）</span>    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment">// 全局变量  信号量 控制器 为了给 右侧按钮和左侧按钮同时使用</span>    next<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      index<span class="token operator">++</span>      <span class="token comment">// 选出 index 小图片 做操作</span>      <span class="token comment">// console.log(index)</span>      <span class="token comment">// if (index === lis.length) &#123;</span>      <span class="token comment">//   index = 0</span>      <span class="token comment">// &#125;</span>      index <span class="token operator">=</span> index <span class="token operator">%</span> lis<span class="token punctuation">.</span>length      <span class="token function">common</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 需求⑤：左侧按钮播放效果</span>    <span class="token comment">//   点击左侧按钮，可以自动播放上一张图片</span>    <span class="token comment">//   需要一个变化量  index 不断自减</span>    <span class="token comment">//   然后播放上一张图片</span>    <span class="token comment">//   如果到了第一张，必须要从最后一张播放</span>    <span class="token comment">//   教你一招： 索引号 = (数组长度 + 索引号) % 数组长度</span>    prev<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      index<span class="token operator">--</span>      <span class="token comment">// 选出 index 小图片 做操作</span>      <span class="token comment">// console.log(index)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        index <span class="token operator">=</span> lis<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// index = (lis.length + index) % lis.length</span>      <span class="token function">common</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 需求⑥：</span>    <span class="token comment">//   因为左侧按钮和右侧按钮里面有大量相同的操作，可以抽取封装一个函数 common</span>    <span class="token keyword">function</span> <span class="token function">common</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.indicator .active'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>      lis<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>      <span class="token comment">// 选出 index 大图片 做操作</span>      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.slides ul .active'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>      piclis<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>      text<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">第</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">张图的描述信息</span><span class="token template-punctuation string">`</span></span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 需求⑦：开启定时器</span>    <span class="token comment">//   其实定时器自动播放，就相当于点击了右侧按钮，此时只需要， next.click()</span>    <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 自动调用右侧按钮的点击事件</span>      next<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>    <span class="token comment">// 需求⑧：</span>    <span class="token comment">//   鼠标经过停止定时器 （清除定时器）</span>    main<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseenter'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">//   鼠标离开开启定时器 （开启定时器）</span>    main<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseleave'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 自动调用右侧按钮的点击事件</span>        next<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webApi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dom&amp;Bom_07Day</title>
      <link href="archives/429c6df6.html"/>
      <url>archives/429c6df6.html</url>
      
        <content type="html"><![CDATA[<h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="## 正则表达式"></a>## 正则表达式</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/774.png" alt="774"></p><p>正则表达式（regular expression）是一种通过一系列描述信息编写模式，作用是通过这些信息，找到符合这些正则表达式条件的文本，从而做<strong>匹配，替换，截取</strong>等操作；正则表达式在js中也是对象。</p><p><strong>使用场景</strong></p><p>最常用的场景是表单验证，也是js最初诞生的作用。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/775.png" alt="775"></p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>我们先定义规则，再去根据规则查找</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/776.png" alt="776"></p><p>那么如何定义规则呢？</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/777.png" alt="777"></p><p>/ /是正则表达式的字面量。变量名reg存储了一个正则对象，因为是对象。所以也可以用对象的方法提取里面的属性等。</p><p>现在找到怎么定义最基本的规则了，那么怎么查找呢，就要用到这个正则对象的一个方法test()</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/778.png" alt="778"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">      <span class="token keyword">let</span> regular <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">瑾年</span><span class="token regex-delimiter">/</span></span>      <span class="token keyword">let</span> str <span class="token operator">=</span><span class="token string">'这里是瑾年的学习博客'</span>      <span class="token keyword">let</span> str1 <span class="token operator">=</span><span class="token string">'体验未知，探索未知'</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> regular<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment">// true</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> regular<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment">//false</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> regular<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'瑾年never say never'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment">// true</span>    <span class="token comment">//因为regular里面就是/前端/，所以可以直接下面这种方法</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">前端</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'瑾年never say never'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment">// true</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>exec</strong>方法</p><p>reg.exec()方法和reg.test()一样是正则对象的一个方法，不同的是，如果没有找到，它会返回null，如果找到它会返回一个数组包含了一些信息</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/779.png" alt="779"></p><h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><p>上面的/瑾年/就是普通字符，指定了瑾年两个字</p><p>而元字符则是具有一些特殊含义，比如规定用户只能输入26英文字母，普通字符的话要abcdefg……</p><p>而元字符只需要写成[a-z]即可</p><p>在实际运用中，正则表达式一般直接复制粘贴，因为网上有绝大部分现成的规则，但学懂肯定更好。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/780.png" alt="780"></p><p><a href="https://tool.oschina.net/regex">https://tool.oschina.net/regex</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions</a></p><h3 id="三种常用元字符"><a href="#三种常用元字符" class="headerlink" title="三种常用元字符"></a>三种常用元字符</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/781.png" alt="781"></p><p><strong>边界符</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/782.png" alt="782"></p><p>注意同时用^和$的精确匹配，只有开头结尾都是同一个字符，才是真</p><p><strong>量词</strong></p><p>量词是干嘛的呢，它是限定次数的，比如设置一个密码，你可以规定最大长度。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/783.png" alt="783"></p><p>注意{n,m}这里面不要加空格</p><p><strong>字符类</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/784.png" alt="784"></p><p>[abcdefg……..z]和连字符[a-z]是一样的效果，即用户必须包含里面的其中一个即可。</p><p><strong>注意</strong>：</p><blockquote><p>1-这个正则表达式也是有优先级的，如这个腾讯的，{4，}只管的了[0-9]管不了[1-9],这段表达式的意思就是qq第一位必须是1-9，后续位必须等于或超过四个且是0-9</p><p>2- console.log(/^a?$/.test(‘’)) <em>//true</em></p><p>这里为什么是true呢？不是a要是在开头也是结尾吗？空字符如何实现？</p><p>其实是理解错误了，这里可以/^a?$/看作/^(a?)$/ 其中a？的意思就是可以一个a或者0</p><p>个a，所以可以相当于/^$/，即空字符开头结尾，所以结果为true</p></blockquote><p>后面的量词只对最近的字符类生效。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/785.png" alt="785"></p><p>注意：上图的字符类加了边界符，必须开头和结尾，那么只有选其中一个字母的时候，才会成立，如234成立，15不成立。</p><p>[a-zA-Z]一般表示26个字母不区分大小写，即变成了52个字母任填也能过 </p><p>[a-zA-Z0-9]就是可以输入数字字母都可以。</p><p>[a-zA-Z0-9-_]也可以加上短横线和下划线，这样用户也可以输入这两个字符做账户或密码</p><h2 id="案例验证用户名"><a href="#案例验证用户名" class="headerlink" title="案例验证用户名"></a>案例验证用户名</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/786.png" alt="786"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.right</span> <span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.error</span> <span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入您的账户名<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> text <span class="token operator">=</span> input<span class="token punctuation">.</span>nextElementSibling        input<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"blur"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z0-9-_]&#123;6,16&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                text<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"用户名可用"</span>                text<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'right'</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                text<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"用户名必须大于6位小于16位"</span>                text<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'error'</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^a-zA-Z0-9-_&#123;6,16&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span>value<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>两个不同的^</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/787.png" alt="787"></p><p>原先学的肩括号是边界符一般加在最外面，如/^[a-z]$/</p><p>这里的^是取反符号，加在字符类里面，如/[ ^a-z]$/,这个的意思是除a-z以外的所有字符。</p><p>还有一个点.  是匹配除换行符之外的所有字符，如/^.{6,16}$/表示输入任意字符6-16个</p><p><strong>字符类的更简洁写法</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/788.png" alt="788"></p><blockquote><p>/^\d{4}-\d{2}-\d{2}$/这个的意思就算必须是2022-06-21这种格式，没错必须加上斜杠才算正确。</p></blockquote><p><strong>修饰符</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/789.png" alt="789"></p><p>修饰符是写在//的后面，如上的i表示不区分大小写，那么我test大写A也是得到true</p><p>g是global的意思，不仅限于选中符合正则表达式的第一个，而是匹配所有符合 条件的，下面的替换敏感词会用到。</p><p>修饰符的替换replace</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/790.png" alt="790"></p><p>这个意思就算从字符串里面找匹配正则表达式的内容，然后替换成其他文本。</p><p><strong>案例过滤敏感词</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/791.png" alt="791"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/792.png" alt="792"></p><p>1-这里的g是修饰符，如果不添加的话，如果文本有多个符合正则表达式的文本，如上的“激情”，那么只会替换一个。</p><p>2-如果要添加多个敏感词，用|隔开即可。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> textarea <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'textarea'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> p <span class="token operator">=</span> textarea<span class="token punctuation">.</span>nextElementSibling        <span class="token keyword">let</span> btn <span class="token operator">=</span> p<span class="token punctuation">.</span>nextElementSibling        btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            p<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> textarea<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">逗逼|愚蠢</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">'大帅哥'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/793.png" alt="793"></p><h2 id="综合案例小兔仙表单验证"><a href="#综合案例小兔仙表单验证" class="headerlink" title="综合案例小兔仙表单验证"></a>综合案例小兔仙表单验证</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/794.png" alt="794"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/795.png" alt="795"></p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/796.png" alt="796" style="zoom: 80%;" /><p>1-需求7那种单选框同意条款，我们自己一般做不成那么好看的效果，所以一般使用i标签通过iconfont类来渲染，使用ClassList.toggle()来实现。</p><p>2-需求八中，当所有的input中有一个是false，即不提交，需要用到e.preventDefault（）来阻止默认事件。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/799.png" alt="799"></p><p>其中注意，提交事件是写在form上面，而不是写在那个提交按钮上面，提交的是form不是按钮。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/800.png" alt="800"></p><p>这个验证模块，即判断i标签有没有那个勾选的样式类名即可，用到了新知识,classList.contain(‘类名’)，有返回true，没有返回fasle</p><blockquote><p>在表单验证中，我们一般使用change事件而不是blur事件，只要当input内容value改变，再失去焦点就进行判断。</p><p>blur事件是失去焦点就判断，但是当用户根本没有输入，也判断了，实际开发中不需要这样。</p><p>还有一个input事件，只要输入就触发。</p></blockquote><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/797.png" alt="797"></p><p>其中还可以用css属性选择器去选中不同的输入框，因为表单里不同的input的name肯定不一样，因为前后端交互，需要用name来交换数据。</p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/798.png" alt="798" style="zoom:80%;" /><p>问题：</p><p>1-点击获取验证码的按钮，直接页面刷新了，自然没了效果，困扰我很久。</p><p><strong>原因</strong>：按钮如果是表单的<code>&lt;button&gt;</code>标签，如果没有指定type属性，则其type属性默认为type=submit。所以每次点击登录button后都会执行<strong>提交表单</strong>的操作，<strong>表单操作默认有刷新页面的功能</strong>。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.container</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0px auto<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.container div</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>输入用户名<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tel<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>输入手机号码<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>verify_code<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>短信验证码<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>verify_code<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get_code_btn<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>获取验证码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>验证码正确 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入6-20位的字母,数字,符合组合<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>密码格式正确<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password_confirm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>重复密码<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password_confirm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>密码一致<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rules<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rules<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                已阅读并同意<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>《用户服务协议》<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit_btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!-- &lt;a class="submit" href="javascript:;">下一步&lt;/a> --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 验证码</span>        <span class="token keyword">let</span> get_code_btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.get_code_btn'</span><span class="token punctuation">)</span>        get_code_btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            get_code_btn<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">05s后重新获取</span><span class="token template-punctuation string">`</span></span>            <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">5</span>            <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                num<span class="token operator">--</span>                get_code_btn<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">0</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>num<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">秒后重新获取</span><span class="token template-punctuation string">`</span></span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>                    get_code_btn<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">重新获取</span><span class="token template-punctuation string">`</span></span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token comment">// 验证用户名</span>        <span class="token keyword">let</span> username_value <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'[name=username]'</span><span class="token punctuation">)</span>        <span class="token comment">// 因为最后注册按钮也需要用到此验证函数，所以封装一下</span>        username_value<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> verifyUserName<span class="token punctuation">)</span>        <span class="token keyword">function</span> <span class="token function">verifyUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z0-9-_]&#123;6,10&#125;$</span><span class="token regex-delimiter">/</span></span>            <span class="token keyword">let</span> msg <span class="token operator">=</span> username_value<span class="token punctuation">.</span>nextElementSibling            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>username_value<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                msg<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'昵称长度为6到10个字符'</span>                <span class="token comment">// 这里为什么要返回false和true呢,因为注册按钮需要用到,只有所有验证都是true,才通过.</span>                <span class="token keyword">return</span> <span class="token boolean">false</span>            <span class="token punctuation">&#125;</span>            msg<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">'用户名可用'</span>            <span class="token keyword">return</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 验证手机号码</span>        <span class="token keyword">let</span> phone <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'[name=phone]'</span><span class="token punctuation">)</span>        phone<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> verifyUserphone<span class="token punctuation">)</span>        <span class="token keyword">function</span> <span class="token function">verifyUserphone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^1(3\d|4[5-9]|5[0-35-9]|6[567]|7[0-8]|8\d|9[0-35-9])\d&#123;8&#125;$</span><span class="token regex-delimiter">/</span></span>            <span class="token keyword">let</span> msg <span class="token operator">=</span> phone<span class="token punctuation">.</span>nextElementSibling            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>phone<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                msg<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'手机号码格式不正确'</span>                <span class="token keyword">return</span> <span class="token boolean">false</span>            <span class="token punctuation">&#125;</span>            msg<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">'手机号码可用'</span>            <span class="token keyword">return</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 其他的input验证如短信和密码都同上,换一下正则即可.</span>        <span class="token comment">// 注册按钮提交</span>        <span class="token keyword">let</span> form <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'form'</span><span class="token punctuation">)</span>        form<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'submit'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token function">verifyUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">verifyUserphone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">verifyUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'请正确输入所有信息'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webApi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dom&amp;Bom_06Day</title>
      <link href="archives/fa200a93.html"/>
      <url>archives/fa200a93.html</url>
      
        <content type="html"><![CDATA[<h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/737.png" alt="737"></p><p>tips：</p><p>1-location的常用作用就是用js跳转网页，如我们支付成功，页面提示多少秒后自动跳转。</p><p>2-navgator大部分是用于获取当前用户是如何浏览的，是手机还是电脑，是谷歌浏览器还是火狐浏览器等，如京东你访问jd.com，如果检测到你是手机则自动跳转m,jd,com</p><p>3-history对象可以让浏览器操作网页返回上一步下一步</p><p>4-screen可以拿到屏幕信息</p><h2 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/738.png" alt="738"></p><p>如上，其实我们的document也是包含在window对象中的，bom包含了它们所有</p><p>在平时的一些语句中，其实都需要写一个window对象，只是默认省略了。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/739.png" alt="739"></p><p>如上监听器监听页面滚动事件，这个window也是可以省略的。</p><h2 id="定时器-延时函数"><a href="#定时器-延时函数" class="headerlink" title="定时器-延时函数"></a>定时器-延时函数</h2><p>注意这里的setTimeout的Timeout是一个单词，所以out的o不需要大写。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/740.png" alt="740"></p><p>setTimeot和setInterval不同，它只执行一次，即等待的毫秒数一过就执行</p><p>timeout很简单的意思，就是超时，等待超时后执行的函数就是延时函数。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>炸弹将在三秒后在控制台爆炸<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>清除炸弹<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">   <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'轰轰轰炸弹炸了'</span><span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span>   <span class="token keyword">let</span> clear <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'input[value="清除炸弹"]'</span><span class="token punctuation">)</span>   clear<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>案例</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/741.png" alt="741"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./广告.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">let</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      img<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="延时递归函数（了解）"><a href="#延时递归函数（了解）" class="headerlink" title="延时递归函数（了解）"></a>延时递归函数（了解）</h2><p>这里是利用递归机制，让setTimeout实现和setInterval一样的功能，众所周知递归函数就是自己调用自己。</p><p> 利用递归，让setTimeout实现setInterval功能</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span>        <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            div<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>             <span class="token function">setTimeout</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="js的执行机制（面试必问）"><a href="#js的执行机制（面试必问）" class="headerlink" title="js的执行机制（面试必问）"></a>js的执行机制（面试必问）</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/742.png" alt="742"></p><p>这两个结果都是1111-3333-2222,为什么定时0，还是最后执行呢？这就是js执行机制的问题。</p><p><strong>js是单线程的</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/743.png" alt="743"></p><p>比如最上面的setTimeout函数，当我设置1000秒，因为是单线程，岂不是要一直等？所以出现了同步和异步。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/744.png" alt="744"></p><p>同步任务会存在一个执行栈，异步任务会放在任务队列</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/745.png" alt="745"></p><p>当同步任务执行栈中的任务全部执行完，才会去按照顺序将异步任务的任务队列中的任务提取到执行栈来。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/760.png" alt="760"></p><p>定时器，普通事件，资源加载事件，ajax都是异步的。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/746.png" alt="746"></p><p>那么问题又来了，那么多异步任务，我怎么知道先让那个进入执行栈。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/747.png" alt="747"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/748.png" alt="748"></p><p>如这串代码，可能是1234也可能是1243，是在异步任务在筛选后再进入执行栈，情况不同自然顺序不同。</p><h2 id="location对象"><a href="#location对象" class="headerlink" title="location对象"></a>location对象</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/749.png" alt="749"></p><p><strong>location.href</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/750.png" alt="750"></p><p>案例</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/751.png" alt="751"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>支付成功<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>将于<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>秒后自动跳转<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>立即跳转<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> button <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> seconds <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">5</span>       timer<span class="token operator">=</span>  <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            i<span class="token operator">--</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                seconds<span class="token punctuation">.</span>innerText <span class="token operator">=</span> i            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>                seconds<span class="token punctuation">.</span>innerText <span class="token operator">=</span> i                location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">'http://life.zhoudongqi.com/'</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>        button<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">'http://life.zhoudongqi.com/'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>location.search</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/752.png" alt="752"></p><p>search是获取url中？后的部分</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/753.png" alt="753"></p><p>如图，当我们请求一些东西的时候，网址中有问号，一般是传递参数的作用。</p><p>href得到的是整个url，search得到？后的内容</p><p><strong>location.hash</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/754.png" alt="754"></p><p>他取的是#后的内容</p><p>location.reload()</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/755.png" alt="755"></p><p>当括号内为空则相当于f5刷新一次，当括号内为true则为ctrl+f5，强制刷新一次</p><p>强制刷新是重新从目标服务器获取，不走本地缓存。</p><h2 id="navigator对象"><a href="#navigator对象" class="headerlink" title="navigator对象"></a>navigator对象</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/756.png" alt="756"></p><p>我们可以通过这段js判断用户的浏览器平台，是手机的就跳手机端网页，如你用手机访问jd.com可以自动跳转m.jd.com</p><h2 id="history对象"><a href="#history对象" class="headerlink" title="history对象"></a>history对象</h2><p>history对象可以让网站回退和前进，类似浏览器的前后退，现在的网站基本上不用它了。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/758.png" alt="758"></p><p>和浏览器中这个前进后退基本上一样</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/757.png" alt="757"></p><p>案例</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/759.png" alt="759"></p><h2 id="swiper插件"><a href="#swiper插件" class="headerlink" title="swiper插件"></a>swiper插件</h2><p>官网<a href="https://swiper.com.cn/">https://swiper.com.cn/</a></p><p>通俗说，swiper插件就是一个专门做轮播图的平台，而且是纯原生写，里面有各种轮播图的代码，我们如果需要用到，直接复制就成</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/761.png" alt="761"></p><p>1.首先加载插件，需要用到的文件有swiper-bundle.min.js和swiper-bundle.min.css文件，不同<a href="https://swiper.com.cn/about/us/index.html#version-different">Swiper版本</a>用到的文件名略有不同。可下载<a href="https://swiper.com.cn/download/index.html#file1">Swiper文件</a>或使用<a href="https://swiper.com.cn/cdn/index.html">CDN</a>。</p><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    ...    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;dist&#x2F;css&#x2F;swiper-bundle.min.css&quot;&gt;&lt;&#x2F;head&gt;&lt;body&gt;    ...    &lt;script src&#x3D;&quot;dist&#x2F;js&#x2F;swiper-bundle.min.js&quot;&gt;&lt;&#x2F;script&gt;    ...&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.添加HTML内容。Swiper7的默认容器是’.swiper’，Swiper6之前是’.swiper-container’。</p><pre class="line-numbers language-none"><code class="language-none">&lt;div class&#x3D;&quot;swiper&quot;&gt;    &lt;div class&#x3D;&quot;swiper-wrapper&quot;&gt;        &lt;div class&#x3D;&quot;swiper-slide&quot;&gt;Slide 1&lt;&#x2F;div&gt;        &lt;div class&#x3D;&quot;swiper-slide&quot;&gt;Slide 2&lt;&#x2F;div&gt;        &lt;div class&#x3D;&quot;swiper-slide&quot;&gt;Slide 3&lt;&#x2F;div&gt;    &lt;&#x2F;div&gt;    &lt;!-- 如果需要分页器 --&gt;    &lt;div class&#x3D;&quot;swiper-pagination&quot;&gt;&lt;&#x2F;div&gt;        &lt;!-- 如果需要导航按钮 --&gt;    &lt;div class&#x3D;&quot;swiper-button-prev&quot;&gt;&lt;&#x2F;div&gt;    &lt;div class&#x3D;&quot;swiper-button-next&quot;&gt;&lt;&#x2F;div&gt;        &lt;!-- 如果需要滚动条 --&gt;    &lt;div class&#x3D;&quot;swiper-scrollbar&quot;&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;导航等组件可以放在Swiper容器之外<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.你可能想要给Swiper定义一个大小，当然不要也行。</p><pre class="line-numbers language-none"><code class="language-none">.swiper &#123;    width: 600px;    height: 300px;&#125;  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>4.初始化Swiper。</p><pre class="line-numbers language-none"><code class="language-none">&lt;script&gt;          var mySwiper &#x3D; new Swiper (&#39;.swiper&#39;, &#123;    direction: &#39;vertical&#39;, &#x2F;&#x2F; 垂直切换选项    loop: true, &#x2F;&#x2F; 循环模式选项        &#x2F;&#x2F; 如果需要分页器    pagination: &#123;      el: &#39;.swiper-pagination&#39;,    &#125;,        &#x2F;&#x2F; 如果需要前进后退按钮    navigation: &#123;      nextEl: &#39;.swiper-button-next&#39;,      prevEl: &#39;.swiper-button-prev&#39;,    &#125;,        &#x2F;&#x2F; 如果需要滚动条    scrollbar: &#123;      el: &#39;.swiper-scrollbar&#39;,    &#125;,  &#125;)          &lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>5.完成。恭喜你，现在你的Swiper应该已经能正常切换了。</p><p>如果作为CommonJs 或ES 模块引入</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;CommonJsvar Swiper &#x3D; require(&#39;swiper&#39;);    var mySwiper &#x3D; new Swiper(&#39;.swiper&#39;, &#123; &#x2F;* ... *&#x2F; &#125;);&#x2F;&#x2F;ESimport Swiper from &#39;swiper&#39;;    var mySwiper &#x3D; new Swiper(&#39;.swiper&#39;, &#123; &#x2F;* ... *&#x2F; &#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>实际中的使用</strong></p><p>1-引入swiper的swiper-bundle.min.js和swiper-bundle.min.css</p><p>2-写入你自己的网页结构，留出一个合适大小的盒子给轮播图即可</p><p>3-在swiper网站中找到你想要的轮播图，然后新窗口打开，查看源代码，复制它的结构和css和js即可</p><p>4-通过控制台调试，修改一下小细节。（一些配置看不懂可以参考文档）</p><p>注意当你一个页面，应用了多个轮播图，为了避免冲突，可以给复制的代码中轮播图盒子多加一个类名，然后js实例化的时候也指定这个类名。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 第一步引入css --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./css/swiper-bundle.min.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token comment">/* 第二步，留一个盒子给轮播图 */</span>        <span class="token selector">.box</span> <span class="token punctuation">&#123;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0px auto<span class="token punctuation">;</span>            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 第三步引入想要轮播图的样式 */</span>        <span class="token selector">html,        body</span> <span class="token punctuation">&#123;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">body</span> <span class="token punctuation">&#123;</span>            <span class="token property">background</span><span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>            <span class="token property">font-family</span><span class="token punctuation">:</span> Helvetica Neue<span class="token punctuation">,</span> Helvetica<span class="token punctuation">,</span> Arial<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.swiper-container</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.swiper-slide</span> <span class="token punctuation">&#123;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>            <span class="token comment">/* Center slide text vertically */</span>            <span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> -ms-flexbox<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> -webkit-flex<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">-webkit-box-pack</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">-ms-flex-pack</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">-webkit-justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">-webkit-box-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">-ms-flex-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">-webkit-align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> 300ms<span class="token punctuation">;</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.swiper-slide-active,        .swiper-slide-duplicate-active</span> <span class="token punctuation">&#123;</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 第二步，留一个盒子给轮播图 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 第三步引入想要轮播图的结构 --></span>        <span class="token comment">&lt;!-- Swiper --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-container zhuyi<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Slide 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Slide 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Slide 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Slide 4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Slide 5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Slide 6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Slide 7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Slide 8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Slide 9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Slide 10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- Add Pagination --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-pagination<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 第一步引入js --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./js/swiper-bundle.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 第三步引入想要轮播图的js --></span>    <span class="token comment">&lt;!-- Initialize Swiper --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> swiper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Swiper</span><span class="token punctuation">(</span><span class="token string">'.zhuyi'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            slidesPerView<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>            spaceBetween<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>            centeredSlides<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            loop<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            pagination<span class="token operator">:</span> <span class="token punctuation">&#123;</span>                el<span class="token operator">:</span> <span class="token string">'.swiper-pagination'</span><span class="token punctuation">,</span>                clickable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="本地储存"><a href="#本地储存" class="headerlink" title="本地储存"></a>本地储存</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/762.png" alt="762"></p><p>其中locakStorage使用的多，sessionStorage使用较少。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/763.png" alt="763"></p><p>除非手动删除，否则一直存在，以键值对形式储存。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/764.png" alt="764"></p><p>注意：里面的key和value都要带引号。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/765.png" alt="765"></p><p>其中可以在控制台看到，clear all按钮可以删除所有的数据</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">     localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"token_zhou"</span><span class="token punctuation">)</span>     localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">"sex"</span><span class="token punctuation">,</span><span class="token string">"man"</span><span class="token punctuation">)</span>     localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">"birth"</span><span class="token punctuation">,</span><span class="token string">"2022"</span><span class="token punctuation">)</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'我的名字是'</span><span class="token operator">+</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">'sex'</span><span class="token punctuation">)</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是我们不禁有个疑惑，我这样设置，真的麻烦，所以上面是简单数据类型，其实还没有存复杂数据类型即引用数据类型对象等。（难点）</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/766.png" alt="766"></p><p>JSON：属性和值都需要双引号包含。</p><p>当我们把键赋值为对象时，必须把这个对象转换为JSON字符串类型（因为对象传过去，在application无法显示）</p><p>数组等引用型数据同理</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/767.png" alt="767"></p><p>转换为json字符串后，我们再localStorage.getItem得到的也是一个字符串，取数据的时候可以用JSON.parse重新转换为对象。（为什么又转回来，因为我们使用数据的时候，对象更加方便）</p><p><strong>sessionStorage</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/768.png" alt="768"></p><p>用法和localStorage一样，只是把local改成session</p><h2 id="学生信息表"><a href="#学生信息表" class="headerlink" title="学生信息表"></a>学生信息表</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/769.png" alt="769"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/770.png" alt="770"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ie=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/user.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>新增学员<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    姓名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    年龄：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    性别: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>男<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>女<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    薪资：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>salary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    就业城市：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>北京<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>上海<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>广州<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>广州<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>深圳<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>深圳<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>曹县<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>曹县<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>录入<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>就业榜<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>学号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>年龄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>性别<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>薪资<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>就业城市<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!-- &lt;tr>        &lt;td>1001&lt;/td>        &lt;td>欧阳霸天&lt;/td>        &lt;td>19&lt;/td>        &lt;td>男&lt;/td>        &lt;td>15000&lt;/td>        &lt;td>上海&lt;/td>        &lt;td>          &lt;a href="javascript:">删除&lt;/a>        &lt;/td>      &lt;/tr> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 读取本地存储数据吗，如果有就返回对象，没有就添加三条数据</span>    <span class="token keyword">function</span> <span class="token function">getLocalData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> data <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span> stuId<span class="token operator">:</span> <span class="token number">1001</span><span class="token punctuation">,</span> uname<span class="token operator">:</span> <span class="token string">'jinnian'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span> gender<span class="token operator">:</span> <span class="token string">'男'</span><span class="token punctuation">,</span> salary<span class="token operator">:</span> <span class="token string">'20000'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'上海'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token punctuation">&#123;</span> stuId<span class="token operator">:</span> <span class="token number">1002</span><span class="token punctuation">,</span> uname<span class="token operator">:</span> <span class="token string">'tang'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">29</span><span class="token punctuation">,</span> gender<span class="token operator">:</span> <span class="token string">'男'</span><span class="token punctuation">,</span> salary<span class="token operator">:</span> <span class="token string">'30000'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'北京'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token punctuation">&#123;</span> stuId<span class="token operator">:</span> <span class="token number">1003</span><span class="token punctuation">,</span> uname<span class="token operator">:</span> <span class="token string">'亚洲'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">39</span><span class="token punctuation">,</span> gender<span class="token operator">:</span> <span class="token string">'男'</span><span class="token punctuation">,</span> salary<span class="token operator">:</span> <span class="token string">'222000'</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">'上海'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>        localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// getLocalData()</span>    <span class="token comment">// 获取父元素 tbody</span>    <span class="token keyword">let</span> tbody <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'tbody'</span><span class="token punctuation">)</span>    <span class="token comment">// 添加数据按钮 </span>    <span class="token comment">// 获取录入按钮</span>    <span class="token keyword">let</span> add <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.add'</span><span class="token punctuation">)</span>    <span class="token comment">// 获取各个表单的元素</span>    <span class="token keyword">let</span> uname <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.uname'</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> age <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.age'</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> gender <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.gender'</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> salary <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.salary'</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> city <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.city'</span><span class="token punctuation">)</span>    <span class="token comment">// 渲染函数  把数组里面的数据渲染到页面中</span>    <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token function">getLocalData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment">// 先干掉以前的数据  让tbody 里面原来的tr 都没有</span>      tbody<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">''</span>      <span class="token comment">// 在渲染新的数据</span>      <span class="token comment">// 根据数据的条数来渲染增加 tr  </span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 1.创建tr  </span>        <span class="token keyword">let</span> tr <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'tr'</span><span class="token punctuation">)</span>        <span class="token comment">// 2.tr 里面放内容</span>        tr<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">        &lt;td></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>stuId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/td>        &lt;td></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>uname<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/td>        &lt;td></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/td>        &lt;td></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>gender<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/td>        &lt;td></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>salary<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/td>        &lt;td></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>city<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/td>        &lt;td>          &lt;a href="javascript:" id="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">">删除&lt;/a>        &lt;/td>        </span><span class="token template-punctuation string">`</span></span>        <span class="token comment">// 3.把tr追加给 tobdy  父元素.appendChild(子元素)</span>        tbody<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>tr<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 页面加载就调用函数</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    add<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 先读一次原数据</span>      <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token function">getLocalData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment">// 获得表单里面的值   之后追加给 数组 arr  用 push方法</span>      arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 得到数组最后一条数据的学号 1003    + 1</span>        stuId<span class="token operator">:</span> arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>stuId <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>        uname<span class="token operator">:</span> uname<span class="token punctuation">.</span>value<span class="token punctuation">,</span>        age<span class="token operator">:</span> age<span class="token punctuation">.</span>value<span class="token punctuation">,</span>        gender<span class="token operator">:</span> gender<span class="token punctuation">.</span>value<span class="token punctuation">,</span>        salary<span class="token operator">:</span> salary<span class="token punctuation">.</span>value<span class="token punctuation">,</span>        city<span class="token operator">:</span> city<span class="token punctuation">.</span>value      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token comment">// 把原数据加上新增的数据加上去</span>      localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment">// console.log(arr)</span>      <span class="token comment">// 重新渲染我们的函数</span>      <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment">// 复原所有的表单数据</span>      uname<span class="token punctuation">.</span>value <span class="token operator">=</span> age<span class="token punctuation">.</span>value <span class="token operator">=</span> salary<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">''</span>      gender<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'男'</span>      city<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'北京'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 删除操作， 删除的也是数组里面的数据 ， 但是我们用事件委托</span>    tbody<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token function">getLocalData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment">// alert(11)</span>      <span class="token comment">// 我们只能点击了链接 a ，才会执行删除操作</span>      <span class="token comment">// 那我们怎么知道你点击了a呢？</span>      <span class="token comment">// 俺们只能点击了链接才能做删除操作</span>      <span class="token comment">// console.dir(e.target.tagName)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>tagName <span class="token operator">===</span> <span class="token string">'A'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 当就剩最后一条数据，不允许删除，这里是为了防止一个bug，当装入数据再全部删完，那么arr为空，就无法再获取arr长度，而我们又要用到它，则报错</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>id <span class="token operator">===</span> <span class="token string">'0'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'管理员账户无法删除'</span><span class="token punctuation">)</span>          <span class="token keyword">return</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// alert('你点击了链接')</span>        <span class="token comment">// 删除操作  删除 数组里面的数据  arr.splice(从哪里开始删，1)</span>        <span class="token comment">// 我要得到a的id 需要</span>        <span class="token comment">// console.log(e.target.id)</span>        arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment">// 这里虽然没用remove去删除localStorage里面的数据，但是重新赋值覆盖了</span>        localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment">// 重新渲染我们的函数</span>        <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">a</span> <span class="token punctuation">&#123;</span>  <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span>#721c24<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h1</span> <span class="token punctuation">&#123;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span>#333<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 20px 0<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token selector">table</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span>0 auto<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>  <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span>#004085<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">th</span> <span class="token punctuation">&#123;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #cfe5ff<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">td,th</span> <span class="token punctuation">&#123;</span>  <span class="token property">border</span><span class="token punctuation">:</span>1px solid #b8daff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">td</span> <span class="token punctuation">&#123;</span>  <span class="token property">padding</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span>#666<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">tbody tr</span> <span class="token punctuation">&#123;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">tbody tr:hover</span> <span class="token punctuation">&#123;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #e1ecf8<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.info</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 50px auto<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.info  input</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>  <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span>1px solid #b8daff<span class="token punctuation">;</span>  <span class="token property">padding-left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.info button</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #004085<span class="token punctuation">;</span>  <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.info .age</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>自定义属性</strong></p><p>属性有class，id，title等，但是有时为了好区分或者避免冲突，我们可以自定义属性</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/771.png" alt="771"></p><p>但是因为这个属性有人为设置，可能五花八门，为了后续人员维护，行内有一个通用的默契，就是以data打头，后续html5还推出了标准，这种书写方式的自定义属性，可以用 （对象名.dataset）访问，他包含了此对象的所有自定义属性(以data-打头的)。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/773.png" alt="773"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webApi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dom&amp;Bom_01Day</title>
      <link href="archives/67f7322a.html"/>
      <url>archives/67f7322a.html</url>
      
        <content type="html"><![CDATA[<h2 id="switch中default中的break可以省略吗？"><a href="#switch中default中的break可以省略吗？" class="headerlink" title="switch中default中的break可以省略吗？"></a>switch中default中的break可以省略吗？</h2><p>总所周知，switch中每段case语句结束后，需要写break来跳出switch语句，否则会一直往下面执行</p><p>1-当default在switch中的最后，可以不加break，因为往下也没东西了</p><p>2-当default后面还有switch的语句，就需要break。</p><h2 id="webapi的规划"><a href="#webapi的规划" class="headerlink" title="webapi的规划"></a>webapi的规划</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/512.png" alt="512"></p><p>第一天：我们需要让页面通过一些操作，发生一些改变，就需要获取这个元素，还有学习如何修改它的属性如样式等。</p><p>第二天：学习一些事件基础，比如用户点击某控件，页面发生某些改变。</p><p>第三天：节点的增删查改。</p><p>第四天：更高级的事件</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/513.png" alt="513"></p><p>第五天：轮播图等特效案例</p><p>第六天：bom操作，如勾选记住密码，后续不需要我们再输入密码，浏览器会存储下来</p><p>第七条：正则表达式，即在浏览器中就完成表单的一些验证，如密码合法性，减少服务器的压力</p><h2 id="webapi基本认知"><a href="#webapi基本认知" class="headerlink" title="webapi基本认知"></a>webapi基本认知</h2><p>webapi就是通过js来操作html和浏览器</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/514.png" alt="514"></p><p><strong>dom树</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/515.png" alt="515"></p><p>dom树，可以直观的体现标签与标签间的关系。</p><p><strong>dom对象</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/516.png" alt="516"></p><p>1-dom的核心就是把网页中的内容当做一个对象来处理，如html中写的一个超链接a，也会自动生成一个对象，有一系列的属性和方法，我们可以通过修改这些属性来改变a的内容样式等。</p><p>2-document是dom提供的一个对象，网页所有内容都包含在document里面，如a生成的a对象，就是document对象的一个属性。（对象里面是可以嵌套对象的，也等于一个属性）</p><p>如下代码</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">let dad =&#123;    name:'dad',    age:18,    son:&#123;        name:'son',        age:12    &#125;&#125;console.log(dad.son.name);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在开发它一般是不使用的，这里提到是方便理解document对象包含了网页中的所有标签等生成的对象。它们都是document对象的一个属性。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/517.png" alt="517"></p><h2 id="获取DOM对象"><a href="#获取DOM对象" class="headerlink" title="获取DOM对象"></a>获取DOM对象</h2><p><strong>通过css选择器来获取DOM元素（重点）</strong></p><p>  <img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/518.png" alt="518"></p><p>1-query查找查询；selector选择器</p><p>2-document.querySelector(“css选择器”)就是dom提供的一个通过查询选择器，并返回匹配的第一个元素对象的方法。</p><p>3-注意这里只返回第一个，Selector的S需要大写，一般这些内置方法都符合小驼峰原则。</p><p>4-方法括号内要加引号</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/519.png" alt="519"></p><p>只要括号内写css选择器即可，类选择器，标签选择器，id选择器都可以，和原先学css时一样的书写方法。</p><p><strong>问题：</strong>我就想获取多个元素怎么办？</p><p>使用document.querySelectorAll()即可，多加一个All</p><p>注意：它返回多个对象，包含在一个数组内。</p><p><strong>思考</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/520.png" alt="520"></p><p>因为querySelector是获取一个元素的对象，所以是可以直接修改的，All就不行了，需要数组遍历出对象，再修改。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>超链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>我的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>产品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>联系<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> hah<span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>hah<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hah<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>querySelectorAll()获取的多个元素对象组成的数组是伪数组</strong></p><p>很容易理解，如果它可以pop删和push增，那页面元素都乱套了，所以js在底层中就设置它是一个伪数组。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/521.png" alt="521"></p><p><strong>其他获取DOM元素方法（了解）</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/522.png" alt="522"></p><p>这里分别是通过id选择器，类选择器，标签选择器来选择，其中id中的Element后没有s，是因为id是唯一的。</p><p>这种方法缺陷很明显，太麻烦，还不如直接querySelector,想写什么选择器就什么选择器。</p><h2 id="设置-修改DOM元素内容"><a href="#设置-修改DOM元素内容" class="headerlink" title="设置/修改DOM元素内容"></a>设置/修改DOM元素内容</h2><p><strong>document,write(）</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/523.png" alt="523"></p><p><strong>对象.innerText属性</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/524.png" alt="524"></p><p>1-innerText就是里面的文字，是div生成对象的其中一个属性</p><p>2-我们要修改，直接对象.innerText=””即可</p><p>3-innerText不识别标签，如上图strong不会被解析</p><p><strong>对象.innerHTML属性</strong></p><p>1-innerHTML和innerText的用法相似，区别就是可以识别标签</p><p>2-HTML必须全面大写</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/525.png" alt="525"></p><p><strong>案例</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/526.png" alt="526"></p><h2 id="设置-修改DOM元素的属性"><a href="#设置-修改DOM元素的属性" class="headerlink" title="设置/修改DOM元素的属性"></a>设置/修改DOM元素的属性</h2><p>修改常用属性</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/527.png" alt="527"></p><p>修改样式属性</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/528.png" alt="528"></p><p>css样式属性默认写在一个style对象里，所以用对象.style.样式属性来修改</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/529.png" alt="529"></p><p>注意</p><p>1-当样式属性有斜杠，如background-color，margin-top等，我们需要转换为小驼峰命名法，即backgroundColor与marginTop</p><p>2-body标签特殊，因为一个页面只有一个body页面，所以不需要获取它的对象，可以直接使用document.body来选中，如document.body.style.backgroundImage=”xxx.png”,其中id选择器也可以直接选中，但是在低版本浏览器中不兼容，所以不建议使用。</p><p>​    这里为什么最前面多了一个document呢？因为我们在获取时就是从document取得的，也就是说document.querySelect(“”)返回的对象也是从document来的，只是省略了。</p><p>​    body因为没使用document.querySelect(“”)来获取，所以前面需要加上document</p><p>3-这里提供js修改的样式会被添加到行内式css中，并不会修改原先内部式代码，也就是说只是添加了行内式来层叠覆盖。</p><p><strong>使用style可以改样式，但是当要修改多个样式，未免太麻烦，所以有了className</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/530.png" alt="530"></p><p>1-上图的元素也是获取之后的对象</p><p>2-这里相当于给获取元素加上一个类名</p><p>3-这里的类名是赋值，如果原先就有一个类，会被覆盖，如果需要添加一个类，需要保留之前的类。</p><p>4-可以不使用等号，而是使用+=，就不会覆盖原先的类名（视频弹幕一位兄弟说的，我试试还真可以）</p><p><strong>但是这样还是或多或少对类的操作不方便，所以有了classList</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/531.png" alt="531"></p><p>toggle转换，切换，切换键，原先有这个类名就删了，原先没有就添加。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/532.png" alt="532"></p><p>如disabled，checked，selected，它们的值是false和true</p><p>使用  获取的对象.checked=flase/true</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/533.png" alt="533"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> input <span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">)</span>        input<span class="token punctuation">.</span>type<span class="token operator">=</span><span class="token string">"password"</span>        input<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token string">"hah"</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="定时器-间歇函数"><a href="#定时器-间歇函数" class="headerlink" title="定时器-间歇函数"></a>定时器-间歇函数</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/534.png" alt="534"></p><p>如上图的用户协议秒数变化，轮播图的转换等循环自动执行的代码，叫做定时器函数。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/535.png" alt="535"></p><p>interval间隔的</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/536.png" alt="536"></p><p>setInterval(函数名,定时时间)</p><p>注意：</p><p>1-前面函数要么写匿名函数，要么写一个函数名，如果写函数名则不要加小括号，如上图的show</p><p>因为加了小括号就立即调用了，定时器的意义就没了（如果加了括号，只会立即执行一次）</p><p>2-定时时间是按毫秒来的，如上图1000ms就等于1s</p><p>3-setInterval(函数,定时时间)，这个方法会返回一个数字，一般是第几个定时器就返回几，后面关闭定时器需要用到这个返回值。</p><p><strong>关闭清除定时器</strong></p><p>当一个轮播图，鼠标放上去，就会停止轮播，就用到了关闭定时器</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/537.png" alt="537"></p><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><p><strong>案例1</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/538.png" alt="538"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        用户注册协议        欢迎注册成为京东用户！在您注册过程中，您需要完成我们的注册流程并通过点击同意的形式在线签署以下协议，请您务必仔细阅读、充分理解协议中的条款内容后再点击同意（尤其是以粗体或下划线标识的条款，因为这些条款可能会明确您应履行的义务或对您的权利有所限制）。        【请您注意】如果您不同意以下协议全部或任何条款约定，请您停止注册。您停止注册后将仅可以浏览我们的商品信息但无法享受我们的产品或服务。如您按照注册流程提示填写信息，阅读并点击同意上述协议且完成全部注册流程后，即表示您已充分阅读、理解并接受协议的全部内容，并表明您同意我们可以依据协议内容来处理您的个人信息，并同意我们将您的订单信息共享给为完成此订单所必须的第三方合作方（详情查看）    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>我已阅读用户协议(6s)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> btn <span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> seconds<span class="token operator">=</span><span class="token number">6</span>        btn<span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">true</span>        <span class="token comment">// timer是定时函数返回的值，用于关闭定时器</span>       <span class="token keyword">let</span> timer<span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            seconds<span class="token operator">--</span>            btn<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">我已阅读用户协议(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>seconds<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">s)</span><span class="token template-punctuation string">`</span></span>            <span class="token keyword">if</span><span class="token punctuation">(</span>seconds<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">// 关闭定时器</span>                <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>                btn<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"我已阅读用户协议"</span>                <span class="token comment">// 注意布尔类型不要加引号，否则会被看作字符串</span>                btn<span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意布尔类型true和false不要加引号，否则会被当做字符串。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webApi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础_05day</title>
      <link href="archives/6e31a745.html"/>
      <url>archives/6e31a745.html</url>
      
        <content type="html"><![CDATA[<h2 id="函数传参技巧"><a href="#函数传参技巧" class="headerlink" title="函数传参技巧"></a>函数传参技巧</h2><p>此技巧，为前面所学逻辑中断防止用户没有传入参数，导致输出为NaN的升级方法。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/489.png" alt="489"></p><p>如上图，可以利用或运算符的逻辑中断，如果用户没有传入数据，则x和y都等于0</p><p>其实我们可以直接在形参这里设置，x与y等于0，有参数传过来，就等于传过来的数据，没有即也等于0</p><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><h3 id="什么是对象"><a href="#什么是对象" class="headerlink" title="什么是对象"></a>什么是对象</h3><p>当我们要储存一类信息，比如一个人，要保存他的姓名，身高，性别，会的技能，我们应该怎么保存它呢？</p><p>​        我们可以用数组，因为数组可以保存各种类型的数据，但有一个致命缺点，就是很难区分，human[180，180，”男”]，你无法区分他是是男的，还是喜欢男的哈哈，很难区分。</p><p>​        所以就需要用到对象</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/490.png" alt="490"></p><p>静态特征称为属性，动态特征称为方法。</p><p>数组是有顺序的，对象是无序的。</p><p>对象是一种数据类型，是无序数据的集合，可以详细的描述某个事物。</p><h3 id="对象的使用"><a href="#对象的使用" class="headerlink" title="对象的使用"></a>对象的使用</h3><p> <img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/491.png" alt="491"></p><p>里面的属性和方法，用逗号隔开</p><p>方法后面一般写的是匿名函数</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/492.png" alt="492"></p><p>属性名如上图的uname，可以用单/双引号，如写成 ‘uname’</p><p>但是一般不添加，除非名称遇到一些特殊符号，但是在json中必须加上。</p><p>属性方法名字可以有空格，中横线等，但不代表什么符号都可以（会报错），一般写字母就行了。</p><p><strong>console.log与console.dir的区别</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/493.png" alt="493"></p><p>一个是直接打印出来，一个是以directory目录的形式显示出来。 </p><p><strong>属性与方法的访问</strong></p><p>属性和方法的访问有两种方法，如下图。</p><p>第一种 对象名.属性/方法名</p><p>第二种 对象名[‘属性/方法名’]</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/494.png" alt="494"></p><p>我们一般用第一种方式，第二种方式在后面会用到，而是必须这样写。</p><p><strong>方法的调用</strong></p><p>对象.方法名()</p><p>如上图有有一个biancheng的方法，调用的时候写obj.biancheng()即可，它本质还是一个函数。</p><h3 id="操作对象"><a href="#操作对象" class="headerlink" title="操作对象"></a>操作对象</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/495.png" alt="495"></p><p>1-查，前面已经用到过了，就是  对象.属性/方法名</p><p>2-改，直接重新赋值即可</p><p>3-增，js中的对象可以动态添加，直接 对象.新属性/方法名=新值 </p><p>4-删，delete 对象.属性/方法名</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/496.png" alt="496"></p><h3 id="遍历对象（for-k-in-对象）"><a href="#遍历对象（for-k-in-对象）" class="headerlink" title="遍历对象（for k in 对象）"></a>遍历对象（for k in 对象）</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/497.png" alt="497"></p><p>因为对象没有顺序，不像数组里面的数据都排序了，所以不能通过以前的for循环来遍历</p><p>而需要用到 for(let k in 对象)来遍历，k是一个变量，可以随便设置，常用写k</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/498.png" alt="498"></p><p>其中这个k就是对象中的方法与属性名字，里面有几个方法和属性，就循环多少次</p><p>如上图第一次循环，k===’name’ 第二次循环k===’birthday’ 第三次循环k===‘age’</p><p>因为k不是在对象里面的一个属性/方法名字，所以zdq.k是无法取到值的，所以上图出现了undefined</p><p>只能通过对象查询的第二种方法， 对象[‘属性/方法名’]来取值。</p><h2 id="案例学生信息表（数组对象）"><a href="#案例学生信息表（数组对象）" class="headerlink" title="案例学生信息表（数组对象）"></a>案例学生信息表（数组对象）</h2><p>数组对象就是包含多个对象的一个数组</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/499.png" alt="499"></p><p>分析：</p><p>1-首先把不变的东西通过页面显示出来，如序号，姓名等</p><p>2-变化的数据通过遍历数组对象来得到数据，通过for循环来打印tr</p><p>3-再把tr中的数据用${}取出对象中的数据替换。</p><p><strong>新知识</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/500.png" alt="500"></p><p>这里的:not(:first-child)表示，tr中除了第一个tr</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">table</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">table,        th,        td</span> <span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>            <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">caption</span> <span class="token punctuation">&#123;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>            <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">font-weight</span><span class="token punctuation">:</span> 700<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">tr</span> <span class="token punctuation">&#123;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>            <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">table tr:nth-child(1)</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> #ddd<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">table tr:not(:first-child):hover</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>学生信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>将数据渲染到页面中...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 定义一个存储了若干学生信息的数组</span>        <span class="token keyword">let</span> students <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'小明'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> gender<span class="token operator">:</span> <span class="token string">'男'</span><span class="token punctuation">,</span> hometown<span class="token operator">:</span> <span class="token string">'河北省'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'小红'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span> gender<span class="token operator">:</span> <span class="token string">'女'</span><span class="token punctuation">,</span> hometown<span class="token operator">:</span> <span class="token string">'河南省'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'小刚'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span> gender<span class="token operator">:</span> <span class="token string">'男'</span><span class="token punctuation">,</span> hometown<span class="token operator">:</span> <span class="token string">'山西省'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'小丽'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> gender<span class="token operator">:</span> <span class="token string">'女'</span><span class="token punctuation">,</span> hometown<span class="token operator">:</span> <span class="token string">'山东省'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'晓强'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> gender<span class="token operator">:</span> <span class="token string">'女'</span><span class="token punctuation">,</span> hometown<span class="token operator">:</span> <span class="token string">'山东省'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'晓强'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> gender<span class="token operator">:</span> <span class="token string">'女'</span><span class="token punctuation">,</span> hometown<span class="token operator">:</span> <span class="token string">'山东省'</span> <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>        <span class="token comment">// 第一步 打印表格的头部和尾部</span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">        &lt;table>            &lt;caption>学生列表&lt;/caption>            &lt;tr>                &lt;th>序号&lt;/th>                &lt;th>姓名&lt;/th>                &lt;th>年龄&lt;/th>                &lt;th>性别&lt;/th>                &lt;th>家乡&lt;/th>            &lt;/tr>            </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token comment">// 中间遍历行数  原则就是有几条数据，我就遍历几次</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> students<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">                &lt;tr>        &lt;td></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/td>        &lt;td></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>students<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/td>        &lt;td></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>students<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/td>        &lt;td></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>students<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>gender<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/td>        &lt;td></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>students<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>hometown<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/td>    &lt;/tr></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 尾部</span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/table></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h3><h4 id="内置对象是什么"><a href="#内置对象是什么" class="headerlink" title="内置对象是什么"></a>内置对象是什么</h4><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/501.png" alt="501"></p><p>1-document.write()和console.log/dir()都是内置对象，我们调用了document对象里面的write方法，console对象里面的log/dir方法</p><p>2-alert()，prompt()等是内置函数。</p><h4 id="内置对象Math"><a href="#内置对象Math" class="headerlink" title="内置对象Math"></a>内置对象Math</h4><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/502.png" alt="502"></p><p>1-更多的内置对象，可以去w3c或者mdn内查看。</p><p>2-内置对象中有方法也有属性，如Math.PI属性，就是3.14xxxxx</p><p>3-注意Math的第一个字母大写</p><p><strong>Math.random()</strong></p><p>它返回的是0-1的随机数，包括0，不包括1</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span>  <span class="token comment">//  圆周率    π  </span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//  随机数  随机抽奖  随机点名</span>       <span class="token comment">// 返回的是小数  但是能得到 0  得不到 1</span>       <span class="token comment">// 向上取整  返回的整数</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// ceil  2</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// ceil  2</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token number">1.9</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// ceil  2</span>       <span class="token comment">// 向下取整  返回的整数  floor  </span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// floor  1</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// floor  1</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">1.9</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// floor  1</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'-------------------------------'</span><span class="token punctuation">)</span>       <span class="token comment">// round 就近取整( .5往大取证)  返回的整数   </span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// round  1</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// round  2</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">1.9</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// round  2</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'-------------------------------'</span><span class="token punctuation">)</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// round  -1</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// round  -1</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.9</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// round  -2</span>       <span class="token comment">// 最大值和最小值</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//45</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//1</span>   </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只需要注意就近取整Math.round()，当数据是负数，遇到  .5 往大取整</p><p>如Math.round(1.5)结果为2</p><p>但Math.round(-1.5)结果为-1</p><h4 id="生成任意范围随机数"><a href="#生成任意范围随机数" class="headerlink" title="生成任意范围随机数"></a>生成任意范围随机数</h4><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/503.png" alt="503"></p><p>这些公式是公理，可以不理解，直接取文档查阅，但是理解可以更好的记忆。</p><p>第一个公式：</p><p>因为是向下取整，取0-10的整数，一共十一个数字，取十一段范围，如0-0.1的范围给0，0.1-0.2的范围给1，每个数字平均一段“机率”所以是乘11</p><p>第三个公式：</p><p>1-很明显第三个公式的N是当random取0时用的；</p><p>2-当random不等于0，因为后面有+N，所以最少已经是N了，所以只剩下M-N的值，当random随机到最大也永远等于不了1，所以永远取不到公式中的M - N，也就取不到M这个值，所以需要+1来向下取整，得到M</p><p>我是这样理解的，可能有错误。</p><h4 id="随机点名案例"><a href="#随机点名案例" class="headerlink" title="随机点名案例"></a>随机点名案例</h4><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/504.png" alt="504"></p><p>1-先用公式封装一个取自己设置范围数字的随机数函数</p><p>2-把数字长度减1作为max,0作为最小,取得下标,然后输出即可</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">     <span class="token keyword">let</span> name <span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'赵云'</span><span class="token punctuation">,</span><span class="token string">'张飞'</span><span class="token punctuation">,</span><span class="token string">'关羽'</span><span class="token punctuation">,</span><span class="token string">'马超'</span><span class="token punctuation">,</span><span class="token string">'刘备'</span><span class="token punctuation">,</span><span class="token string">'曹操'</span><span class="token punctuation">]</span>     <span class="token keyword">function</span> <span class="token function">getRandom</span><span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span>max</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>max<span class="token operator">-</span>min<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>min     <span class="token punctuation">&#125;</span>          document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token function">getRandom</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>name<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>     </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果取到过的名字,不会再被取到应该怎么做呢?</p><p>我的思路:</p><p>因为这个名字不一定是在最前面也不一定在最后面,所以需要用splice来删除它即可</p><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><p><strong>tips</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/505.png" alt="505"></p><p>script标签是可以写在盒子内的,如上图,那么script渲染出的东西,也只会出现在盒子范围内.</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/506.png" alt="506"></p><p>分析:</p><p>1-这些案例和原先的柱状图案例一样,重在考查对数组对象中的取值</p><p>2-我们先写好h5和c3,然后通过for 循环来输出相应对象多个li即可</p><p>3-li的页面内容通过数组对象的取值来改变.</p><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><p><strong>术语</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/507.png" alt="507"></p><p><strong>数据类型</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/508.png" alt="508"></p><p><em>简单数据类型存储在栈,        复杂引用数据类型存储在堆(地址存在栈,内容在堆)</em></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/509.png" alt="509"></p><p>对象等赋值,如下</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/510.png" alt="510"></p><p>问题:obj2里面的属性改变,obj1也改了,为什么呢?</p><p>因为这里obj2被赋予的是obj1的地址,那么两者就指向同一个堆里面的数据</p><p>当obj2堆里面的数据改变,自然obj1的也被改变了</p><p><strong>数组等引用型数据遇到这种情况也是同理</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/511.png" alt="511"></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>不管是变量，还是数组，还是对象等等等，它们的声明都会受到作用域的影响，不能跨域使用。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础_04day</title>
      <link href="archives/d68dc020.html"/>
      <url>archives/d68dc020.html</url>
      
        <content type="html"><![CDATA[<h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><p>1-undefined+任意类型（除了字符串，字符串会拼接）=NaN </p><p>2-声明了但是没有赋值或没有值的东西，如变量，数组，没有设置return值的函数 等，打印输出的是undefined</p><p>3-数字类型可以直接输出，但是英文的话会被认为是变量，如果没有声明就会报错。</p><p>4-Shift+Alt+鼠标左键可以同时选择多行操作</p><h2 id="为什么学习函数"><a href="#为什么学习函数" class="headerlink" title="为什么学习函数"></a>为什么学习函数</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/457.png" alt="457"></p><h2 id="函数的使用"><a href="#函数的使用" class="headerlink" title="函数的使用"></a>函数的使用</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/458.png" alt="458"></p><h3 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h3><p> <img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/459.png" alt="459"></p><h3 id="函数的执行"><a href="#函数的执行" class="headerlink" title="函数的执行"></a>函数的执行</h3><p>函数只封装不会被执行，必须被调用才会被执行</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/460.png" alt="460"></p><p>alert()和parseInt()也是函数的调用，只是环境中已经提前帮我们封装好了</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/461.png" alt="461"></p><h2 id="函数传参"><a href="#函数传参" class="headerlink" title="函数传参"></a>函数传参</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/462.png" alt="462"></p><p>调用中写的值是实际参与运算叫实参，function name（形参）{}，</p><p><strong>形参相当于在函数体内声明了的东西（实参是一个变量它就是变量，实参是数组，它就算数组等等）</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/463.png" alt="463"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/464.png" alt="464"></p><p><strong>多个参数之间用逗号隔开，尽量做到形参和实参数量相同，如果实参多于形参，则前面的生效，后面的会存储在一个argument的伪数组中（有长度，但是不能pop，push等）</strong></p><blockquote><p>这个arguments在此函数内，在函数外用arguments是没有被声明的，这也很好理解，因为一个页面有很多个函数，不可能共用arguments</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/465.png" alt="465"></p><p>利用逻辑中断，防止无实参传入，导致结果为undefined</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/466.png" alt="466"></p><p>如图，当无实参，用或运算，就会把结果赋值为0</p><p><strong>案例</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/467.png" alt="467"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">   <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span>  <span class="token keyword">function</span> <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token parameter">arry</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arry<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        sum<span class="token operator">+=</span>arry<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/468.png" alt="468"></p><p><strong>函数有的有返回值，有的没有返回值。</strong></p><p>有的函数除了处理完问题，应该还需要有返回值，就像厨师炒了菜，要返回出来给顾客吃，不能把菜烂在厨房，如pop()返回删除的元素值，unshift()返回新数组的长度，promt()返回用户输入的字符串等等。</p><p>有的函数没有，如alert()它的作用就是一个警示框，不需要返回值。</p><p><strong>那么返回值怎么返回呢？</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/469.png" alt="469"></p><p><strong>使用return返回，且一个函数体内语句，执行return后，直接退出函数体，不再执行后续代码。</strong></p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/470.png" alt="470"></p><p>这个函数虽然返回值和那一句document.write()毫不相干，但是因为有 let re = getSum([100,99,92])这一句</p><p>就等于函数被调用了，函数内的所有语句等于被执行了一遍。</p><p><strong>返回数组最大值</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">function</span> <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token parameter">arry</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> max <span class="token operator">=</span> arry<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arry<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>max <span class="token operator">&lt;=</span> arry<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        max <span class="token operator">=</span> arry<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">最大值为</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>max<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    <span class="token keyword">return</span> max  <span class="token punctuation">&#125;</span>    <span class="token comment">// 你搁着重复声明呢？作用域不同，不冲突的。</span>  <span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span><span class="token number">99999</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="函数返回多个值"><a href="#函数返回多个值" class="headerlink" title="函数返回多个值"></a>函数返回多个值</h3><p>1-return只能返回一个值，强行返回多个，取最后那一个。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/471.png" alt="471"></p><p><strong>那我咋返回多个值呢</strong></p><p>答：使用数组的形式返回出来，虽然返回的只有一个数组，但是可以有多个各种不同的数据。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">function</span> <span class="token function">manyDdata</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span>y</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    jia<span class="token operator">=</span>x<span class="token operator">+</span>y    jian<span class="token operator">=</span>x<span class="token operator">-</span>y    cheng<span class="token operator">=</span>x<span class="token operator">*</span>y    <span class="token keyword">return</span> <span class="token punctuation">[</span>jia<span class="token punctuation">,</span>jian<span class="token punctuation">,</span>cheng<span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span>  <span class="token function">manyDdata</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>  document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token function">manyDdata</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>三元表达式是有一个返回值的，如下图</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/472.png" alt="472"></p><p><strong>断点调试的f10与f11区别</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/473.png" alt="473"></p><p>f10对应半圆箭头的快捷键，遇到函数，直接完成进行下一条语句</p><p>f11对应向下箭头的快捷键，遇到函数，会进入函数内部，分析函数内部的语句执行过程。</p><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/474.png" alt="474"></p><p><strong>为什么我明明声明了变量，却用不了呢？</strong></p><p>因为第一个是在for循环内声明的，for循环是块作用域，第二个num2是在函数内声明的，有函数作用域。</p><p><strong>怎么简单区分到底能不能用？</strong></p><p>一句话，被包含的能用包含它的，爹的儿子用，儿子的爹不能用。</p><p><strong>为啥我随便用，没有这啥作用域的讲究？</strong></p><p>1-你用的声明变量的关键词是var，var有变量提升，不规范现在一般不使用。</p><p>2-如下图你根本没声明，直接使用了变量并赋值，那么这个变量会被当做全局变量，不建议使用，底层会有漏洞。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/476.png" alt="476"></p><p><strong>Tips</strong></p><p>1-函数中的形参可以看作是被声明了的一个具有函数作用域的局部变量</p><p>2-global全局，local局部的，block块</p><p><strong>作用域的概述</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/475.png" alt="475"></p><p>注意如果有两个script标签，它们定义的变量一样是全局的</p><p>如下，第一个标签内声明的变量，第二个script里面是可以用的。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">3</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>两个作用域声明了名字一样的变量，调用者在同时两个作用域内，到底执行谁呢？按照什么规则执行的？</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/477.png" alt="477"></p><p>上图中，函数作用域的num和for块作用域的num都可以被console.log使用，那么使用谁？</p><p>通过作用域链，简单来说就近原则，可以知道，执行的结果为20</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/478.png" alt="478"></p><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/479.png" alt="479"></p><p>一般将匿名函数赋值给一个变量，并通过变量名称来调用，是高阶函数(包含函数表达式和回调函数)的一种，也叫函数表达式。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/480.png" alt="480"></p><p>默认这个变量名称就是它的函数名了。</p><p><strong>使用场景</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/481.png" alt="481"></p><p>点击了这个按钮后，就会执行这个函数。（这种是老的写法，新写法是添加监听器）</p><h3 id="立即执行函数"><a href="#立即执行函数" class="headerlink" title="立即执行函数"></a>立即执行函数</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/482.png" alt="482"></p><p>一般函数不调用不会执行，但是这个函数可以立即执行。</p><p><strong>第一种写法</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/483.png" alt="483"></p><p>其实立即执行函数写出来，就已经等于调用了，如上图</p><p>匿名函数的变量fn就等价于function(){}</p><p>而立即执行函数是(function(){})  ()就等于fn()，其中xy是形参，1和2是实参。</p><p><strong>第二种写法</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/484.png" alt="484"></p><p>一种是把匿名函数的变量fn就等价于function(){}，把这个fn用小括号包起来，就等于(fn)()</p><p>第二种写法是不包fn，把整个包起来，等于(fn ())</p><blockquote><p>如上图，立即执行函数写了一个函数名，其实立即执行执行函数和匿名函数也是可以写一个”假名字”的，用来区分它的作用。</p></blockquote><p><strong>使用场景</strong></p><p>立即执行函数，不是为了复用，被反复调用，而是为了让这段js按顺序运行，但是怕写的变量和其他变量冲突，就有了立即执行函数，因为在函数内，变量的作用域不同，就不用担心<strong>变量冲突变量污染</strong>了。</p><p><strong>注意</strong></p><p>如果一个页面有多个立即执行函数，不想其他语句分号；可以省略（编辑器内换行等于分号），但立即执行函数一定要在函数后面加分号，否则会报错，为了防止上一个立即函数后面没写分号，通常在立即执行函数前再加一个分号。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/485.png" alt="485"></p><p>这个分号不一定是立即执行函数的，但反正两个立即执行函数间的语句，至少有一个分号； 去隔开它们就行了。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">   <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">hah</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> num <span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>   <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">hah</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里用一个普通的let声明，后面有分号也行。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/486.png" alt="486"></p><h2 id="输入秒数转换为时分秒案例"><a href="#输入秒数转换为时分秒案例" class="headerlink" title="输入秒数转换为时分秒案例"></a>输入秒数转换为时分秒案例</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/487.png" alt="487"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">   <span class="token comment">// 用户输入秒数</span>   <span class="token keyword">let</span> seconds <span class="token operator">=</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">请输入秒数</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>   <span class="token comment">// 封装转换函数</span>   <span class="token keyword">function</span> <span class="token function">getResult</span> <span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">let</span> h <span class="token operator">=</span><span class="token function">parseInt</span><span class="token punctuation">(</span>t<span class="token operator">/</span><span class="token number">60</span><span class="token operator">/</span><span class="token number">60</span><span class="token operator">%</span><span class="token number">24</span><span class="token punctuation">)</span>       <span class="token keyword">let</span> m <span class="token operator">=</span><span class="token function">parseInt</span><span class="token punctuation">(</span>t<span class="token operator">/</span><span class="token number">60</span><span class="token operator">%</span><span class="token number">60</span><span class="token punctuation">)</span>       <span class="token keyword">let</span> s <span class="token operator">=</span><span class="token function">parseInt</span><span class="token punctuation">(</span>t<span class="token operator">%</span><span class="token number">60</span><span class="token punctuation">)</span>       h <span class="token operator">=</span> h<span class="token operator">&lt;</span><span class="token number">10</span><span class="token operator">?</span><span class="token string">'0'</span><span class="token operator">+</span>h<span class="token operator">:</span>h       m <span class="token operator">=</span> m<span class="token operator">&lt;</span><span class="token number">10</span><span class="token operator">?</span><span class="token string">'0'</span><span class="token operator">+</span>m<span class="token operator">:</span>m       s <span class="token operator">=</span> s<span class="token operator">&lt;</span><span class="token number">10</span><span class="token operator">?</span><span class="token string">'0'</span><span class="token operator">+</span>s<span class="token operator">:</span>s       <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">计算后的时间为</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>h<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">小时</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>m<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">分</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>s<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">秒</span><span class="token template-punctuation string">`</span></span>          <span class="token punctuation">&#125;</span>   <span class="token comment">// 打印输出</span>    <span class="token keyword">let</span> result <span class="token operator">=</span><span class="token function">getResult</span><span class="token punctuation">(</span>seconds<span class="token punctuation">)</span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>遇到错误</strong></p><p>1-三元表达式是返回一个值，但我并没有给这个返回值去赋予变量。</p><p>2-形参就相当于函数内声明的一个变量，不能再次声明</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/488.png" alt="488"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础_03day</title>
      <link href="archives/4b5af899.html"/>
      <url>archives/4b5af899.html</url>
      
        <content type="html"><![CDATA[<h2 id="const-和var-和-let-的区别"><a href="#const-和var-和-let-的区别" class="headerlink" title="const 和var 和 let 的区别"></a>const 和var 和 let 的区别</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html">https://blog.csdn.net/nilmao/article/details/123749696<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>简单来说：</p><p>1-var 声明的范围是函数作用域，let 和 const 声明的范围是块作用域</p><p>2-var 声明的变量会被提升到函数作用域的顶部，let 和 const 声明的变量不存在提升，且具有暂时性死区特征</p><p>3-var 允许在同一个作用域中重复声明同一个变量，let 和 const 不允许</p><p>4-在全局作用域中使用 var 声明的变量会成为 window 对象的属性，let 和 const 声明的变量则不会</p><p>5-const 的行为与 let 基本相同，唯一 一个重要的区别是，使用 const 声明的变量必须进行初始化，且不能被修改</p><p><strong>即现在在声明变量的时候，一般不使用var，而是使用const，当声明的变量的值会发生改变时，使用let</strong></p><blockquote><p>注意，引用数据类型，如数组和函数，对象等，它们里面的数据发生变化，也可以使用const来声明</p><p>因为变量储存的是它们的地址，而不是里面的一系列数据，数据改变，地址没变，所以不会与const冲突。</p></blockquote><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><h3 id=""><a href="#" class="headerlink" title=""></a><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/417.png" alt="417"></h3><p>分号表示语句的结束，所以括号里面其实有三句语句。</p><p><strong>注意是运行一次循环体内的语句后，再进行i++</strong></p><p>其中for循环最大的价值是循环遍历数组</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/418.png" alt="418"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">const</span> arry <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'雷军'</span><span class="token punctuation">,</span><span class="token string">'埃隆马斯克'</span><span class="token punctuation">,</span><span class="token string">'乔布斯'</span><span class="token punctuation">,</span><span class="token string">'库克'</span><span class="token punctuation">,</span><span class="token string">'哈哈'</span><span class="token punctuation">]</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arry<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>arry<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1-因为数组值变化，但是地址没变，arry存储的是地址，所以可以用const</p><p>2-数组名.length可以确定数组的长度</p><p>3-因为数组是从0开始，所以i=0也从0开始</p><p>4-因为数组的下标比长度少1，所以需要写成i=0;i&lt;=arry.length-1;i++，也可以把=去掉，写成i=0;i&lt;arry.length;i++</p><h3 id="退出循环"><a href="#退出循环" class="headerlink" title="退出循环"></a>退出循环</h3><p>for循环和while循环等循环和switch都可以用break来退出整个语句体。</p><p>for循环和while循环等循环也可以用continue退出本次循环，继续判断循环条件，进行下一次循环。</p><h3 id="for循环嵌套"><a href="#for循环嵌套" class="headerlink" title="for循环嵌套"></a>for循环嵌套</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/419.png" alt="419"></p><p>一般for循环才有嵌套，while循环嵌套较少。</p><p><strong>疑问</strong>：</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/420.png" alt="420"></p><p>这里有一个疑问，外循环多次，内循环的j不是重复声明了吗，let不是不能重复声明？</p><p>答:这里存在一个垃圾回收机制，内循环的for循环完毕后，会自动回收j变量，外循环第二次循环进来，会再</p><p>声明一个j，但是原先的j已经不存在了，被回收了。</p><p><strong>for循环嵌套的应用</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/421.png" alt="421"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">第</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">天 &lt;/br></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>      <span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token keyword">let</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">记住了第</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>j<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">个单词&lt;/br></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>案例一</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/422.png" alt="422"></p><p>首先我们来打印一个5x5的三角</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/423.png" alt="423"></p><p><strong>分析：我们要去找到一个算法，就像写h5和c3，需要布局分析，不要上手就写。</strong></p><p>1-很明显外循环控制有多少行，内循环控制一行打几个星星</p><p>2-内循环是通过中间语句j&lt;=x来控制打几个星的</p><p>3-所以我们要修改，括号内中间语句的条件</p><p>4-很明显倒三角的第一行就是一个星，第二行就是两个星，所以，我们把</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">for(let j=1;j&lt;=5;j++)&#123;           document.write(`⭐`)     &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>改成</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">for(let j=1;j&lt;=i;j++)&#123;           document.write(`⭐`)     &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>即可。</p><h3 id="九九乘法表"><a href="#九九乘法表" class="headerlink" title="九九乘法表"></a>九九乘法表</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/434.png" alt="434"></p><p>代码：</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/435.png" alt="435"></p><p>分析：与倒三角同理，把三角星换成乘法表达式即可（找到表达式的规律为 <strong>jxi</strong> ）</p><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a><strong>数组</strong></h2><h3 id="数组是什么？"><a href="#数组是什么？" class="headerlink" title="数组是什么？"></a>数组是什么？</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/436.png" alt="436"></p><p>注意数组内的数据是有顺序的。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/437.png" alt="437"></p><p>数组可以存储任意类型的数据，可以是字符串，也可以是布尔类型，甚至是对象等等。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/438.png" alt="438"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/439.png" alt="439"></p><h3 id="案例-求数组内元素和"><a href="#案例-求数组内元素和" class="headerlink" title="案例-求数组内元素和"></a>案例-求数组内元素和</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">   <span class="token keyword">const</span> arry <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>   <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span>   <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arry<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       sum <span class="token operator">=</span>sum<span class="token operator">+</span>arry<span class="token punctuation">[</span>i<span class="token punctuation">]</span>   <span class="token punctuation">&#125;</span>   document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">和是</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>sum<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>   document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">平均数是</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>sum<span class="token operator">/</span>arry<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意sum和要在for循环外就用let声明，不要放在for循环内，因为for循环内的变量是块作用域，在for语句块外无法被使用。</p><h3 id="求数组内元素最大值"><a href="#求数组内元素最大值" class="headerlink" title="求数组内元素最大值"></a>求数组内元素最大值</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/440.png" alt="440"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> arry <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span>    <span class="token keyword">let</span> max <span class="token operator">=</span> arry<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token comment">// for循环在i=1是因为已经把arry[0]给了max，不需要再比较</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arry<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>max<span class="token operator">&lt;</span>arry<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            max<span class="token operator">=</span>arry<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">最大值是</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>max<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="操作数组"><a href="#操作数组" class="headerlink" title="操作数组"></a>操作数组</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/441.png" alt="441"></p><p><strong>查和改简单，增和删需要记忆一下</strong></p><p>学过数据结构的都知道  puch是入，pop出</p><p>shift:转换，去除   </p><p>unshift即不去除则为增加</p><p>splice捻接; 绞接(两段绳子); 粘接(胶片、磁带等);胶接处; 粘接处; 绞接处;</p><h3 id="增"><a href="#增" class="headerlink" title="增"></a>增</h3><h4 id="数组-push"><a href="#数组-push" class="headerlink" title="数组.push()"></a>数组.push()</h4><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/442.png" alt="442"></p><p>puch中一次可以添加多个值，逗号隔开即可</p><p><strong>注意这里是增加到数组的末尾，而且会返回新数组的长度（可以声明一个变量接收，也可以直接打印）</strong></p><blockquote><p>arr.push是在数组的后面添加，arr.unshift是在数组的前面添加（可同时添加多个）</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/443.png" alt="443"></p><p><strong>案例</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/444.png" alt="444"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">const</span> arry <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span>  <span class="token keyword">const</span> newarry<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arry<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>arry<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">>=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      newarry<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arry<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>newarry<span class="token punctuation">)</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><h4 id="pop"><a href="#pop" class="headerlink" title="pop()"></a>pop()</h4><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/445.png" alt="445"></p><p>删除数组中的元素可以用arry.pop()，注意它的括号里面没有值，指定一次只删除数组中的最后<strong>一个</strong>元素；</p><p>无法像push()一样一次增加任意多个；</p><p>而且push()返回的是新数组的长度，但是pop()返回的是刚刚删除的元素值；</p><p>如果要删除多个可以给pop加一个循环；</p><h4 id="shift"><a href="#shift" class="headerlink" title="shift()"></a>shift()</h4><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/446.png" alt="446"></p><h4 id="splice删除指定元素（重点"><a href="#splice删除指定元素（重点" class="headerlink" title="splice删除指定元素（重点)"></a>splice删除指定元素（重点)</h4><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/447.png" alt="447"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/448.png" alt="448"></p><p>从哪里开始删除就在括号内第一个值就写谁的序号（包括删它），后面一个值是设置删几个，不设置的话默认删完。</p><p>我们也可以写三个参数，第三个参数是在第一个参数的位置插入东西</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">arr.splice(1,0,"yellow")<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样的话就不会删除东西，因为第二个参数为0，而且会插入yellow到green前面</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/449.png" alt="449"></p><p><strong>总结：</strong></p><p>1-pop和push是在末尾操作，shift和unshift是在数组前面操作</p><p>2-增的push()和unshift()可以一次添加多个元素，写在小括号内</p><p>3-删的pop()和shift()一次只能删除一个元素，小括号内不需要写值</p><p>4-pop()和shift()返回的是删除的元素，push()和unshift返回的是新数组长度。</p><p>5-splice没有返回值</p><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/450.png" alt="450"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/451.png" alt="451"></p><p>分析：找出规律书写for循环的条件，写两个for循环即可，外循环控制趟数，内循环控制每趟的交换次数，然后通过冒泡要求，书写if的条件。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/452.png" alt="452"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/453.png" alt="453"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">const</span> arry <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">333</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arry<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>arry<span class="token punctuation">.</span>length<span class="token operator">-</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>arry<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span>arry<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          <span class="token keyword">let</span> temp <span class="token operator">=</span>arry<span class="token punctuation">[</span>j<span class="token punctuation">]</span>          arry<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>arry<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>          arry<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>temp      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>arry<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="综合案例-柱状图"><a href="#综合案例-柱状图" class="headerlink" title="综合案例-柱状图"></a>综合案例-柱状图</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/454.png" alt="454"></p><p>要求：通过用户在js中输入的值，自动生成柱形图。</p><p><strong>分析：</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/455.png" alt="455"></p><p><strong>doncument.write(``)内反引号拓展</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/456.png" alt="456"></p><p>这个反引号是把所有doucument,write里面的代码给浏览器，浏览器再打印出来，不需要在一个doncument.write(``)内把语句写完，是可以多个拼凑的。</p><p>参考代码</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">*</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.box</span> <span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 700px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">border-left</span><span class="token punctuation">:</span> 1px solid pink<span class="token punctuation">;</span>            <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid pink<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 50px auto<span class="token punctuation">;</span>            <span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span>            <span class="token property">align-items</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.box>div</span> <span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>            <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>            <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.box div span</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> -20px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.box div h4</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin-bottom</span><span class="token punctuation">:</span> -35px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> -10px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- &lt;div style="height: 123px;">        &lt;span>123&lt;/span>        &lt;h4>第1季度&lt;/h4>    &lt;/div>    &lt;div style="height: 156px;">        &lt;span>156&lt;/span>        &lt;h4>第2季度&lt;/h4>    &lt;/div>    &lt;div style="height: 120px;">        &lt;span>120&lt;/span>        &lt;h4>第3季度&lt;/h4>    &lt;/div>    &lt;div style="height: 210px;">        &lt;span>210&lt;/span>        &lt;h4>第4季度&lt;/h4>    &lt;/div> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 1. 利用循环弹出四次输入框， 会得到4个数据，放到数组里面</span>        <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// prompt(`请输入第 $&#123;i&#125; 季度的数据`)  ===  123</span>            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">请输入第 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> 季度的数据</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// console.log(arr)</span>        <span class="token comment">// 注意我们渲染循环的是柱子 </span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class="box"></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token comment">// 循环4个柱子</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">                 &lt;div style="height: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">px;">                     &lt;span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/span>                    &lt;h4>第</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">季度&lt;/h4>                &lt;/div>            </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我的代码</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">*</span> <span class="token punctuation">&#123;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.box</span> <span class="token punctuation">&#123;</span>      <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 700px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>      <span class="token property">border-left</span><span class="token punctuation">:</span> 1px solid pink<span class="token punctuation">;</span>      <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid pink<span class="token punctuation">;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 50px auto<span class="token punctuation">;</span>      <span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span>      <span class="token property">align-items</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span>      <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.box>div</span> <span class="token punctuation">&#123;</span>      <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>      <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>      <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.box div span</span> <span class="token punctuation">&#123;</span>      <span class="token property">margin-top</span><span class="token punctuation">:</span> -20px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.box div h4</span> <span class="token punctuation">&#123;</span>      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> -35px<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span>      <span class="token property">margin-left</span><span class="token punctuation">:</span> -10px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!-- &lt;div class="box">        &lt;div style="height: 123px;">            &lt;span>123&lt;/span>            &lt;h4>第1季度&lt;/h4>        &lt;/div>        &lt;div style="height: 156px;">            &lt;span>156&lt;/span>            &lt;h4>第2季度&lt;/h4>        &lt;/div>        &lt;div style="height: 120px;">            &lt;span>120&lt;/span>            &lt;h4>第3季度&lt;/h4>        &lt;/div>        &lt;div style="height: 210px;">            &lt;span>210&lt;/span>            &lt;h4>第4季度&lt;/h4>        &lt;/div>    &lt;/div> --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    data_i <span class="token operator">=</span> <span class="token function">prompt</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">你要输入几个季度的数据？</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data_i<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">请输入第</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">个季度的数据</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class="box"></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    <span class="token comment">// 循环4个柱子</span>    <span class="token comment">// 这里的for循环j一样可以写成i，因为它们两个变量虽然名字相同，但是因为作用域</span>    <span class="token comment">// 所以它们其实是两个不同变量。</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> data_i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">            &lt;div style="height: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">px;">            &lt;span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/span>            &lt;h4>第</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">季度&lt;/h4>        &lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>总结：</p><p>1-如果页面效果和预想中的不一样，可以在浏览器控制台看看有没有错误，我这里就把数组名字写错过，导致for循环没有运行。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础_02day</title>
      <link href="archives/f3e69ffc.html"/>
      <url>archives/f3e69ffc.html</url>
      
        <content type="html"><![CDATA[<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/388.png" alt="388"></p><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/389.png" alt="389"></p><h3 id="一元运算符"><a href="#一元运算符" class="headerlink" title="一元运算符"></a>一元运算符</h3><p><strong>如何区分是几元运算符？</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/390.png" alt="390"></p><p><strong>一个运算需要几个表达式，就是几元运算符，比如+1，一个正号，只作用与后面的1，就是一元运算符。</strong></p><p><strong>但是x=1+2这里的+是加号的意思，需要用到两个值，就是二元运算符</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/391.png" alt="391"></p><p>注意，i++虽然是后增，但并不是运行完整个表达式再自增，而是按照运算顺序，经过了它，它就自增完毕了</p><p>如上图的++i，此时i已经通过i++变成了2，2再++i就变成了3</p><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/392.png" alt="392"></p><p>其中不等为！=，不全等为！==</p><p>等于两个值相等即可，如’11’==11</p><p>全等需要值和类型都一样，所以‘11’！==11</p><p><strong>开发中常用三等===</strong></p><h3 id="比较两个字符串"><a href="#比较两个字符串" class="headerlink" title="比较两个字符串"></a>比较两个字符串</h3><p>当比较两个字符串，会比较首字母的ASCII码，首字母相同，再比较后面的，以此类推。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/393.png" alt="393"></p><p>我们通常只需要记住A是65，a是97</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/394.png" alt="394"></p><p>注意：</p><p>1-NaN不等于NaN，以为NaN的意思是不是数字，没有定义它的值是什么东西</p><p>2-比较运算符也会发生隐式转换，3&gt;’2’的结果是true，字符2会被自动转换为数字2（加减乘除比较，除了加是拼接，其他的都会隐式转换）</p><p>3-以为小数有精度问题，所以0.1+0.2不等于0.3</p><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/395.png" alt="395"></p><p>逻辑运算符的短路</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/396.png" alt="396"></p><p>false，空字符‘’，null，undefined，0，是假的，其他的都是真的。（特殊情况，NaN也被看作假，因为它谁也不是，甚至NaN===NaN都是不成立的，它不等于自己)</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/397.png" alt="397"></p><p>当一个函数或者一个需要传入值的地方，用户没有传递数据过来，用以上或运算符，可以让结果默认变成0，利用这一原理，实现更好的用户体验。</p><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/398.png" alt="398"></p><p>这里只需要注意先与后或，&amp;&amp;优先级比||高</p><p>非！是一元运算符，优先级也很高</p><h2 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h2><p>语句后面的分号也可以省略。</p><h3 id="表达式和语句"><a href="#表达式和语句" class="headerlink" title="表达式和语句"></a>表达式和语句</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/399.png" alt="399"></p><p>表达式是计算一个值，如x=x+1；语句是做一个事情，如alert（）和console.log（）</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/400.png" alt="400"></p><p>程序分为三大流程控制语句，顺序，分支，循环。</p><h3 id="分支语句"><a href="#分支语句" class="headerlink" title="分支语句"></a>分支语句</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/401.png" alt="401"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/402.png" alt="402"></p><p>注意，if（）这个小括号里面的所有东西都会被转换成一个布尔类型，只能是真或者假</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/403.png" alt="403"></p><p>注意，如果运行了条件二，则肯定不满足条件一，条件二中不需要再赘述不满足条件一的条件，如下图</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/404.png" alt="404"></p><p>输入的13，当运行到判断time&lt;18的语句，则这个输入的数字肯定不小于12</p><h4 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h4><p><strong>一元</strong> 非！，正负号+-，自增自减++，–</p><p><strong>二元</strong>  加减乘除 +-*/</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/405.png" alt="405"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/406.png" alt="406"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// +可以把字符串转换成数字型</span>        <span class="token keyword">const</span> num1 <span class="token operator">=</span> <span class="token operator">+</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">'补零测试，请输入一个数'</span><span class="token punctuation">)</span>        re <span class="token operator">=</span> num1<span class="token operator">&lt;</span><span class="token number">10</span><span class="token operator">?</span><span class="token string">'0'</span><span class="token operator">+</span>num1<span class="token operator">:</span>num1        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>re<span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意</p><p>1-prompt取过来的值是字符串。</p><p>2-再复习，反引号内，美元符加大括号内可以直接写入变量</p><h4 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h4><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/407.png" alt="407"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/408.png" alt="408"></p><p>注意：</p><p>1-switch的运行顺序是直接去找switch中在下面case中对应的代码然后执行，不会像if语句，一句一句去判断，如上图，2直接去执行case2，不会去判断是否符合case1</p><p>2-值必须全等匹配，类型和值都要相等。</p><p>3-if一般用于区域判断，switch用于等值判断。</p><p>4-default可写可不写，是当所有case不满足条件的时候执行。</p><p>5-每个case语句后必须要用break退出swtich语句，否则会继续执行下面的case语句。</p><p>6-case后有一个引号别忘记。</p><p><strong>案例</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/409.png" alt="409"></p><p>分析：使用switch对应用户输入的运算符书写对应的case代码即可，然后在alert输出。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> n1 <span class="token operator">=</span> <span class="token operator">+</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">'第一个数字'</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> n2 <span class="token operator">=</span> <span class="token operator">+</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">'第er个数字'</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> activity <span class="token operator">=</span> <span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">'请输入你要的运算符+-*/'</span><span class="token punctuation">)</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>activity<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">'+'</span><span class="token punctuation">)</span><span class="token operator">:</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">结果为</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>n1 <span class="token operator">+</span> n2<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token keyword">break</span>      <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token operator">:</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">结果为</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>n1 <span class="token operator">-</span> n2<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token keyword">break</span>      <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token operator">:</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">结果为</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>n1 <span class="token operator">*</span> n2<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token keyword">break</span>      <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token operator">:</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">结果为</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>n1 <span class="token operator">/</span> n2<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果出现错误，记得在控制台中看错误提示（查看view里面，我的快捷键是shift+esc打开）</p><h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><h4 id="断点调试"><a href="#断点调试" class="headerlink" title="断点调试"></a>断点调试</h4><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/410.png" alt="410"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/411.png" alt="411"></p><p>我们可以设置一个断点，如上图在26行设置断点，这样代码在执行的时候就会在这里停下来</p><p>那我们如何继续执行呢？按f11快捷键，或者上图箭头的下一步即可</p><p>我们还可以在watch中输入想查看的变量</p><p>tip：</p><p>1-有时候因为你以前在控制台的设置，可能没有source，恢复控制台默认设置即可</p><p>2-控制台还可以设置语言为中文（setting设置-preferences偏好-language语言）</p><h4 id="while"><a href="#while" class="headerlink" title="while"></a>while</h4><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/412.png" alt="412"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/413.png" alt="413"></p><p><strong>使用while循环实现输入数字范围的累加和</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token operator">+</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">'请输入起始值'</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> <span class="token constant">I</span> <span class="token operator">=</span> <span class="token operator">+</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">'请输入结束值'</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> <span class="token constant">I</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    sum <span class="token operator">=</span> sum <span class="token operator">+</span> i    i<span class="token operator">++</span>  <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>js中变量是区分大小写的，所以可以使用i和I作为两个不同变量。</p><p>+可以把字符类型转换为数字类型</p><p><strong>小案例</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'你爱我吗'</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> result <span class="token operator">=</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">'爱/不爱'</span><span class="token punctuation">)</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>result <span class="token operator">===</span> <span class="token string">'爱'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我也爱你'</span><span class="token punctuation">)</span>    <span class="token keyword">break</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>continue和break的区别</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/414.png" alt="414"></p><p>continue是退出当前一次循环，如上图中，如果i===3则i自增，然后continue跳出此次循环，不执行下面的document打印方法，直接进行下一次循环条件判断。</p><p>break是直接跳出循环体。</p><p><strong>综合案例ATM机</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/415.png" alt="415"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/416.png" alt="416"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> run <span class="token operator">=</span> <span class="token function">prompt</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">          请输入您的操作:          1-取款          2-存款          3-查看余额          4-退出</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>run <span class="token operator">===</span> <span class="token string">'4'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'你已经安全退出'</span><span class="token punctuation">)</span>      <span class="token keyword">break</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>run<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">case</span> <span class="token string">'1'</span><span class="token operator">:</span>        <span class="token keyword">let</span> qu <span class="token operator">=</span> <span class="token operator">+</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">'请输入你要取款的金额'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>qu<span class="token operator">></span>sum<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">余额不足，你的余额只有</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>sum<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">元</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>          <span class="token keyword">break</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span><span class="token punctuation">&#123;</span>          sum <span class="token operator">-=</span> qu          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">取款成功，你本次取款</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>qu<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">元，你的余额还有</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>sum<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">元</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token keyword">break</span>        <span class="token punctuation">&#125;</span>              <span class="token keyword">case</span> <span class="token string">'2'</span><span class="token operator">:</span>        <span class="token keyword">let</span> cun <span class="token operator">=</span> <span class="token operator">+</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">'请输入你要存款的金额'</span><span class="token punctuation">)</span>        sum <span class="token operator">+=</span> cun        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">存款成功，你本次存款</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>cun<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">元，你的余额还有</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>sum<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">元</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token keyword">break</span>      <span class="token keyword">case</span> <span class="token string">'3'</span><span class="token operator">:</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">你的余额为</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>sum<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>do-while(基本不使用)</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">//先执行一次do内的语句，后判断while内的条件，成立即再运行do后的语句</span>    <span class="token keyword">let</span> i <span class="token operator">=</span><span class="token number">1</span><span class="token keyword">do</span> <span class="token punctuation">&#123;</span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'自学前端'</span><span class="token punctuation">)</span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/br></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    i<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础_01day</title>
      <link href="archives/e1533012.html"/>
      <url>archives/e1533012.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/341.png" alt="341"></p><h2 id="课程安排"><a href="#课程安排" class="headerlink" title="课程安排"></a>课程安排</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/343.png" alt="343"><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/342.png" alt="342"></p><h2 id="JavaScript介绍"><a href="#JavaScript介绍" class="headerlink" title="JavaScript介绍"></a>JavaScript介绍</h2><h3 id="js是什么？"><a href="#js是什么？" class="headerlink" title="js是什么？"></a>js是什么？</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/344.png" alt="344"></p><p>1-js可以判断表单验证，如设置密码必须一定的长度，从前是把数据传到服务器判断有没有达到相应长度要求，但是js可以在用户浏览器端就进行判断，减少了服务器的压力</p><p>2-node.js还可以进行后台服务端的编程。</p><p>3-js是运行在浏览器的编程语言。（解释型语言）</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/345.png" alt="345"></p><p>1-ECMA是一个组织，规定了js的基础语法</p><p>2-查询js的使用去mdn即可，不要再去什么菜鸟教程等平台。</p><h3 id="js书写位置"><a href="#js书写位置" class="headerlink" title="js书写位置"></a>js书写位置</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/346.png" alt="346"></p><p>1-内联式就是写在标签内部属性位置的</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/349.png" alt="349"></p><p>一般js不写内联的，但是后续的vue框架很多这种写法。</p><p>2-<strong>内部</strong>即写在html页面里的，一般写在body的上面</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/347.png" alt="347"></p><p>为什么内部js一般写在body上面，即所有的标签下面，因为js是用来操作html和css的，代码从上往下运行，必须先加载了html和css，js再直接对它们进行操作，这样运行的效率最高。</p><p>3-外部js，位置和内部js一样，不同的是它的代码用script标签加上路径引入即可，不在此页面内。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/348.png" alt="348"></p><p>注意，外部js引入路径后，script标签中间不要再写js代码，虽然不会报错，但是写了不会运行。</p><h3 id="js的注释"><a href="#js的注释" class="headerlink" title="js的注释"></a>js的注释</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/350.png" alt="350"></p><h3 id="js的结束符"><a href="#js的结束符" class="headerlink" title="js的结束符"></a>js的结束符</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/351.png" alt="351"></p><p>js结束符，换行符就等于分号；换行，所以当每一句js语句都换行了，就可以不写；</p><p>但是如果两个js语句写在一行，就必须加；否则会报错</p><p>那到底我们写不写呢，现在大部分人不写，我们听自己的项目经理的，一个项目要么都写，要么都不写。</p><h3 id="输出输入语法"><a href="#输出输入语法" class="headerlink" title="输出输入语法"></a>输出输入语法</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/352.png" alt="352"></p><p>注意doucument.write()是像body输出内容，输出的内容有标签也会呗解析成网页元素，如下图的p标签，而且还能书写css，只是没有代码提示，这也是webwpi中dom的作用。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/353.png" alt="353"></p><p><strong>输入语句</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/354.png" alt="354"></p><p>注意promt输入的所有东西，包括数字，都会被认为是字符串。</p><h3 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/355.png" alt="355"></p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="变量是什么"><a href="#变量是什么" class="headerlink" title="变量是什么"></a>变量是什么</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/356.png" alt="356"></p><p>变量是一个容器，用来存储数据的。</p><h3 id="变量的使用"><a href="#变量的使用" class="headerlink" title="变量的使用"></a>变量的使用</h3><p><strong>变量的名称也叫做标识符</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/357.png" alt="357"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/358.png" alt="358"></p><p>变量是一个存储数据的容器，变量名也是标识符的一种，上图的18是数据，也叫做数字字面量。</p><p>标识符和关键字完全不同，如if，let，var，const，function是关键字，不是标识符，标识符是为变量，函数，语句块命名用的。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/362.png" alt="362"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/359.png" alt="359"></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">其中<span class="token keyword">let</span> age是声明了一个age变量<span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">18</span> 是初始化变量<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>let和var不同，let不能重复声明变量，会报错。</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/360.png" alt="360"></p><p>使用let的话，一个变量不能多次声明，但是一次可以声明多个变量，用逗号隔开。</p><p>同时控制台打印一次也可以打印多个变量，用逗号隔开。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/361.png" alt="361"></p><h3 id="变量的本质"><a href="#变量的本质" class="headerlink" title="变量的本质"></a>变量的本质</h3><p>前面说到变量是储存数据的一个容器，那它的本质是什么呢？</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/363.png" alt="363"></p><p>它是从内存中开辟了一片空间。</p><h3 id="变量的命名规范"><a href="#变量的命名规范" class="headerlink" title="变量的命名规范"></a>变量的命名规范</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/364.png" alt="364"></p><p>注意：</p><p>1-不能数字打头</p><p>2-除了字母，下划线，数字，还有一个美元dollor符号$</p><p>3-<strong>js变量是严格区分大小写的</strong></p><p>4-尽量每个变量名称都有意义，遵循小驼峰原则，第一个单词字母小写，后面单词字母大写。</p><h2 id="var和let的区别"><a href="#var和let的区别" class="headerlink" title="var和let的区别"></a>var和let的区别</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/365.png" alt="365"></p><p>1-首先var可以先使用，再声明，为什么能这样，因为它有变量提升，自动把声明提升到使用前，这是不合理的，会浪费一些资源。</p><p>2-var可以重复定义变量，如var num = 1与var num = 2 它们直接就是定义了两个相同名称的变量，而不是变量值间的覆盖，在底层逻辑上必然会出现一些问题导致一些漏洞等。</p><h2 id="数组的基本使用"><a href="#数组的基本使用" class="headerlink" title="数组的基本使用"></a>数组的基本使用</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/366.png" alt="366"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/367.png" alt="367"></p><p>注意，数组里面的值用逗号隔开，打印只写数组名就打印数组的全部数据，如果加了下标就打印指定的那个值。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/368.png" alt="368"></p><p>我们可以使用 数组名.length来确定此数组里面有几个元素。</p><p><strong>数组的字面量就是中括号[]</strong></p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/369.png" alt="369"></p><p>为什么分数据类型可以提高效率？因为不同的类型分配不同的内存空间，可以充分利用内存，这里与计算机操作系统有关。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/370.png" alt="370"></p><p>数据类型分为基本数据类型和引用数据类型（数组，对象，函数）</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/371.png" alt="371"></p><p>js，浏览器不知道它到底是什么类型，只有赋值后才能确定，所以不需要int，str来规定数据类型，</p><p>而java和c语言中，必须使用int或者float等规定数据类型，因为js是解释型语言，c和java是编译型语言。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/372.png" alt="372"></p><p>注意</p><p>1-尽管是数字，带了引号也是字符串</p><p>2-单双引号可以相互嵌套，但是不能嵌套自己，为什么呢？因为引号它们有就近原则，自动匹配最近的符号，这样就可能导致计算机理解的意思与我们想要的效果不同。如下图</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/373.png" alt="373"></p><p>我们想输出  <em>‘我是‘pink德华’</em>  但是前面两个单引号’‘自动匹配到了  <em>我是</em> 两个字，后面的  <em>pink德华</em>没有被包含，就报错了。（没有引号的 pink德华 会被当做一个变量看，但是我们没有声明这个变量，而且没有用+连接变量，所以就报错了）</p><p>解决方法：使用引号的内单外双，或者内双外单即可。</p><p>或者提供转义字符来解决</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/374.png" alt="374"></p><p>/’这个转义字符就是‘</p><h4 id="字符串的拼接"><a href="#字符串的拼接" class="headerlink" title="字符串的拼接"></a>字符串的拼接</h4><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/375.png" alt="375"></p><p>注意：字符串加上数字，自动把数字转换成字符型。</p><p>但是除法乘法减法，会自动把字符转换为数字。(仅限内容是数字的字符串，如果是字母等与数字减乘除结果为NaN即not a number，但是类型是数值型)</p><p><strong>模板字符串</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/376.png" alt="376"></p><p>注意</p><p>1-一个反引号包含所有字符，不再需要单引号。</p><p>2-而且${变量}里面还可以进行计算</p><p>3-反引号不止是document能用，其他的输出字符的地方都能用，它是用来代替单双引号的。如alert（``）</p><p>4-而且反引号的模板字符串除了能使用${}打印变量，还可以支持打印换行，如果是单引号的document.write是不能换行的，必须使用br换行</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/377.png" alt="377"></p><p><strong>undefine</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/378.png" alt="378"></p><p><strong>null</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/379.png" alt="379"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/380.png" alt="380"></p><h3 id="数据类型的检测"><a href="#数据类型的检测" class="headerlink" title="数据类型的检测"></a>数据类型的检测</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/381.png" alt="381"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/382.png" alt="382"></p><p>null为对象，当一个对象还没有准备好，可以用null占位</p><p>undefined的类型就是undefined</p><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><h3 id="隐式转换"><a href="#隐式转换" class="headerlink" title="隐式转换"></a>隐式转换</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/383.png" alt="383"></p><p>注意+-加减作为正负号，能把数字内容的字符串转换为number型。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/384.png" alt="384"></p><h3 id="显式转换"><a href="#显式转换" class="headerlink" title="显式转换"></a>显式转换</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/385.png" alt="385"></p><p>这里注意NaN也是number型。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/386.png" alt="386"></p><p>Number和parseInt与parseFloat有什么区别？</p><p>Number只能转换数字内容的字符串，但是parse的转换，可以去除数字内容后的字母，常用于过滤尺寸单位。</p><p><strong>转换为字符型</strong></p><p>有string（）和变量.tostring（）两种方式。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/387.png" alt="387"></p><p>tosting（）中间括号里面，可以帮我们转进制，上图填2，就是把十进制的10转换为二进制，控制台打印出结果。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5&amp;CSS3_移动端day07</title>
      <link href="archives/b5836dfa.html"/>
      <url>archives/b5836dfa.html</url>
      
        <content type="html"><![CDATA[<h2 id="响应式网页"><a href="#响应式网页" class="headerlink" title="响应式网页"></a>响应式网页</h2><p>响应式网页就是对应设备宽度的变化，页面样式发生改变，使得页面更美观友好。</p><p>一般网页在设备上宽度是不留白的，沾满浏览器宽度或者手机宽度的，所以要根据宽度的改变适配，高可以上下滑，没有固定的大小，不用根据高来响应适配。</p><h2 id="媒体查询"><a href="#媒体查询" class="headerlink" title="媒体查询"></a>媒体查询</h2><p>响应式网页开发，需要用到媒体查询来判断条件修改css，如当宽度大于或小于多大尺寸，进行css样式的改变。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/307.png" alt="307"></p><p><strong>注意min-height要从小到大写，max-height要从大到小写</strong>，原理就是css有层叠性，如果不按照顺序写，效果会被层叠失效。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/308.png" alt="308"></p><h3 id="媒体查询的完整写法"><a href="#媒体查询的完整写法" class="headerlink" title="媒体查询的完整写法"></a>媒体查询的完整写法</h3><p>完整写法基本上不使用，因为都用不到，</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/309.png" alt="309"></p><p>关键词有and，only和not。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/310.png" alt="310"></p><p>如这个，我们百分之九十九就是在屏幕上显示网页，其他媒体类型根本用不到。</p><h4 id="媒体特征"><a href="#媒体特征" class="headerlink" title="媒体特征"></a>媒体特征</h4><p>width/height等于多少，才生效css，一般不使用，较多的是某个范围生效，而不是某个值。</p><p>max/min-height也不使用，因为用户通常是调节宽度，而且网页高度可以向下滑动，一般不需要响应式</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/311.png" alt="311"></p><h3 id="link引入媒体查询生效的css"><a href="#link引入媒体查询生效的css" class="headerlink" title="link引入媒体查询生效的css"></a>link引入媒体查询生效的css</h3><p>原先media(){}都是写在style标签内，其实也可以通过link引入css，media变成了link的一个属性值</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/312.png" alt="312"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/313.png" alt="313"></p><h3 id="响应式网页隐藏"><a href="#响应式网页隐藏" class="headerlink" title="响应式网页隐藏"></a>响应式网页隐藏</h3><p>一般一些电商网站，在用户拉小浏览器宽度时，会隐藏一些控件，这个效果，判断视口宽度然后css样式书写display:hidden即可。</p><p><strong>全屏如下</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/314.png" alt="314"></p><p>但是缩小宽度后，会隐藏上面的一部分广告</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/315.png" alt="315"></p><h2 id="bootstrap"><a href="#bootstrap" class="headerlink" title="bootstrap"></a>bootstrap</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html">中文官网www.bootcss.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>bootstrap是一个前端UI框架，可以让你快速实现响应式网页的开发，因为它内置了许多的css样式和html与js，你只需要去官网下载它的开发包，使用的页面引入bootstrap.min.css即可通过类名使用它的css。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/316.png" alt="316"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/317.png" alt="317"></p><p>1-用于生产环境的bootstrap就是开发者用的，里面的代码全部压缩了，可以运行的更快。我们如果只开发使用它的类名实现功能，就下载这个即可</p><p>2-源码就是bootstrap里面所有的css，js，html代码，如果我们要学习它的原理，就下载它。（bootstrap大部分代码由less写的）</p><p>3-sass和less基本上一致，是一种css预编译工具，方便写css代码。</p><h3 id="bootstrap的使用"><a href="#bootstrap的使用" class="headerlink" title="bootstrap的使用"></a>bootstrap的使用</h3><p>我们目前（2022年）基本上使用bootstrap3，不使用最新的bootstrap4</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/318.png" alt="318"></p><p>这里必须引入bootstrap.css或者bootstrap.min.css，它们两个效果内容一样，只是min是压缩版，很凌乱，我们看不明白，但是体积更小，引入它的话用户运行更快。</p><h4 id="栅格系统"><a href="#栅格系统" class="headerlink" title="栅格系统"></a>栅格系统</h4><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/319.png" alt="319"></p><p>由上图可以看到，不同宽度，网页中的四个项目，有不同的排序，这就是栅格，可以通过bootstrap的类名实现。</p><p><strong>bootstrap把网页分为12等份</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/320.png" alt="320"></p><blockquote><p>关键数字768px，992px，1200px</p><p>xs特别额外的小（extrasmall），sm（small），md（middle），lg（large）</p><p>col-lg-3就表示一个div在大屏幕中按照一行四个排列，因为一共12份，每个占3份</p></blockquote><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/321.png" alt="321"></p><p>一个标签可以写多个bootstrap提供的类名，对应不同的视口宽度，进行响应式网页开发。</p><p>为啥我4个div，我也没写浮动或者flex咋能随便几行排？</p><p>因为这里用了bootstrap框架的类名呀，框架类名里面就设置了对应的css实现效果，这里使用的原理是float浮动，目的是为了兼容更多版本，因为flex在一些低版本浏览器无法被渲染。</p><p><strong>col-md-6</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/322.png" alt="322"></p><p><strong>col-md-3</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/323.png" alt="323"></p><h4 id="container-fluid与row类的使用"><a href="#container-fluid与row类的使用" class="headerlink" title="container-fluid与row类的使用"></a>container-fluid与row类的使用</h4><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/324.png" alt="324"></p><p>.container-fluid与我们平常写一个div不设置宽度一样是全宽显示，但是它有内边距</p><p>.row是左右-15的margin</p><p>.col是上下-15的margin</p><p><strong>.col和.row类就是为了我们container版心不需要内边距时使用的，让container默认的15px的padding与row的-15px的margin相互抵消。</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/325.png" alt="325"></p><h4 id="学习bootstrap的重点"><a href="#学习bootstrap的重点" class="headerlink" title="学习bootstrap的重点"></a>学习bootstrap的重点</h4><p>注意：一定要引入bootstrap-3.4.1-dist/css/bootstrap.min.css，不要引入那个theme.min.css否则无效。</p><p>bootstrap的内容我们是记不完的，我们主要学习，如何查找使用与调用。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/326.png" alt="326"></p><p>如找css样式，就打开bootstrap3中文文档，选中全局css样式即可</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/327.png" alt="327"></p><p><strong>按钮</strong></p><p>相应的类名必须给相应的标签使用才有效果</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/328.png" alt="328"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">相应的类名必须给相应的标签使用才有效果，而且类名和标签一般前缀一致如：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-striped table-bordered table-hover<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>,table标签里面的类名一般table开头<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/329.png" alt="329"></p><p><strong>图标</strong></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/330.png" alt="330"></p><p>图标引入和iconfont一样的方法，先写一个glyph类， 后面再加上你想要的图标类。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/331.png" alt="331"></p><h3 id="JavaScript插件"><a href="#JavaScript插件" class="headerlink" title="JavaScript插件"></a>JavaScript插件</h3><p>要引入两个js文件，分别是jQuery.js和bootstrap.min.js，因为bootstrap.min.js要用到jQuery所以必须先引入jQuery。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/332.png" alt="332"></p><p>注意：除了引入两个js，原先的bootsrap.min.css也要引入。</p><h2 id="项目Alloyteam"><a href="#项目Alloyteam" class="headerlink" title="项目Alloyteam"></a>项目Alloyteam</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/333.png" alt="333"></p><p><strong>步骤</strong></p><blockquote><p>注意：有时候我打开两个类似的项目，我自己跟着写，但是样式就是不生效，逻辑没有任何错误，后面关闭vscode，单独打开一个，就能生效，不知道是bug还是有冲突。</p></blockquote><p>1-把轮播图先放上去（因为后续的header需要放到轮播图区域的里面）</p><p>1.1引入相应的css和js，再复制bootstrap里面的js轮播图代码，修改图片路径为自己想要的图片</p><p>1.2根据自己需要设置media媒体查询，其中图片宽高需要跟着父级走，一般默认base.css就设置了图片的宽为100%，所以我们还需要设置图片的高，然后根据不同屏幕宽度，设置图片父级的大小即可。</p><p>为什么调节图片大小要跟着父级走，然后调节父级大小？</p><p>因为父级内还有其他小标签，也是根据父级等比缩放的，如果media后只改变图片大小，这些小控件不变，就不能达到效果。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/334.png" alt="334"></p><blockquote><p><em>但是一系列权重问题会让我很难选中这个img，有什么简单方法呢？在它的样式后面加！important即可。</em></p></blockquote><p>2-从bootstrap选一个头部导航栏，把代码复制过来，然后根据需求，增加或删除一些代码，从而达到我们想要的样式。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/335.png" alt="335"></p><p>我们选用这一个组件，看似和我们需要的效果完全没有关系，其实只需要删除input搜索框和下拉框等等，然后自己修改相应图标样式即可。</p><p>2.1我们在f12控制台中选中不需要的控件，记住它的标签与类名，在编辑器中删除即可</p><p>2.2注意删除的时候，最好整个标签折叠删除，防止一些错误的产生。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/336.png" alt="336"></p><p>2.3达到如上这个效果后，很明显header区域需要固定定位，而且需要去除背景色，再加上版心居中</p><p>这个固定定位我们可以自己书写，也可以用bootstrap为这个导航栏提供的类名；背景色我们需要f12从外到内一个一个检查这个颜色写在谁上面，然后自己书写less覆盖掉它；版心居中去除container-fluid中的fluid即可。</p><p>2.4在需要达到的样式中，是如下的在992px视口以下就折叠header，但是在我们bootstrap中是768px才折叠，怎么办呢？</p><p>这个时候需要用到bootstrap的定制功能</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/338.png" alt="338"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/337.png" alt="337"></p><blockquote><p>查看这个导航条的文档，可以看到改变视口的类名是什么，我们复制类名到定制页面ctrl+f搜索即可，然后将数据修改成为我们想要的，然后编程出一个新的bootstrap框架代码，重新引入到我们的项目中即可。</p></blockquote><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/339.png" alt="339"></p><p>可以看到搜索后，这里的数据是sm，自然就是对应768px，我们改成md对应992px即可</p><p><strong>问题</strong></p><p>这里为什么不直接在我们的css代码中修改@grid-float-breakpoint？偏偏要去编译重新引入一个新框架，这么麻烦？因为这个@grid-float-breakpoint我们根本就搜不到，它里面有很多逻辑，不是我们修改一个东西就能完成的。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/340.png" alt="340"></p><p>我们知道在col-xs-4等这些类名中，实际生效的宽度css，给的是每个div给25%的宽度，我们怎么实现每个div之间有间隙呢?给它们加margin吗？明显不行因为宽度会超出，就会自动换行。怎么办？</p><p>我们可以在div里面加内容，如上图中的a标签，a标签在div内自带了15px的padding，可以用这个来代替那部分间隙空白。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>bootstrap有很多功能，如清除浮动和响应式工具等等等等，我们重在实践，多去使用，不断去了解它们的使用方法，搞懂使用了解它的大部分功能后，再去研究它的源码，一般先引入它的样式，再根据自己的需求修改。</p><blockquote><p>注意：</p><p>1-当前alloyteam项目基本上所有样式控件都是响应式，但这在内容较多的电商站如京东淘宝是做不到的，它们的响应式基本上就是视口最大宽度变小时，display:hidden一些不重要的内容。</p><p>2-适合全响应式的网页一般是一些内容极少简洁的个人站点，响应式的动画等可以让页面没有那么中空。</p><p>3-所以那种大的企业站，不同视口有两个不同网站，电脑端一个，手机端一个，如jd.com和m.jd.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3移动端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5&amp;CSS3_移动端day06</title>
      <link href="archives/c2845d6c.html"/>
      <url>archives/c2845d6c.html</url>
      
        <content type="html"><![CDATA[<h2 id="vh和vw的使用"><a href="#vh和vw的使用" class="headerlink" title="vh和vw的使用"></a>vh和vw的使用</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/299.png" alt="299"></p><p>vh/vw和rem一样也是一种尺寸单位，而且现在大厂基本上在使用，小企业还没有普及。</p><p>rem即根字体自己media设置，或引入flexible.js后默认是视口的十分之一，vh/vw不用引入设置任何东西，默认为视口的百分之一</p><p><strong>计算方法</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/300.png" alt="300"></p><p><strong>同一个元素，设置大小，vw和vh能混用吗？</strong></p><p>不可以，因为虽然大部分手机的宽高比是相同的，但是如果一个手机与其他设备宽高比不同，如全面屏手机，则在这个手里里的控件显示大小就和设备的不一样。</p><p>如一个设计稿设备是375x667，一个是200x1000，一个控件是37.5x66.7，那么我们计算出来就是10vh和10vw，但是这样到另一个设备就是20x100，明显控件变形了。</p><h2 id="bili移动端静态页面（使用vh-vw）"><a href="#bili移动端静态页面（使用vh-vw）" class="headerlink" title="bili移动端静态页面（使用vh/vw）"></a>bili移动端静态页面（使用vh/vw）</h2><h3 id="如何拿素材"><a href="#如何拿素材" class="headerlink" title="如何拿素材"></a>如何拿素材</h3><p>f12控制台解决一切，如小图标在iconfont找不到一样的，选中查看类名，再进入s控制台tyle中此图标生效的css，复制即可。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/301.png" alt="301"></p><p>open in new tab，复制压缩好的css，在我们需要这个图标时，引入此css，再赋予同样的类名即可。</p><p>其中还有一些iconfont.woff/ttf/eot都是字体，可以不用下载保存。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/302.png" alt="302"></p><p>尺寸和margin，padding在computed看盒子模型即可。</p><p><em><strong>注意</strong></em></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/303.png" alt="303"></p><p>1-less文件中。import没有冒号，但是声明变量有冒号</p><p>2-justify-content属性值，如space-between/around等，需要父级有宽度，否则无法计算，自然无法给出间距。</p><p><em>3-有时上下的一些间距，不需要用padding，marging，用align-items:center，或者设置一下行高就行了。</em></p><p>4-最外的div，也就是页面的总大小，不需要设置高度，或者设置min-height（最少多少，没达到就留白）内容设置高度往下堆积即可，超出屏幕大小，用户可以滑动下去观看，宽度设置为100%和100vw都可以，也可以不设置，根据情况而定（如果需要用到子内容定位就得设置宽度）</p><p>5-flex默认不换行，可以设置换行，但是有时候，就是要不换行，比如一行超出范围显示省略号，就需要给不换行，但是得给内容的父盒子设置一个宽度，就不会挤压，而是显示省略号，否则就会超出盒子范围，不显示省略号。</p><p>6-vh和vw混用，对响应适配也有影响，因为当用户把宽拖小，高又不变，自然盒子变形。</p><h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><p>我们把这个页面，从上到下，从内到外，先分为三大部分，头部固定，内容，和按钮固定</p><h3 id="头部固定"><a href="#头部固定" class="headerlink" title="头部固定"></a>头部固定</h3><p><strong>tips</strong></p><p>1-行内块display:inline-block标签换行有间距</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">参考：https://blog.csdn.net/haodian666/article/details/121021889<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>步骤</strong></p><p>1-头部我们再细分为上部分和下部分，如下图</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/304.png" alt="304"></p><p>2-上部分再分为左右，左边的bili图标用a标签嵌套i实现，右边的放大镜也使用iconfont，登入与下载app引入图片即可，最后设置大小和样式（注意这里a标签无法直接设置大小，可以使用dispaly转行内块，但是这样标签间会有空隙，所以可以让right变为flex布局，flex后没有行内与块的区分，a也能设置大小）</p><p>3-因为权重问题，iconfont调节大小，需要用.iconfont的类选择器，不能给父级样式来继承。</p><p>4-菜单栏使用ul&gt;li&gt;a的结构即可</p><h3 id="内容区域"><a href="#内容区域" class="headerlink" title="内容区域"></a>内容区域</h3><p>1-注意这个是tab栏，菜单个数和内容个数一定要相同，至于怎么换内容，在webapi会学到</p><p>2-我们直接加内容，会发现内容直接在页面最上面，为什么呢，因为头部是fixed固定定位，脱标了，然而我们现在写的是标准流，所以需要给主页加一个padding，把我们要写的内容区域挤下来。</p><p>3-内容即图片文字调节样式位置即可，注意这里用到了省略号ellipsis的类，还有多个图片，需要用到flex-wrap:no-wrap去除flex的不换行，否则会全部挤压到一行。</p><h3 id="fotter区域"><a href="#fotter区域" class="headerlink" title="fotter区域"></a>fotter区域</h3><p>加一个图标，固定定位即可。</p><p><strong>完成项目后发现问题</strong></p><p>滑动内容区域，header固定定位消失了？是fixed不生效吗？</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/306.png" alt="306"></p><p>​    其实固定定位还在，但是内容滑上去和header混到了一起，解决方法是给header加一个z-index:1，再加一个白色背景即可，让它时刻在最上层。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3移动端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5&amp;CSS3_移动端day05</title>
      <link href="archives/5b8d0cd6.html"/>
      <url>archives/5b8d0cd6.html</url>
      
        <content type="html"><![CDATA[<h2 id="移动适配"><a href="#移动适配" class="headerlink" title="移动适配"></a>移动适配</h2><p>白话：当不同手机不同设备，屏幕大小不同时，我们前端中的元素，如图片文字等，也要发生宽高大小变化来适应不同的屏幕。<img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/264.png" alt="264"></p><p>rem单位适配是目前大多数企业使用的，但在新技术探索中，天猫bili等大厂都开始使用vm/vh来进行移动适配。</p><p><strong>今天的任务：</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/265.png" alt="265"></p><p>项目</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/266.png" alt="266"></p><p>rem是一种尺寸大小位，和px类似，less是一种辅助书写css的语言工具。<img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/267.png" alt="267">单</p><p>以前有一点没有注意，百分比布局，width可以使用，但是高度设置百分比是无效的。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/268.png" alt="268"></p><p>这里设置了高为80%，但实际上只有div盒子内文字a撑开的高度。</p><p>为什么会这样？</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/268.png" alt="268"></p><p>因为如果父级不设置宽度，你子元素宽度设置为100%，会默认父级宽度为当前窗口大小为最大100%宽度</p><p>但是高度不同，高度没有这个默认值，所以设置百分比高度会失效，解决办法就是给当前需要设置百分比高度的子元素的父集添加高度（这里div即给body设置高度，但如果你body也给百分比高度，body又要去找父级，则html也要设置一个百分比高度，html的父级高度是固定的，就是当前视口高度）</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">参考链接https://blog.csdn.net/weixin_42246997/article/details/90748136宽度计算方法Web浏览器在计算有效宽度时会考虑浏览器窗口的打开宽度。如果你不给宽度设定任何缺省值，那浏览器会自动将页面内容平铺填满整个横向宽度。即我们不设置宽，会自动填满整个横向宽度，如下：高度的计算方式和宽度完全不一样。事实上，浏览器根本就不计算内容的高度，除非内容超出了视窗范围(导致滚动条出现)。或者你给整个页面设置一个绝对高度。否则，浏览器就会简单的让内容往下堆砌，页面的高度根本就无需考虑。因为页面并没有缺省的高度值，所以，当你让一个元素的高度设定为百分比高度时，无法根据获取父元素的高度，也就无法计算自己的高度。即父元素的高度只是一个缺省值：height: auto;我们设置height：100%时，是要求浏览器根据这样一个缺省值来计算百分比高度时，只能得到undefined的结果。也就是一个null值，浏览器不会对这个值有任何的反应。各个浏览器对于宽高的解析也不相同，大家可以自己搜索一下。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>那么1rem究竟是多大呢？</strong></p><p>tips：网页的根就是html标签</p><p>1rem的大小等于1个根字号，即1个html字号的大小</p><p>默认情况下1个根字号为16px，也可以直接设置html标签的css，通过font-size来设置</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/271.png" alt="271"></p><p>当我们想通过rem做到移动适配，即不同设备，字体图片等大小进行相应变化，就要在不同的设备上设置不同的html的根字号大小，我们可以<strong>通过媒体查询进行css的设置</strong>。<img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/272.png" alt="272"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/273.png" alt="273"></p><p>这里的width是设备总宽度大小。</p><p>我们一般设置html根字号，为屏幕大小的十分之一，方便计算。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/274.png" alt="274"></p><p>在工作中，设计稿的尺寸单位是px，我们如何转化为rem呢？</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/275.png" alt="275"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/276.png" alt="276"></p><p>一般计算后取三位小数。</p><p>难道市面上每出一个设备，我们又要通过media媒体查询再加一份代码吗？这样维护的成本是不是太大了？所以有下面的flexible.js来帮我们获取不同用户设备大小，再自动设置html根字号的大小。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/277.png" alt="277"></p><h2 id="less书写"><a href="#less书写" class="headerlink" title="less书写"></a>less书写</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/278.png" alt="278"></p><p>less是让css更加简单书写的一个工具，less能快速编译生成css代码，除了在移动视频转换px与rem中，能直接支持计算写法，还有很多其他用途。</p><p>less内大部分写法还是css，只是一些小写法更加灵活。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/279.png" alt="279"></p><p>如上书写的less，保存后同级目录会自动生成一个同名但后缀不同的css文件（<strong>没有自动生成的，在vscode内下载easyless插件</strong>）</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/280.png" alt="280"></p><p>1-less里面书写除法，在css里自动计算出来了</p><p>2-在less的father内书写son，在css中自动变成了.father .son</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/281.png" alt="281"></p><p>注意，网页照样要引入less生成的css文件，用户使用中，浏览器是不识别less的。</p><h3 id="less的注释"><a href="#less的注释" class="headerlink" title="less的注释"></a>less的注释</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/282.png" alt="282"></p><p>less的注释和js的注释相同，多行注释和css的注释也相同，注意的是css中没有//写法的注释</p><h3 id="less的计算功能"><a href="#less的计算功能" class="headerlink" title="less的计算功能"></a>less的计算功能</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/283.png" alt="283"></p><p>正常的+ - *加减乘可以直接书写，但是除法运算，必须写在小括号内，或者/前加一个符号“.”否则无法计算（./的写法虽然vscode报错，但是是能用的，一般用小括号居多）</p><p>除法的书写方式是less4.0的版本规定的，一些老程序员也许不知道这个写法，至于为什么这么写，应该是为了底层运行什么的更流畅，就像变量不能数字开头一样，我们也不需要知道，记住就好。</p><h3 id="less的嵌套"><a href="#less的嵌套" class="headerlink" title="less的嵌套"></a>less的嵌套</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/284.png" alt="284"></p><p>在书写css中，如上图，我们只写h4则所有的h4都会生成样式，很显然我们不需要这样的效果，所以我们用交集选择器进行了限定范围，但是这样的话，很大程度可能写错字母等导致错误，less嵌套可以避免这种错误。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/285.png" alt="285"></p><p>注意&amp;表示当前选择器，一般配合hover使用，&amp;在哪个选择器里面，就代表哪个选择器，如下图</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/286.png" alt="286"></p><h3 id="less变量"><a href="#less变量" class="headerlink" title="less变量"></a>less变量</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/287.png" alt="287"></p><p>使用@+名称定义，如视频中定义后@colora可以代替green</p><p>这样是不是更麻烦了？还多了一行定义有必要吗？感觉毫无作用，其实不然</p><p>它的作用是，以后只需要修改定义这一行代码，就可以修改使用过的所有颜色。</p><p><strong>注意这个@定义是less的语法，在css中不可以这样写的</strong></p><h3 id="less导入"><a href="#less导入" class="headerlink" title="less导入"></a>less导入</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/288.png" alt="288"></p><p>导入的是less文件，后缀.less可以省略</p><p><strong>导入的作用：</strong>使用less后，因为浏览器只能识别css文件，所以我们必须引入less编译生成后的css文件，当有上图三个less后，我们就需要引入三个由less生成的css，未免太麻烦，于是我们就可以在index.less中引入另外两个less文件（这样index.less生成的index.css文件包含了base.css和common.css的文件），这样只需要引入index.css也就包含了base.css和common.css</p><h3 id="less导出"><a href="#less导出" class="headerlink" title="less导出"></a>less导出</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/289.png" alt="289"></p><p>在默认情况下，less自动生成的css，是在同级目录下，但是在我们做项目的时候，一般是上图的目录结构，如何让less生成的css保存到我们指定的路径呢？</p><p><strong>方法</strong></p><p>1-配置easyless插件，让所有的less有相同的保存路径</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/290.png" alt="290"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/291.png" alt="291"></p><p>找到less.compile,在out中输入相对路径文件夹即可，注意如上图导出到css文件夹（有这个文件夹就直接用，没有会自动创建），css后面必须加斜杠/，加了/代表css文件夹，不加代表一个css文件。</p><p>我本人的vscode配置里面没有默认的less.compile，没有的话，自己把代码加上去就行了。</p><p>compile编写，编译的意思。</p><p><strong>问题：</strong>当我不想导出生成css到默认当前路径，也不想导出到配置文件out中统一设置的路径，就想把一个单独的less文件生成的css文件导出到一个自定义的文件夹，怎么办呢？</p><p><strong>方法：</strong>我们可以在当前less文件中，如下图书写，在//后写一个out导出路径</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/292.png" alt="292"></p><p>其中还可以自定义设置导出生成的css的名字（不设置的话，就是原less文件的名字）</p><p><strong>注意，这个导出配置一定要写在第一行</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/293.png" alt="293"></p><h3 id="禁止less导出css"><a href="#禁止less导出css" class="headerlink" title="禁止less导出css"></a>禁止less导出css</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/294.png" alt="294"></p><p><strong>问题</strong></p><p>我写less，就是为了生成css，less比css多出了计算逻辑等功能，你不导出，不是白写了吗？</p><p><strong>解答</strong></p><p>如上图的base.less和common.less，我们在index.less中用@import’xxx’;引入了，所以在index.css中就包含了base和common.css，自然无需再导出一份。</p><h2 id="游乐园项目"><a href="#游乐园项目" class="headerlink" title="游乐园项目"></a>游乐园项目</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/295.png" alt="295"></p><p>拿到项目先做好准备工作，如下图代码</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/296.png" alt="296"></p><p><strong>步骤：</strong></p><p>1-引入图标和iconfont的css与index.css，base/comonm等css已经通过在index.less导入base/common.less，文件生成到index.css</p><p>2-布局整体内容，分为主体部分，和底部工具栏，后面再把主体部分细分小部分div，遵循从上到下，从内到外。（最好用数字，如图的1，2等占位，确保布局生效）</p><p>3-因为要移动适配，所以引入flexible.js，用rem做尺寸单位（注意在less中除法要写小括号）</p><p>4-把底部固定定位好，注意写宽度，否则fixed定位后脱标，会失去宽高，只有内容的宽高。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/297.png" alt="297"></p><p>​    其中可以设置一个变量，这样每次就不需要写37.5这个根尺寸（根据设计稿的宽尺寸除以10得出），有人说rouutSize比37.5rem更麻烦，其实我们写一个@ 后面的变量会自己出来，不用自己写完</p><p>​    而且网站改版的话，就不需要一个一个改</p><p><strong>小细节</strong></p><p><em>1-交集选择器，避免代码冗余</em></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/298.png" alt="298"></p><p>当我们把活动状态从激活变成过期的时候，直接写一个交集选择器即可，这样过期状态能共用激活状态的样式，只是背景颜色由上面项目图的蓝色变成灰色，减少了代码冗余，可以让用户加载的更快。</p><p><em>2-本项目中txt活动文字区域中不写高度</em></p><p>如果我们需要定位小图标上去，就需要用到子绝父相，就需要设定高度，否则不同设备中，定位的位置会发生变化。</p><p>但是txt中的图标，不需要定位，直接用i引入就好，所以txt的大盒子无需给予大小高度限制，往内下方写多少子内容，txt盒子高度就自动加多少。</p><p><strong>问题</strong></p><p>1-为什么主体内容要加一个padding？ </p><p>​    因为页面最下面有一个固定定位的footer，不能让他遮挡住主体的内容。</p><p>2-我修改了文字的font-size，为什么i标签中的iconfont图标大小不变？</p><p>​    因为iconfont的图标自己有一个默认的font-size，继承下来的权重很低，无法改变它，应该选中i标签修改即可。</p><p>3-有多个活动，是不是我要复制多段代码，然后自己更改内容？</p><p>​    不需要，我们只需要写一个活动的模板，js等会自动根据数据，输入不同个数的内容，不需要我们来复制。</p><p>所以不同活动中，那些相同的margin，pading等公共样式，也不需要写单独的公共样式类，因为我们写一个活动模板就可以了，页面中我其他活动是模板生成的。</p><p>4-多种方法实现样式，用哪一个？</p><p>​    比如两个元素间有间隔，可以用margin也可以用justify-content：space-between，用哪一个呢？哪个你最方便，哪个代码最少，用哪个。</p><p><strong>tips</strong></p><p>1-虽然有时图片丢进去，恰巧尺寸一样，能移动适配，但是还是必须得给图片一个移动适配的尺寸，方便以后在上面子绝父相，添加一些小图标等，如此项目banner图片的换页圆圈，与活动图片上的爱心收藏图标。</p><p>2-移动页面和网页没有大的布局区别，只是多了个rem或者vw/vh的单位。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3移动端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页面注入（仅供学习交流）</title>
      <link href="archives/f16557d1.html"/>
      <url>archives/f16557d1.html</url>
      
        <content type="html"><![CDATA[<p><strong>前言</strong></p><p>1-本站内容均来自网络，且不提供工具下载，如有相关内容侵害了您的权益，请联系站长删除</p><p>2-方法大部分人都会，也是一个非常简单的注入，这里只做了方法集成，有问题欢迎各位大佬指正</p><p>3-此方法仅供学习交流，本站也没有任何盈利，切勿用于任何违规用途。</p><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>抓到请假页面的返回包，进行静态注入修改时间地点即可</p><p>缺点：操作繁杂，数据改错一个标点，前后端数据格式对不上等问题导致无显示，</p><p>而且canary不能关闭，必须一直打开canary，否则退出再进页面又重置到原页面了。</p><p>此方法参考</p><p><a href="https://zhoudongqi.com/archives/d62e487b.html" target=_blank>修改返回包</a></p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>直接通过参考原页面与相关资源代码，做一个页面出来</p><p>缺点：太麻烦，难做，功能也不可能一模一样，只能通过静态模拟一个，容易弄巧成拙。</p><h2 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html">视频因为不可抗力因素已经删了，可以参考https://www.zhoudongqi.com/archives/d62e487b.html原理一样的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>演示视频：</strong></p><p><video src="https://www.zhoudongqi.com/heima/yanshi.mp4" width="300px" height="500px" controls="controls"></video></p><p><strong>教程视频：</strong></p><p><video src="https://www.zhoudongqi.com/heima/jiaochen.mp4" width="300px" height="500px" controls="controls"></video></p><p>优点：操作简单，注入成功后，只要不关闭被修改注入的软件后台，不需要再开启canary。</p><p>原理：此app不全是原生安卓，主页其实就是一个网页，找到这个网址注入返回包，简单重定向到修改过后的页面。</p><p>此注入方法是我感觉最简单的一种之一，其他操作可能会因为app在Android11上的新协议（不信任本地的代理证书），以及各种小插曲导致抓不到包，什么root框架绕过这里不讨论。</p><p>今日校园同理，原理是一样的，改的东西不同罢了。</p><p><strong>所需工具：</strong></p><p>httpcanary <a href="http://m.2265.com/down/244552.html" target=_blank>点我查看</a></p><p><strong>步骤：</strong></p><p>1-打开httpcanary（第一次打开会提示安装证书用于抓https协议的包，这里用不到，安装了也只是不提示网页证书不受信任，没有实际用处徒增麻烦，所以没必要安装，直接跳过）</p><p>2-按照视频中，添加需要抓取的app与域名</p><p>3-点击右下角图标，开启抓包，进入被抓包app后，数据可能无法正常加载，我们按照视频点击右下角canary的悬浮窗，先关闭抓包，就会正常显示页面（这时是原页面），我们再一直刷新即可，直到抓到包，就出现了我们想要的页面（提示风险页面就抓到了，这个风险是必提示的，因为我们没有安装canary的证书，这里的域名又开启了https协议）</p><p>4-在抓到的第一个包中（时间最早的在最下面），根据视频点击静态注入，修改响应包为以下简单的html代码。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">https://xxxxxxxxxxxxxx/microhome/homepage/index找到这个包即可，xxxxxxx是抓包域名，这里没写出来。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>5-如视频中再进入app，反复刷新即可。</p><p><em>Tips：步骤看起来好像很麻烦，其实很简单，按照视频中一步一步来即可，</em>不会的地方可以在评论区留言，或者私信我。</p><p><em>仅供学习交流，欢迎各大佬指正，提供更好思路进行学习~~~</em></p><p><strong>视频中的代码</strong></p><p>此页面你们无法使用，本方法仅供学习交流，不为大家提供任何页面支持。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>refresh<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0;url=https://zhoudongqi.com/happy/智慧首页.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>常见问题：</strong></p><p>1-注入页面错误</p><p>2-开启多个注入插件了，老注入不用了没有在 设置-插件管理 中关闭。否则会导致冲突</p><p>3-苹果手机无法使用，其实canary就是一个抓包app，苹果商城也有类似应用，但貌似需要收费，学习交流白嫖至上，此方法不提倡。</p><h2 id="建议修复方法"><a href="#建议修复方法" class="headerlink" title="建议修复方法"></a>建议修复方法</h2><p>1-加上防抓包检测</p><p>2-返回包数据等密文连接，使用多重身份验证等更安全的协议。</p><p>3-动态二维码，一人一码，根本上避免伪冒问题。</p><p><em><strong>本站所有页面仅供学习交流，请勿用于任何非法用途，否则后果自负。</strong></em></p><p><em><strong>本站所有页面仅供学习交流，请勿用于任何非法用途，否则后果自负。</strong></em></p><p><em><strong>本站所有页面仅供学习交流，请勿用于任何非法用途，否则后果自负。</strong></em></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 抓包 </tag>
            
            <tag> 静态注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDOS分布式拒绝服务攻击</title>
      <link href="archives/ab4c9af2.html"/>
      <url>archives/ab4c9af2.html</url>
      
        <content type="html"><![CDATA[<h2 id="本站DDOS压力测试"><a href="#本站DDOS压力测试" class="headerlink" title="本站DDOS压力测试"></a>本站DDOS压力测试</h2><p><strong>如有错误，各位大佬帮忙在评论区指正，感谢~~~</strong></p><p>5000Mbps流量直接倒地。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/ddos01.png" alt="ddos01"></p><p>可以看到腾讯的轻量级服务器，直接禁止服务了</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/ddos02.png" alt="ddos02"></p><h2 id="什么是ddos（-分布式-denial-of-service）"><a href="#什么是ddos（-分布式-denial-of-service）" class="headerlink" title="什么是ddos（ 分布式 denial of service）"></a>什么是ddos（ 分布式 denial of service）</h2><blockquote><p>CC攻击也是dos的一种，现在说的dos一般是打传输层和网络层，而cc主要是打应用层，也被称为应用层的dos攻击。</p></blockquote><p>信息安全的三要素——“保密性”、“完整性”和“可用性”中，拒绝服务攻击，针对的目标正是“可用性”。该攻击方式利用目标系统网络服务功能缺陷或者直接消耗其系统资源，使得该目标系统无法提供正常的服务。拒绝服务攻击问题一直得不到合理的解决，目前还是世界性难题，究其原因是因为这是由于网络协议本身的安全缺陷造成的，从而拒绝服务攻击也成为了攻击者的终极手法。</p><p>DDoS全称:分布式拒绝服务(DDoS:Distributed Denial of Service)。 攻击者进行拒绝服务攻击，实际上让服务器实现两种效果：一是迫使服务器的缓冲区满，不接收新的请求；二是使用IP欺骗，迫使服务器把合法用户的连接复位，影响合法用户的连接。</p><p>那么CC攻击的原理又是什么呢，我们经常听别人说，接D单、CC单，CC不也是拒绝服务攻击吗?和DDOS两者有什么区别呢?</p><p>CC攻击全称Challenge Collapsar，中文意思是挑战黑洞，因为以前的抵抗DDoS攻击的安全设备叫黑洞，顾名思义挑战黑洞就是说黑洞拿这种攻击没办法，新一代的抗DDoS设备已经改名为ADS(Anti-DDoS System)，基本上已经可以完美的抵御CC攻击了。</p><p>CC攻击的原理是通过代理服务器或者大量肉鸡模拟多个正常用户访问目标网站的动态页面，制造大量的后台数据库查询动作，消耗目标CPU资源，造成拒绝服务。CC不像DDoS可以用硬件防火墙来过滤攻击，CC攻击本身的请求就是正常的请求。我们都知道网站的页面有静态和动态之分，动态网页是需要与后台数据库进行交互的，比如一些论坛用户登录的时候需要去数据库查询你的等级、权限等等，当你留言的时候又需要查询权限、同步数据等等，这就消耗很多CPU资源，造成静态网页能打开，但是需要和数据库交互的动态网页打开慢或者无法打开的现象。这种攻击方式相对于前两种实现要相对复杂一些</p><p><strong>这里能看出来DDoS和CC的区别:</strong></p><blockquote><p><strong>1，CC攻击（流量不大，真实IP）</strong><br>通常是应用层攻击，攻击对象是网页，涉及的协议主要是HTTP，HTTPS，消耗的是服务器的CPU资源（通过请求大量调用CPU的资源，例如查询数据库）<br><strong>2，DDOS攻击（流量很大，伪造IP）</strong><br>通常是网络层和传输层，攻击对象是IP，涉及协议主要是IP，UDP和TCP，通常消耗的是网络带宽</p></blockquote><p>DDoS攻击打的是网站的服务器，而CC攻击是针对网站的页面攻击的，用术语来说就是，一个是<strong>WEB网络层和传输层</strong>拒绝服务攻击（DDoS），一个是<strong>WEB应用层</strong>拒绝服务攻击（CC），网络层就是利用肉鸡的流量去攻击目标网站的服务器，针对比较本源的东西去攻击，服务器瘫痪了，那么运行在服务器上的网站肯定也不能正常访问了。而应用层就是我们用户看得到的东西，就比如说网页，CC攻击就是针对网页来攻击的，CC攻击本身是正常请求，网站动态页面的正常请求也会和数据库进行交互的，当这种”正常请求”达到一种程度的时候，服务器就会响应不过来，从而崩溃。</p><blockquote><p>也就是说网络层传输层的ddos攻击，直接是把你服务器的网络层或者传输层的某个资源消耗殆尽（方式有很多种，什么tcp，udp放大攻击等等），全部占用，这个时候任何正常用户访问你的域名会直接根本打不开。</p><p>而针对应用层的dos攻击，也就是cc攻击，一般是伪造一个正常用户，通过大量看似正常的请求，针对性的请求登入，注册这些会请求数据库的消耗CPU性能极大的操作，把你网站应用层的关键功能打崩。这个时候正常用户访问，是可以打开网页的，但是无法注册和登入。</p></blockquote><h2 id="攻击工具"><a href="#攻击工具" class="headerlink" title="攻击工具"></a>攻击工具</h2><p>一般dos是买发包机，没有技术门槛，什么学校官网都是秒挂，但是违法可以追责（得有渠道，这里是找朋友测试，可以达到50g/s），进行网站压力。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/ddos03.png" alt="ddos03"></p><h2 id="自建dos服务器"><a href="#自建dos服务器" class="headerlink" title="自建dos服务器"></a>自建dos服务器</h2><blockquote><p>DOS攻击就是一台机子是攻击机，DDOS多了个D就是发布式，多台机子在攻击你。</p></blockquote><p>1-你的上行网速如果能达到1g每秒，就不需要自己买服务器，直接用自己电脑攻击都成。</p><p>2-如果网速达不到，两种方法，一种是拿肉鸡，这有很高的技术门槛，另一种就是买服务器。</p><p>3-我们可以选择荷兰的服务器，因为这里的服务器不管是你搞什么东西都不违法，而且上下行流量无限制，我们一般购买debian服务器，能最大性能的攻击。</p><p>4-用xshell连接你的服务器，安装相关攻击程序与需要伪装的全国各地ip地址等，输入命令攻击即可。</p><p>注意：只能攻击获得授权的站点，帮助其测压，否则是违法行为。当然你攻击违法网站，或者国外违法站点，人家也不会police，但是万一鱼死网破追究，你们都有责任。</p><h2 id="如何防止"><a href="#如何防止" class="headerlink" title="如何防止"></a>如何防止</h2><p>1-买高防服务器，它会把先所有流量清洗一遍之后，把真实的用户请求，正常的用户操作返回给我们的服务器。</p><p>2-买CDN内容分发网络，让此发布式网络的服务器资源，缓解一部分攻击流量。</p><p>3-封IP，对高频访问的异常用户，进行IP封禁</p><p>4-对高IO操作，也就是对我们服务器资源消耗巨大的用户操作，如登入注册加入验证码机制。让攻击者攻击的技术门槛上升。</p><p>攻防永无尽头，其实最终就是看你的防守能力和黑客的攻击能力谁厉害一点，谁精力金钱更多了。你封IP，技术更高的会伪造IP；你设置高IO操作的验证码，别人会打码；你CDN别人直接把CDN打挂拿到你真实主机服务器地址；你买高防，欧克的，我看你有多少钱买，能防多少天。</p><blockquote><p>如果遇到这种人，一般就是商业竞争对手，或者其他人特别搞你了，报警找高手溯源黑客地址抓人即可</p></blockquote><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/ddos04.png" alt="ddos04"></p><p><strong>ip溯源</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">https://blog.csdn.net/weixin_46684578/article/details/114489576<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>科普视频</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">https://www.bilibili.com/video/BV1KQ4y117nq?https://www.bilibili.com/video/BV1cY411x7k8/?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ddos攻击 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端重点与犯错总结</title>
      <link href="archives/18662394.html"/>
      <url>archives/18662394.html</url>
      
        <content type="html"><![CDATA[<p><strong>如有错误，各位大佬帮忙在评论区指正，感谢~~~</strong></p><h2 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h2><p><strong>一定一定要看最新的视频教程，否则等于白学！</strong></p><p>1-遇到问题不要像无头苍蝇，找个前辈请教往往事半功倍。</p><p>2-一定要自己独立完成每一个项目和案例，看懂和会做之间有一道鸿沟</p><p>3-先看完教程，再自己独立完成，写不出来，再吸取经验。</p><h2 id="H5和C3"><a href="#H5和C3" class="headerlink" title="H5和C3"></a>H5和C3</h2><p>1-没有理解align-self和align-items的区别</p><p>这个css一般只有flex布局后才有。</p><p><strong>align-items</strong>：align-items 属性定义flex子项在flex容器的当前行的侧轴（纵轴）方向上的对齐方式。（对齐弹性<strong>盒</strong>的各项元素）</p><p><strong>align-self</strong>：align-self 属性定义flex子项单独在侧轴（纵轴）方向上的对齐方式。（对齐弹性<strong>对象</strong>元素内的某个<strong>项</strong>）</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">https://www.jianshu.com/p/430097e8cabd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>测试</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.main</span><span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span>500px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>                  <span class="token punctuation">&#125;</span>        <span class="token selector">.r</span><span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>            <span class="token property">align-self</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>        <span class="token selector">.l</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>r<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>hah<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>cc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>l<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>l<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/263.png" alt="263"></p><p><strong>总结：</strong></p><p>简单来说，align-self是写给盒子自己的，当前盒子在父级大盒子中受到align-self的属性值影响。</p><p>align-items是写给盒子内部元素的，此盒子内部所有元素，受到align-items的属性值影响。</p><p>2-胡乱添加padding和margin</p><p>学完margin和padiding一看到空隙就加这两个，其实文字空隙等加个行高就能解决，还有一些盒子，加align-items:center也能解决，或者超链接下划线下移，给a加一个高度即可。</p><p>3-space-around等无效</p><p>给内容加这个，必须内容的父级有宽度，否则无法计算，就无法生效。</p><p>4-flex布局后，行内元素还是无法设置大小，还是得手动转行内块才可以。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/305.png" alt="305"></p><p>如上图，flex生效的ul里面的li，超链接a归li管，li并没有flex。</p><p>5-对:last-child和:first-child与:nth-child()的认识不足</p><p>上述的选择器，如p:first-child的意思是：要p标签在父级标签中的第一个元素是p才会生效，不是说在父级元素中的第一个p生效。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/cuowu1.png" alt="cuowu1"></p><p>6-单标签斜杠书写错误</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">原先以为是<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hr</span><span class="token punctuation">></span></span>其实是<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span>斜杠是写在后面的，因为要闭口不想双标签，是写在前面如：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>7-<strong>作用域问题</strong></p><p><strong>电梯导航案例</strong></p><p>犯错：js事件不生效</p><p>原因：找类选择器需要加点，但是增加删除classList的类名不需要加点。</p><p>犯错：for循环中i没有用let i =0 声明，而是直接写i = 0，导致有作用域链的问题，从而后面的content[i]无法识别。</p><blockquote><p>在js中，如果某个变量没有var声明，会自动移到上一层作用域中去找这个变量的声明语句，如果找到，就是用，如果没找到，就继续向上寻找，一直查找到全局作用域为止，如果全局中仍然没有这个变量的声明语句，那么自动在全局作用域进行声明，这个就是js中的<strong>作用域链</strong>，也叫变量提升</p></blockquote><p>因为我这里直接写i=0，上面也没有其他的声明i，所以默认也是全局作用域了</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/734.png" alt="734"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/735.png" alt="735"></p><blockquote><p>所谓的变量提升(Hoisting)就是:在任何作用域中使用var声明的变量,都会被提升到其作用域最顶部,也就 是说该变量的作用域相当于其函数或者全局,但是其赋值操作还是在原先的位置</p></blockquote><p>但var是函数作用域，如下。</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/736.png" alt="736"></p><p>所以原因是：i=0，通过作用域链变成了全局变量，点击事件是我们主动去触发的，但是循环是一直在运行的，我们点击之前，循环体早已经执行完。因为var的作用域是全局，所以i恒等于最后执行的那一个值。</p><blockquote><p>这是一个同步和异步的问题，并不是绑定事件的时候通过循环i的不同值就绑定好了，那个绑定事件当我们点击触发的时候，还是会去找i</p></blockquote><p>解决方法：let=0即可</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/727.png" alt="727"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">*</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.aside</span> <span class="token punctuation">&#123;</span>            <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>            <span class="token comment">/* 固定定位的top等是以浏览器窗口为参照物 */</span>            <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>            <span class="token comment">/* translate是以自身为参照物 */</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">li</span> <span class="token punctuation">&#123;</span>            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.content</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>            <span class="token property">min-height</span><span class="token punctuation">:</span> 1500px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0px 430px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.content div</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.active</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>男装<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>女装<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>电子产品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>美食<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aside<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男装<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>女装<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>电子产品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>美食<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> contents <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.content div'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span>        <span class="token comment">// console.log(lis)</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lis<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            lis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 可以用排他原则，但是我设置了默认active，可以用以下语句更简单</span>                document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.active'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>contents<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>                document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> contents<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>offsetTop            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>8-运行vue项目，npm run serve的时候，一直提示sass-loder要更新什么的，更新了也没用，反正就是不行。</p><p>解决：安装node就会自动安装对应版本的npm，不同版本的npm和node兼容不同的sass-loader，当你运行其他人的项目，如果你的node大版本和作者不同，就会出现这个问题。</p><p>解决方法：</p><p>1-用和作者相同的版本node</p><p>2试试node14或者16版本。</p><p>tips：大版本不同，相当于可能不向下兼容，不同大版本的产出物，相互使用会出问题。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 错误分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端错误分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5&amp;CSS3_移动端day04</title>
      <link href="archives/2c8a3c40.html"/>
      <url>archives/2c8a3c40.html</url>
      
        <content type="html"><![CDATA[<h1 id="小兔仙项目移动端订单页面"><a href="#小兔仙项目移动端订单页面" class="headerlink" title="小兔仙项目移动端订单页面"></a>小兔仙项目移动端订单页面</h1><p><strong>如有错误，各位大佬帮忙在评论区指正，感谢~~~</strong></p><p>注意：</p><p>1-填写订单就是html里面的title不需要另外写，返回的小标签也不需要写，因为Android已经把这些都做了，不需要我们前端来写。</p><p>2-注意选择二倍图，不然大小不对。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/247.png" alt="247"></p><p><strong>分析（拿到设计图不要直接写，先确定大致布局，框架，从上到下，从内到外）</strong></p><p>1-看有哪些公共样式，书写公共类css</p><p>2-看具体布局，margin，padding，背景颜色等</p><p>一，将页面分为两个div盒子，第一个盒子包括所有订单内容（可滑动），第二个盒子为“去支付”部分</p><p>position：fixed固定与底部。</p><h2 id="底部支付部分（布局）"><a href="#底部支付部分（布局）" class="headerlink" title="底部支付部分（布局）"></a>底部支付部分（布局）</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/249.png" alt="249"><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/248.png" alt="248"></p><h2 id="底部支付部分（代码）"><a href="#底部支付部分（代码）" class="headerlink" title="底部支付部分（代码）"></a>底部支付部分（代码）</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>确认订单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/iconfont/iconfont.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./css/base.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./css/order.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 主体部分 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 主体部分 --></span>    <span class="token comment">&lt;!-- 底部支付 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pay<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            合计:<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>$<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>266.00<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>去支付<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 底部支付 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">body</span><span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #f7f7f8<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 公共样式 */</span><span class="token comment">/* 页面有多个地方字体为此红色，所以写一个公共样式 */</span><span class="token selector">.red</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #cf4444<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 公共样式 */</span><span class="token comment">/* 主体部分 */</span><span class="token selector">.main</span><span class="token punctuation">&#123;</span>    <span class="token comment">/* 因为底部的支付部分是固定定位，脱标的    所以可能会导致页面最底部内容被遮盖    为了防止这种情况，需要加上一定的padding（与底部支付高度相同或大于） */</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 12px 11px 80px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 主体部分 */</span><span class="token comment">/* 底部支付 */</span><span class="token selector">.pay</span><span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0px 11px<span class="token punctuation">;</span>    <span class="token comment">/* 因为脱标后不占标准流，原先盒子的特性width会失效，需要手动加100% */</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ededed<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pay .left</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pay .left span</span><span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token selector">.pay .right a</span><span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token comment">/* a标签是行内式，加宽高没用，记得转换为行内块 */</span>    <span class="token property">width</span><span class="token punctuation">:</span> 91px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 35px<span class="token punctuation">;</span><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>90deg<span class="token punctuation">,</span> #6fc2aa 5%<span class="token punctuation">,</span> #54b196 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 35px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 底部支付 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1-因为多个地方用到红色字体，所以单独写一个样式，反复使用</p><p>2-a标签为行内式，所以设置宽高不会生效，记得设置为行内块inline-block</p><p>3-价格等数据必须用一个单独标签，否则后续变换数据很麻烦。</p><h2 id="用户信息整体布局"><a href="#用户信息整体布局" class="headerlink" title="用户信息整体布局"></a>用户信息整体布局</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/250.png" alt="250"></p><p>任何项目，拿到设计稿不要直接写代码，从外到内，从上到下，分析它的布局。</p><p>上图中，分为四个区域，分别用四个div，四个区域背景颜色，圆角等可以设置一个公共样式</p><p>可以看到每个区域内都有padding，记得设置，但是因为padding各不相同，不需要设置公共样式</p><p>注意：标签&gt;为详情信息，用户点击需要跳转，一般设置大小设置为44x44的大小（为一个食指指盖大小）</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>确认订单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/iconfont/iconfont.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./css/base.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./css/order.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 主体部分 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 用户信息 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_msg pannel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>location<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-location<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token comment">&lt;!-- 这个名字要留白，因为有的人三个字，有的人四个字                    把h5设置固定宽度即可 --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>瑾年<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>18888888888<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京市  海淀区  中关村软件园   信息科技大厦1号                    楼410#   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>more<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-more<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 商品区域 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pannel goods<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./uploads/pic.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>康尔贝 非接触式红外体温仪                     领券立减30元 婴儿级材质 测温…<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>粉色   红外体温计                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>¥266 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>¥299<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-x<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 结算信息区域 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>result pannel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>配送方式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>顺丰快递<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>买家备注<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>beizhu<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>希望可以尽快发货，嘻嘻~<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>支付方式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>支付宝 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-more<span class="token punctuation">"</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">opacity</span><span class="token punctuation">:</span> .5<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 价格区域 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>price pannel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>商品总价<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>￥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>299.00<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>运费<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>beizhu<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>￥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>0.00<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>折扣<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>￥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token punctuation">></span></span>30.00<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 主体部分 --></span>    <span class="token comment">&lt;!-- 底部支付 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pay<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            合计:<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>$<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>266.00<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>去支付<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 底部支付 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">body</span><span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #f7f7f8<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 公共样式 */</span><span class="token comment">/* 页面有多个地方字体为此红色，所以写一个公共样式 */</span><span class="token selector">.red</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #cf4444<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pannel</span><span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 公共样式 */</span><span class="token comment">/* 主体部分 */</span><span class="token comment">/* msg为用户信息，goods为商品 */</span><span class="token selector">.main</span><span class="token punctuation">&#123;</span>    <span class="token comment">/* 因为底部的支付部分是固定定位，脱标的    所以可能会导致页面最底部内容被遮盖    为了防止这种情况，需要加上一定的padding（与底部支付高度相同或大于） */</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 12px 11px 80px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.user_msg</span><span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 15px 0px 15px 11px<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.main .user_msg .location</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>90deg<span class="token punctuation">,</span> #6fc2aa 5%<span class="token punctuation">,</span> #54b196 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">margin-right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.main .user_msg .location i</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.main .user_msg .user</span><span class="token punctuation">&#123;</span>    <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token selector">.main .user_msg .more</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> solid 1px #3a9cff<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.main .user_msg .more i</span><span class="token punctuation">&#123;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token selector">.user .top</span><span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token selector">.user .top h5</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 55px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.user .bottom</span><span class="token punctuation">&#123;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.goods</span><span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 11px 0px 11px 11px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.goods .pic</span><span class="token punctuation">&#123;</span>    <span class="token comment">/* 为什么设置img的父级pic可以控制图片大小？因为base.css里面设置了img的宽度为100%，这样    比直接设置图片大小更灵活 */</span>    <span class="token property">width</span><span class="token punctuation">:</span> 85px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 85px<span class="token punctuation">;</span>    <span class="token property">margin-right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.goods .info</span><span class="token punctuation">&#123;</span>    <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.goods h5</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #262626<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 550<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.goods p</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 95px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #f7f7f8<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.goods .info span:first-child</span><span class="token punctuation">&#123;</span>    <span class="token property">margin-right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.goods .info span:last-child</span><span class="token punctuation">&#123;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> line-through<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #999999<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.goods .count</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span>    <span class="token comment">/* background-color: pink; */</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 结算部分 */</span><span class="token selector">.result</span><span class="token punctuation">&#123;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.result div</span><span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.result div:last-child</span><span class="token punctuation">&#123;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span>  0px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.result div</span><span class="token punctuation">&#123;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.result .beizhu</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #989898<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 结算部分 */</span><span class="token comment">/* 价格部分 */</span><span class="token selector">.price</span><span class="token punctuation">&#123;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.price div</span><span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.price div:last-child</span><span class="token punctuation">&#123;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span>  0px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.price div</span><span class="token punctuation">&#123;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 价格部分 */</span><span class="token comment">/* 主体部分 */</span><span class="token comment">/* 底部支付 */</span><span class="token selector">.pay</span><span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0px 11px<span class="token punctuation">;</span>    <span class="token comment">/* 因为脱标后不占标准流，原先盒子的特性width会失效，需要手动加100% */</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ededed<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pay .left</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pay .left span</span><span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token selector">.pay .right a</span><span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token comment">/* a标签是行内式，加宽高没用，记得转换为行内块 */</span>    <span class="token property">width</span><span class="token punctuation">:</span> 91px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 35px<span class="token punctuation">;</span><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>90deg<span class="token punctuation">,</span> #6fc2aa 5%<span class="token punctuation">,</span> #54b196 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 35px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 底部支付 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="flex布局"><a href="#flex布局" class="headerlink" title="flex布局"></a>flex布局</h2><h3 id="修改主轴方向"><a href="#修改主轴方向" class="headerlink" title="修改主轴方向"></a>修改主轴方向</h3><p>主轴方向即各元素的排序方向，默认是水平，但是可以通过flex-direction:column修改为垂直方向等。</p><p>修改后，水平方向的轴就变成了侧轴。</p><p>justify-content属性改变的是主轴，修改主轴为垂直后再设置，则在垂直方向生效。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/251.png" alt="251"></p><h3 id="弹性盒子换行"><a href="#弹性盒子换行" class="headerlink" title="弹性盒子换行"></a>弹性盒子换行</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/252.png" alt="252"></p><p>上图中用浮动实现很简单，8个li，然后设置浮动与大小与margin等即可，当轮到第五个li的时候，大盒子一行宽度不够，li会自动往下一行移动。</p><p>但是如果使用flex布局则不会，因为有一个默认属性flex-wrap：nowrap；</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/253.png" alt="253"></p><p>当不设置处于默认值的时候，默认不换行，最外面的大盒子只有500px，但是8个li按道理有800px，这时候又不能换行，就会发挥弹性盒子的特点，压缩每个li为500/8px大小。</p><p>当设置了flex-wrap：wrap；后就会换行排列（wrap的意思为换行）</p><h2 id="小兔仙pc端"><a href="#小兔仙pc端" class="headerlink" title="小兔仙pc端"></a>小兔仙pc端</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/260.png" alt="260"></p><p>在这里是写一个二手项目，我们的任务是写中间的内容部分，header和footer已经写好了</p><p><strong>预览</strong></p><p><strong>需求分析：</strong></p><p>1-先布局，遵循从外到内，从上到下，把内容分为侧边栏，和商品部分，再在这两部分中细分下去。</p><p>2-设置好margin和padding</p><p>3-设置白色外的背景色，分析它的作用范围。</p><p><strong>侧边栏</strong></p><p><strong>主内容</strong></p><p><em>1-overview会员中心部分</em></p><p>1.1分左右两个部分，其中中间有一个小分割线，使用border完成</p><p>1.2使用flex完成两部分的精准分割</p><p>1.3使用a嵌套img和p完成会员中心的图标和文字，设置好img的大小（因为p的存在，会导致三个a竖着排列，使用flex完成横向排列），再设置margin-bottom完成img和p的间距</p><p>1.4使用span和p完成优惠券部分，其中不需要margin-bottom，因为span中的文字自带行高</p><p>tip：左边三个img和p需要更改，因为没有特殊需求，每个用户基本上一样。右边的优惠券数量不用更改，因为后续前后端数据交互，每个人的数量是不一样的。</p><p><em>2-我的订单部分</em></p><p>2.1可以看到，不仅是我的订单部分，收藏商品部分都有一样的背景颜色，和padding，margin等，所以设置一个公共css类。</p><p>2.2有几个订单，就用几个小li，li里面的内容包含四个部分。</p><p><strong>新知识点</strong></p><p>1-这里用到了一个min-height，表示最少设置多少px，超出会自动增加。</p><p>2-<em>省略号如何实现？</em></p><p>text-overflow文字超出的部分，ellipsis省略号，white-space 属性设置如何处理元素内的空白，nowrap不换行，overflow：hideen隐藏</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/261.png" alt="261"></p><p>在一般盒子中，用以上代码可以实现省略号，但是在盒子display:flex后就是一个弹性盒子，你nowrap后，即不换行，但是他会挤压盒子在一行显示（弹性盒子的尺寸会被内容撑开），不会出现省略号，那么怎么办呢？</p><p>解决方法：我们给这个放文字的盒子规定一个宽度，那样就不会挤压，就能显示出省略号。（这里需要自己量盒子需要的宽度，比较麻烦，可以设置width:0px;flex:1 把剩余的宽度都给它，就不用自己量了）</p><p><strong>3-弹性布局内，行内元素，如a，span等元素，不需要加display:inline-block也能设置宽高</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/262.png" alt="262"></p><p><strong>缺点分析</strong></p><p>1-很多知识点还不熟练</p><p>2-css中选择选择器只达到了效果，但是层次不清，结构混乱，没有注释。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3移动端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>抓包遇到的棘手问题</title>
      <link href="archives/861493e5.html"/>
      <url>archives/861493e5.html</url>
      
        <content type="html"><![CDATA[<p><strong>如有错误，各位大佬帮忙在评论区指正，感谢~~~</strong></p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>抓安卓手机的一个app的数据包分析</p><h2 id="抓包app数据包"><a href="#抓包app数据包" class="headerlink" title="抓包app数据包"></a>抓包app数据包</h2><p>1-一般手机抓包用小黄鸟canary，给手机安装证书后即可抓取网页数据包</p><p><strong>问题一：如果抓app的话，有的app有防抓包检测，何解？</strong></p><p>单向认证的APP<br>单向认证和双向认证<br>•单向验证的情况是客户端校验证书，校验出错就无法访问•双向认证的情况是客户端校验证书的时候，服务端也要校验证书，有一端证书校验失败都无法访问数据。缺点是服务器的压力比较大</p><p>处理方法<br>一般是使用 JustTrustMe</p><p>原理是通过 Xpose Hook 校验的 API</p><p>APP不走代理<br>如何确定 APP 不走代理？<br>•关闭代理服务器（fiddler等代理抓包工具）•使用手机访问浏览器网页访问失败，确定代理失效•使用APP访问，正常访问确定 APP 不走代理访问网络</p><p>处理方法<br>•更换不基于代理类型的抓包工具（HTTP Analyzer V7–缺点没办法用在真机、HTTP Debug Pro、手机端的HttpCanary-基于VPN）•hook - 先反编译看看他是使用了那个框架，然后针对性的hook – 菜鸡劝退•iptables 强制拦截转发</p><p>代理检测的APP<br>挂上代理之前APP访问正常，挂上代理之后APP无法使用显示网络出错等情况</p><p>•代理检测（hook 代理检测的方法）•证书检测（用 JustTrustMe ）</p><p>双向认证的APP<br>双向认证的情况是客户端校验证书的时候，服务端也要校验证书，有一端证书校验失败都无法访问数据。</p><p>不过在双向认证的APP中要做到双向验证，在APP中一般要配置好服务器端验证的证书，所以在客户端中我们可以找到一个服务端的证书，我们只要在 Fiddler 中配置好这个证书就可以请求了。</p><p>ps：证书一般带有密码，需要反编译找到密码，之后导入至系统当中，再从系统中导出为 .cer 证书格式，之后在 FiddlerScript 中配置即可。</p><p><strong>这里的xp框架等都需要root，何解？</strong></p><p>使用电脑版的安装模拟器，如雷电，夜神等，自带root功能。</p><p><strong>问题二：fiddle抓包模拟器内的应用</strong></p><p>模拟器的wifi代理与端口都设置好了，证书也安装了？为什么抓不到包？</p><p>这里的模拟器就是模拟一个安卓手机，你自己的手机也能通过此方法抓包。</p><p>因为你使用的是安卓7.0以上的版本，安卓7.0及以上系统对于证书的安全策略做了修改，用户证书只能用于代理浏览器的流量，而应用是不会信任这些证书。【ios和安卓&lt;7.0的版本没有此问题】</p><p>　　解决方案：</p><p>　　　　1、root手机将证书导入到根证书目录下（百度）</p><p>　　　　2、换低版本安卓系统</p><p><strong>问题三：小黄鸟能抓应用，为什么fiddler不行？</strong></p><p>两者抓的原理不同，小黄鸟是vpn，fiddler是中间人，wireshark是网卡。</p><h2 id="如何抓包电脑客户端"><a href="#如何抓包电脑客户端" class="headerlink" title="如何抓包电脑客户端"></a>如何抓包电脑客户端</h2><p>C/S程序抓包需要借助Proxifer<br>Proxifier是一款功能非常强大的socks5客户端，可以让不支持通过代理服务器工作的网络程序能通过HTTPS或SOCKS代理或代理链。<br><strong>由于一般的C/S客户端不能设置代理，所以我们FIddler检测不到数据</strong>，我们可以通过Proxifer来实现把所有的请求抓发给Fiddler，这样我们就可以在Fiddler分析客户端请求。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 抓包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5&amp;CSS3_移动端day03</title>
      <link href="archives/b2eea9e3.html"/>
      <url>archives/b2eea9e3.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML5-amp-CSS3-移动端day03"><a href="#HTML5-amp-CSS3-移动端day03" class="headerlink" title="HTML5&amp;CSS3_移动端day03"></a>HTML5&amp;CSS3_移动端day03</h1><h2 id="pc端与手机端区别"><a href="#pc端与手机端区别" class="headerlink" title="pc端与手机端区别"></a>pc端与手机端区别</h2><p>电脑一般是版心居中，不是全屏，有留白。</p><p>手机端一般是全屏，网页宽度多数为100%。占据手机整个页面。</p><p>手机端也是网页，但是域名与电脑端的不同，是分开的，如pc端京东域名：jd.com，手机端一般是一个子域名m.jd.com</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/220.png" alt="220"></p><h3 id="调试手机端代码"><a href="#调试手机端代码" class="headerlink" title="调试手机端代码"></a>调试手机端代码</h3><p>使用谷歌游览器，选择你想要的手机就行，如果没有，点击edit添加</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/221.png" alt="221"></p><h3 id="分辨率"><a href="#分辨率" class="headerlink" title="分辨率"></a>分辨率</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/222.png" alt="222"></p><p>手机一般说多少寸的屏幕，是对角线的长度。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/223.png" alt="223"></p><p>分辨率1920*1080表示在显示上，长为1920个像素点，宽为1080个像素点。</p><p>显示分辨率（屏幕分辨率）是屏幕图像的精密度，是指显示器所能显示的像素有多少。由于屏幕上的点、线和面都是由像素组成的，显示器可显示的像素越多，画面就越精细，同样的屏幕区域内能显示的信息也越多，所以分辨率是个非常重要的性能指标之一。</p><p>可以把整个图像想象成是一个大型的棋盘，而分辨率的表示方式就是所有经线和纬线交叉点的数目。显示分辨率一定的情况下，显示屏越小图像越清晰，反之，显示屏大小固定时，显示分辨率越高图像越清晰。</p><p><strong>布局放大150%后，就会把桌面的图标，页面等放大1.5倍。</strong></p><p> <img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/224.png" alt="224"></p><p>一种是物理分辨率，一出厂就固定了，也叫硬件分辨率，是此屏幕的最大分辨率</p><p>一种是逻辑分辨率，又我们用户自己可以设置，如推荐的放大150%，分辨率就变小了，成为了1920/1.5和1080/1.5</p><p><strong>写代码参考的是逻辑分辨率</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/225.png" alt="225"></p><p>但是我这个页面分辨率为什么和默认的不同呢？</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/226.png" alt="226"></p><p>因为网页并不知道你是什么设备，你的分辨率是多少也不知道，默认为<strong>980像素</strong>的宽。</p><p> <strong>那么我每个手机的每个型号都要重复写代码，让它们适应，从而美观吗？</strong></p><p>不需要，我们只需要添加meta视口（viewport）代码，让网页大小自动取设备的大小。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width,initial-scales=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在PC端也有视口，默认为我们电脑的分辨率的100%，移动端默认为980</p><h3 id="二倍图"><a href="#二倍图" class="headerlink" title="二倍图"></a>二倍图</h3><p><strong>不是说分辨率越大，屏幕就越大，而是显示的更清晰，如同样10寸一样大的两块屏幕，他们的分辨率可以是不同的，分辨率越大，说明同等大小屏幕的像素点越多，越清晰。</strong></p><p><strong>大分辨率的图片放到小分辨率的屏幕上，然后取图片宽度为100%，屏幕的所有像素点都被沾满，自然清晰</strong></p><p><strong>小分辨率的图片，放到大分辨率的屏幕，就会留白，因为用不到那么多像素点。为了不留白，我们通常把img图片的大小宽度写为100%，但是这样虽然不留白了，但是小分辨率图片原本一个像素点的颜色，宽度扩大后在我们屏幕上强制占了好几个像素点，就会出现马赛克一样的效果。</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/227.png" alt="227"></p><p>设计师妹妹做图一般会依照iphone678的宽度来给，即750x1334，那么为什么不用375x667呢，就是为了防止图片分辨率太小，在用户手机上显示的像马赛克。</p><p><strong>750x1334像素的图就叫做二倍图</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/228.png" alt="228"></p><p><strong>在我们拿到设计图的二倍图后，编写的时候，需要在像素大厨选择二倍图模式</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/229.png" alt="229"></p><p>为什么呢，因为在我们测试代码的时候，使用的是iphone678，他的逻辑像素是375，如果我们用二倍图的像素值来写，这个时候我们写的是页面，就会超出手机范围，而不是增加了图片的清晰度。</p><p>简而言之：图片的清晰度还是750，只是我们写的是页面，我们游览器模拟的是375像素的屏幕，所以大小以375来写。</p><h3 id="百分比布局"><a href="#百分比布局" class="headerlink" title="百分比布局"></a>百分比布局</h3><p>百分比布局也叫做流式布局，宽度自适应，高度固定，在很久以前使用</p><p>现在除了宽度要自适应，高度也要自适应。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/230.png" alt="230"></p><h2 id="Flex布局"><a href="#Flex布局" class="headerlink" title="Flex布局"></a>Flex布局</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/231.png" alt="231"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/232.png" alt="232"></p><p>当我们布局几个盒子，让盒子浮动后脱标，那么当它们的父级没有设置高度，脱标后的元素就无法支撑起高度，父元素就没了高度。这个时候就需要用单标签法/伪元素法/overflow：hidden等来清除浮动，太过于麻烦。</p><p>那么怎么办呢，使用flex布局。</p><p><strong>flex布局不脱标</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/233.png" alt="233"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/234.png" alt="234"></p><p>flex布局是浏览器推荐的布局方式，渲染更快，以前用的浮动布局虽然可以达到效果，但是很麻烦，而且最初是用于图文环绕浮动。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/234.png" alt="234"></p><p>注意这里的父类必须是亲爹，不像子绝父相，父亲爷爷祖先都行。</p><p>默认主轴是横轴，交叉轴（侧轴）是竖轴</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/236.png" alt="236"></p><p>为什么弹性盒子水平排成了一排，因为主轴是水平的，flex后跟着主轴排（主轴的方向可更改）</p><h3 id="justify-content"><a href="#justify-content" class="headerlink" title="justify-content"></a>justify-content</h3><p>在浮动中，我们一般使用margin等来调节盒子与盒子间的距离，在flex布局中我们常用justify-content调节主轴的对齐方式。</p><p>justify使每行排齐，使齐行。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/237.png" alt="237"></p><p>注意space-evenly与space-around的区别，一个是间距全部相等，一个是间距加在盒子两侧，两盒子间的间距比靠墙的间距宽二倍。</p><p>space-around</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/238.png" alt="238"></p><p>space-evenly</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/239.png" alt="239"></p><p>space-between</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/240.png" alt="240"></p><p>center</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/241.png" alt="241"></p><h3 id="侧轴对齐方式"><a href="#侧轴对齐方式" class="headerlink" title="侧轴对齐方式"></a>侧轴对齐方式</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/242.png" alt="242"></p><p>stretch是默认值，将盒子拉伸，如果设置了高度则拉伸不了（设置了display：flex才有这个弹性盒子的特性）</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/243.png" alt="243"></p><p>这里都是给三个盒子的父级添加css属性，那么我只想其中一个受到影响，怎么办呢？</p><p>答案：使用align-self</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/244.png" alt="244"></p><p>其中的align-self直接加给要生效的盒子即可，不要加给它的父级，注意不能写出align-items，不会生效。</p><h3 id="flex取值"><a href="#flex取值" class="headerlink" title="flex取值"></a>flex取值</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/245.png" alt="245"></p><p>因为盒子2与3设置了flex:3和flex:1，而盒子1没设置，它们的宽度就是父级的总宽度减去一的宽度，然后分成3+1=4份，盒子2占3份，盒子3占一份。</p><p>好处是如果直接设置宽度，就无法通过用户机型大小的自动兼容，这里的父级即可取用户设备大小，从而让元素自动调整。</p><h3 id="小兔仙订单页面"><a href="#小兔仙订单页面" class="headerlink" title="小兔仙订单页面"></a>小兔仙订单页面</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/246.png" alt="246"></p><p>首先要准备四个文件夹，单独的css（里面必备默认清除margin等base基础样式），images（网页常用的固定图片，如logo），lib文件夹（一些需要引入的文件，如字体和框架等），uploads文件夹（不固定的图片，如电商产品图，是需要更改的图）</p><p><strong>其中顶部的填写订单和返回按钮不需要自己写，因为返回按钮是手机自带的，填写订单就是head里面的title</strong></p><p> 注意所有的数据，最好使用单独的标签，因为后续数据改变必须用到标签</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3移动端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5&amp;CSS3_移动端day02</title>
      <link href="archives/c5e99975.html"/>
      <url>archives/c5e99975.html</url>
      
        <content type="html"><![CDATA[<p><strong>缺点</strong></p><p>没写项目分析，选择器没有正确选择，小知识点没有自己写案例，导致知识点不牢固，综合项目不能独立完成。</p><h1 id="HTML5-amp-CSS3-移动端开发"><a href="#HTML5-amp-CSS3-移动端开发" class="headerlink" title="HTML5&amp;CSS3_移动端开发"></a>HTML5&amp;CSS3_移动端开发</h1><p>空间转换在实际工作中不常用，动画更重要。</p><h2 id="空间转换"><a href="#空间转换" class="headerlink" title="空间转换"></a>空间转换</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/190.png" alt="190"></p><p>z轴就是我们看向电脑的那一条线，指向我们的方向是正值。</p><p>空间转换和day01的平面转换一样，具有位移，旋转，缩放，属性也是transform，只是多了一个z轴。</p><h3 id="空间位移"><a href="#空间位移" class="headerlink" title="空间位移"></a>空间位移</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/191.png" alt="191"></p><p>这里如果xyz一起写，就需要将transilate改为translate3d，rotate和scale同理</p><p>如果都分开写，不需要加3d</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/192.png" alt="192"></p><p>只书写以上代码，无法看到z轴的效果</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/193.png" alt="193"></p><p>因为屏幕是平面，所以无法观察到z轴的变化，只能通过近大远小和近清除远模糊来区分，所以需要用到<strong>透视属性</strong>perspective来实现，那么perspective需要加在哪里呢？</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/194.png" alt="194"></p><p>注意这里的属性添加给需要透视效果元素的父级，如下图需要给div的box透视效果，box的父级是body就给body加css，添加perspective属性</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/195.png" alt="195"></p><p><strong>透视的原理</strong></p><p>translatez设置负值为缩小，设置正值为放大，因为近大远小</p><p>transform：translatez（xpx），这里的x设置的越大，则变化越大，perspective（）设置的越小，变化越大，与translate相反</p><p>如同时translatez（100px），perspective设置为10px则会让元素放大的超出游览器范围，设置为800-1200则在正常范围。为什么呢？</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/196.png" alt="196"></p><p>因为perspective设置的是视距，这是在在底层就设置好的，没有为什么，视距就是人的眼睛与屏幕的远近，设置的越小，通俗来说，你与屏幕靠的越近，东西自然越大。</p><p>其中transform: translateZ(100px);perspective: 1000px;这两句代码，表示视距是1000px，translatez（100px）即让屏幕中的物体向外z轴走100px，在2d屏幕中的效果自然是物体放大。</p><h3 id="空间旋转"><a href="#空间旋转" class="headerlink" title="空间旋转"></a>空间旋转</h3><p>rotateZ和rotate效果一样，Z是绕着Z轴转，rotate是绕着中心点转，效果相同。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/197.png" alt="197"></p><p>rotate3d，现实中根本不用，你只需要知道有这个写法即可。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/198.png" alt="198"></p><p><strong>立体呈现</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/199.png" alt="199"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>立体呈现<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.cube</span> <span class="token punctuation">&#123;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 100px auto<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> all 2s<span class="token punctuation">;</span>            <span class="token property">transform-style</span><span class="token punctuation">:</span> preserve-3d<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.cube div</span> <span class="token punctuation">&#123;</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.front</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>            <span class="token comment">/* 向我走近200px，这样本来被back的green覆盖的orange颜色就会到前面来            而且在z轴有一个200px的距离，只是电脑是平面，我们看不到，但是在旋转的时候可以体现*/</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>200px<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.back</span> <span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* cube hover 为了看空间感效果 */</span>        <span class="token selector">.cube:hover</span> <span class="token punctuation">&#123;</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cube<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>front<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>前面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>back<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>后面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>3D导航</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/200.png" alt="200"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/201.png" alt="201"></p><p>因为x轴旋转后改变了坐标轴的位置，即黄色面的xyz方向发生了改变，所以想把上图黄色面移动到长方体的最上面，需要translateZ，而不是translateY</p><h3 id="空间缩放"><a href="#空间缩放" class="headerlink" title="空间缩放"></a>空间缩放</h3><p>几乎也不用，因为现在网站追求简洁美观，没有这么老土的花哨</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/202.png" alt="202"></p><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/203.png" alt="201"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/204.png" alt="201"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/205.png" alt="205"></p><p>先定义动画，再使用动画。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/206.png" alt="206"></p><p>如果是两个状态就用from和to，如果是多个状态，就使用百分比。</p><p>这里的百分比的意思是使用动画使用时长占比节点，如时间设置为10s，则10%就是在1s的时候什么状态，50%就是在5秒的时候什么状态。</p><p>默认状态，动画结束后，返回原状态，如果想反复重复动画，需要用到复合属性里的重复次数值。</p><h3 id="动画的复合属性"><a href="#动画的复合属性" class="headerlink" title="动画的复合属性"></a>动画的复合属性</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/207.png" alt="207"></p><p><strong>动画名称和时长必须加否则无效，其他的可不写。</strong></p><p><strong>速度曲线</strong></p><p>一般工作中不使用速度曲线，因为时间太短，一般看不出来区别，它的意思是动画变化的速度快慢，有匀速，减速，加速变化这些。</p><p>linear是线性匀速，steps（x）是分步动画，如steps(3)就是分三次完成最后的效果。</p><p><strong>延迟时间</strong></p><p>加秒数即可，但是两个时间值，第一个为动画时长，第二个为延迟时间，意思为延迟x秒后再出现动画。</p><p><strong>重复次数</strong></p><p>重复次数加数字即可，如果想一直重复动画，就写infinite，这是无穷的无限的意思</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/208.png" alt="208"></p><p><strong>动画方向</strong></p><p>如from{width:200px}to{width:600px}这里是单方向的，200px到600px后，立马回到200px，而加入alternate属性值后，可以让200px到600px，再从600px慢慢返回到200px</p><p><strong>执行完毕的状态</strong></p><p>一般不设置，执行完毕就会回到原来的样子，但我们可以人为设置执行完毕的状态，但是如果设置这个，就不能加入infinite和alternate去除，因为他们是冲突的，无限循环自然不会执行完毕，相互代替动画方向，自然也没有开始与结束的概率点。</p><p>有两个常用属性值，一个是backwards，状态停留在最初状态，是默认值，一个是forwards停留在结束状态。</p><h3 id="animation属性拆分写法"><a href="#animation属性拆分写法" class="headerlink" title="animation属性拆分写法"></a>animation属性拆分写法</h3><p>了解即可，不用记。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/210.png" alt="210"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/211.png" alt="211"></p><p>其中有一个animation-play-state一般配合hover使用，让你鼠标移入，动画暂停，取值为paused</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/212.png" alt="212"></p><h3 id="逐帧动画"><a href="#逐帧动画" class="headerlink" title="逐帧动画"></a>逐帧动画</h3><p>动画有两种，一种是补间动画，工作中最常用，两个状态间非常平滑。</p><p>一种是逐帧动画，一般配合精灵图使用，下一帧代替上一帧。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/213.png" alt="213"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/214.png" alt="214"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/215.png" alt="215"></p><p>这个动画只是在原地跑，如何让小人在跑的同时，在屏幕上移动呢，可以让小人的父级盒子移动即可。</p><p>使用<strong>多组动画</strong>可以实现</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/216.png" alt="216"></p><p>在animation里面的第一个动画后，加逗号隔开写第二个即可。</p><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p><strong>走马灯</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/217.png" alt="217"></p><p>分析</p><p>1-遵循由外到内，由上到下，还有css先写浮动定位，再盒子，最后字体等样式书写顺序</p><p>2-将一个盒子，包含ul与li，li中放图片</p><p>3-因为li等有默认样式，所以需要清除</p><p>4-给图片设置大小，防止原图过大</p><p>5-给li浮动，让其排在一排，但是因为ul宽度不够，li还是会掉下去，所以给ul足够宽度</p><p>6-定义引用动画即可，注意最后要多复制几个图片，防止留白。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token comment">/* 去除默认的内外间距 */</span>        <span class="token selector">*</span><span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 去除li的样式，如原有的小点，浮动让li排在一排 */</span>        <span class="token selector">li</span><span class="token punctuation">&#123;</span>            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 确定img的宽度，高度会等比缩放 */</span>        <span class="token selector">img</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 盒子居中，再隐藏超出盒子范围的部分 */</span>        <span class="token selector">.box</span><span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 20px auto<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 112px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 5px solid black<span class="token punctuation">;</span>            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 给ul足够宽度，从而让确保li在一排 */</span>        <span class="token selector">.box ul</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 2000px<span class="token punctuation">;</span>            <span class="token property">animation</span><span class="token punctuation">:</span> zmd 5s infinite linear<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token atrule"><span class="token rule">@keyframes</span> zmd</span><span class="token punctuation">&#123;</span>            <span class="token selector">from</span><span class="token punctuation">&#123;</span>                    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>0px<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token selector">to</span><span class="token punctuation">&#123;</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-1400px<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.box :hover</span><span class="token punctuation">&#123;</span>            <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>            <span class="token property">animation-play-state</span><span class="token punctuation">:</span> paused<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/2.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/3.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/4.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/5.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/6.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/7.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 复制前三张图标，防止留白，因为移动translateX后，后面没有元素，就会一片空白，需要填充            现在直接复制，后续可以用js来复制 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/2.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/3.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="全面出游案例"><a href="#全面出游案例" class="headerlink" title="全面出游案例"></a>全面出游案例</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/218.png" alt="218"></p><p><strong>1-背景图片</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/219.png" alt="219"></p><p><em>注意，如果body想取屏幕大小的100%，只能再设置html的css取100%</em></p><p><strong>重中之重，background-size可以连写，但是是按照positon/size的格式</strong></p><p>如下：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">body&#123;    background: url(../images/f1_1.jpg)  no-repeat center/cover;    height: 100%;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>实现分析</strong></p><p>1-用大图做页面背景，然后其他子图片，都通过position定位上去，然后通过margin与定位的位置进行调节</p><p>从而让图片移动到它应该在的位置。</p><p>2-使用动画，实现图片的移动。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span><span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">html</span><span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body</span><span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../images/f1_1.jpg<span class="token punctuation">)</span></span>  no-repeat center/cover<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cloud img</span><span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 选择img的父级里面的第一个是img的元素 */</span><span class="token selector">.cloud img:nth-child(1)</span><span class="token punctuation">&#123;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>    <span class="token comment">/* 不一定必须在写了position的css部分里面才能书写left，top这些属性值    这里的img已经定位了，每个img都可以有不定位值 */</span>    <span class="token property">top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> cloudmove 1s 0.3s infinite linear alternate<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cloud img:nth-child(2)</span><span class="token punctuation">&#123;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -250px<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> cloudmove 1s 0.5s infinite linear alternate<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cloud img:nth-child(3)</span><span class="token punctuation">&#123;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -350px<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> cloudmove 1s 0.3s infinite linear alternate<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> cloudmove</span><span class="token punctuation">&#123;</span>    <span class="token comment">/* 不加from就是从当前位置 */</span>    <span class="token selector">to</span><span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>20px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./css/myindex.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cloud<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/yun1.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/yun2.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/yun3.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3移动端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5&amp;CSS3_移动端day01</title>
      <link href="archives/5ce0c8cf.html"/>
      <url>archives/5ce0c8cf.html</url>
      
        <content type="html"><![CDATA[<p><strong>如有错误，各位大佬帮忙在评论区指正，感谢~~~</strong></p><p><strong>学习内容</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/174.png" alt="174"></p><h2 id="字体图标"><a href="#字体图标" class="headerlink" title="字体图标"></a>字体图标</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/175.png" alt="175"></p><p><strong>案例购物车</strong></p><p>1-通过一个大标签包含，里面通过三个标签分别实现购物车图像，文字和小箭头（因为三个内容需要分别设置样式，如果通过一个标签写完，后面不好调，再者后期配合后端，必须有单独标签才能改变数据）</p><p>2-引入阿里图标库的css，class:iconfint必须给，因为定义了字体，然后要使用哪个字体图标，再引入这个字体图标的class样式</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../04-综合案例/iconfont/iconfont.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.orange</span><span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">*</span><span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">li</span><span class="token punctuation">&#123;</span>            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">a</span><span class="token punctuation">&#123;</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-cart-Empty-fill ozrange<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>购物车<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>iconfont icon-arrow-down<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>iconfont平台没有想要的字体图标怎么办呢？</strong></p><p>1-可以直接使用图片，或者背景图精灵图代替</p><p>2-在iconfont网站上传想要的图标，再下载使用</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">www.iconfont.cn<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/176.png" alt="176"></p><h2 id="平面转换"><a href="#平面转换" class="headerlink" title="平面转换"></a>平面转换</h2><p>transition过渡，tansform使改变; 使改观; 使转换;translate翻译; 译; 被翻译; 被译成; (使)转变，变为; （以某种方式）理解;</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/177.png" alt="177"></p><p>注意x正数往右，y正数是往下</p><h3 id="位移"><a href="#位移" class="headerlink" title="位移"></a>位移</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/178.png" alt="178"></p><p><em><strong>实现定位盒子居中</strong></em></p><p>众所周知盒子定位后，无法再用margin：auto居中，那么怎么办呢</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/179.png" alt="179"></p><p>1-使用绝对定位的left，top，right，bottom去调，一般设置为50%，但是这个50%调完之后，只是盒子的左上角在盒子的中单，并没有真正居中，于是还需要用到margin-left/right/top/bottom去调。</p><p>当需求盒子大小经常改变，或者盒子大小的50%是一个小数，这种方法就十分麻烦，所以有了第二种方法</p><p>2-把后面通过margin调整，改为通过transform：translate（x，y）调整，因为translate的50%总是自身的一半。</p><p><strong>双开门案例</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/180.png" alt="180"></p><p>疑问：伪元素不是分别在class:box的前后吗，为啥这个图片会覆盖在class:box的上面呢？</p><p>原因：没有理解伪元素::after/before，只知道会在原box的前后加入内容，但是没明白内容结构（再提醒，伪元素必须和content一起用）</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/181.png" alt="181"></p><p>如图：加入伪元素后，它们是在原盒子p里面构建了两个行内元素，这个伪元素不是在需要加内容的box的前面后面，而是在box的里面，只是在当前box内容的前后。</p><h3 id="旋转"><a href="#旋转" class="headerlink" title="旋转"></a>旋转</h3><p>rotate旋转</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/182.png" alt="182"><br>transition过渡配合使用，不然转了一圈没反应，其实转了但是你看不到。</p><p>deg为degree的缩写</p><p><strong>修改旋转点（转换中心点）</strong></p><p>事实上改变的是转换中心点，位移和渐变也能使用。</p><p>origin源头，起源，源点</p><p>当作复合属性来写。transform-origin:right bottom；就是以右下那个点做为旋转点，right和bottom之间用空格隔开，不是逗号。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/183.png" alt="183"></p><p><strong>多重转换（即位移又旋转等）</strong></p><p>当作复合属性来学，用空格隔开</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/184.png" alt="184"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/185.png" alt="185"></p><p>注意</p><p>1-要实现轮胎变旋转变位移，需要使用复合属性，transform:translate（） rotate（）</p><p>2-必须位移写在前面，因为如果旋转在前面，会改变平面坐标轴方向，位移方向就会发生改变</p><p>3-不能写一个位移，下面再下一个旋转，因为css具有层叠性，这样就只旋转不位移，因为旋转的css把位移的覆盖了</p><p><strong>缩放</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/186.png" alt="186"></p><p>单纯通过width:150%放大是从左上角放大，如果需要从中心放大，需要使用transform:scale(缩放倍数)</p><h2 id="渐变"><a href="#渐变" class="headerlink" title="渐变"></a>渐变</h2><p>linear-gradient  linear线性的，gradient坡度斜度 (温度、压力等的)变化率，梯度变化曲线;</p><p>意思就是逐渐的慢慢变化</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/187.png" alt="187"></p><p>属性名与设置背景图片相同为background-image，里面多个颜色用逗号隔开</p><p>现在企业一般使用透明到半透明，而不会像上面一样，很明显的颜色渐变，不美观。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/188.png" alt="188"></p><p>transparent透明的，清澈的</p><p>display:none的隐藏，不支持动画过渡渐隐，只会一瞬间消失，opacity可以渐隐。</p><p>padding的设置也会受到tansition过渡的影响。</p><p><strong>一个元素可以同时定位和浮动</strong></p><p>css书写，先写浮动定位，再写盒子的margin等，再下文字样式</p><p>z-index调整层级，不设置的话，标准流&lt;浮动&lt;定位第三层,但是它们默认为0，想谁在上面，给这个盒子设置z-index:1；即可</p><h2 id="案例华为"><a href="#案例华为" class="headerlink" title="案例华为"></a>案例华为</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/189.png" alt="189"></p><p>我的代码</p><p>缺点：</p><p>1-没写功能注释</p><p>2-结构混乱，没有遵守从外到内，从上到下，以及css的书写规则</p><p>3-选择器选择混乱，虽然能实现当前需求，但是维护与产品迭代起来非常困难，因为后续更新选择器可能选中了不需要的标签，或者选不中需要的标签。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>华为案例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./huawei.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>banxing<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../04-综合案例/images/huawei1.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>txt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>                            行业洞察                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>迈向人工智能2030年<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>了解更多<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../04-综合案例/images/huawei1.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>txt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>                            行业洞察                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>迈向人工智能2030年<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>了解更多<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../04-综合案例/images/huawei1.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>txt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>                            行业洞察                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>迈向人工智能2030年<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>了解更多<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">li</span> <span class="token punctuation">&#123;</span>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">a</span> <span class="token punctuation">&#123;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> aliceblue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">img</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.banxing</span><span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 20px auto<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 1000px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.banxing img</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.banxing li</span><span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">margin-right</span><span class="token punctuation">:</span> 49px<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> transform .5s<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.banxing h4</span><span class="token punctuation">&#123;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.banxing h5</span><span class="token punctuation">&#123;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.banxing p span</span><span class="token punctuation">&#123;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.txt</span><span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> -50px<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.banxing li:hover .mask</span><span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.banxing li:hover .txt</span><span class="token punctuation">&#123;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-50px<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.banxing li:hover img</span><span class="token punctuation">&#123;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>1.1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.mask</span><span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 283px<span class="token punctuation">;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>        transparent<span class="token punctuation">,</span>        <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.6<span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>标准代码</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>华为新闻<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./css/demo.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/product.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>txt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>产品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>OceanStor Pacific 海量存储斩获2021 Interop金奖<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>了解更多<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token comment">&lt;!-- 添加渐变背景 --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/huawei1.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>txt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>行业洞察<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>迈向智能世界2030<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>了解更多<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token comment">&lt;!-- 添加渐变背景 --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/huawei2.jpeg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>txt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>《ICT新视界》刊首语<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>笃行致远，共建具有获得感、幸福感、安全感的智慧城市<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>了解更多<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token comment">&lt;!-- 添加渐变背景 --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">li</span> <span class="token punctuation">&#123;</span>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">a</span> <span class="token punctuation">&#123;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">img</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 1110px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 247px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 20px auto<span class="token punctuation">;</span>    <span class="token comment">/* background-color: pink; */</span><span class="token punctuation">&#125;</span><span class="token selector">.box li</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 350px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 247px<span class="token punctuation">;</span>    <span class="token property">margin-right</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box li:last-child</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin-right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box .txt</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> -50px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 350px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 20px 30px<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> transform .5s<span class="token punctuation">;</span>    <span class="token comment">/* transition: all .5s; */</span><span class="token punctuation">&#125;</span><span class="token selector">.box .txt h4</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box .txt h5</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5em<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box .txt p</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box .txt p .iconfont</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #c7000b<span class="token punctuation">;</span>    <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 700<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 1. 渐变背景的盒子 */</span><span class="token selector">.box .mask</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 350px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 247px<span class="token punctuation">;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>        transparent<span class="token punctuation">,</span>        <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.6<span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 2. hover效果 */</span><span class="token comment">/* 2.1 图片缩放 */</span><span class="token selector">.box li .pic img</span> <span class="token punctuation">&#123;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box li:hover .pic img</span> <span class="token punctuation">&#123;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>1.2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 2.2 渐变背景显示 */</span><span class="token selector">.box li:hover .mask</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 2.3 文字向上移动 */</span><span class="token selector">.box li:hover .txt</span> <span class="token punctuation">&#123;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-50px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3移动端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5&amp;CSS3_day-小兔鲜项目</title>
      <link href="archives/ac25a271.html"/>
      <url>archives/ac25a271.html</url>
      
        <content type="html"><![CDATA[<p><strong>如有错误，各位大佬帮忙在评论区指正，感谢~~~</strong></p><h1 id="小兔鲜项目-瑾年blog"><a href="#小兔鲜项目-瑾年blog" class="headerlink" title="小兔鲜项目-瑾年blog"></a>小兔鲜项目-瑾年blog</h1><p><strong>tips</strong></p><p>1-当两个盒子浮动，第三个盒子不浮动，第三个盒子会去占前面盒子的位置，被覆盖</p><p>但是如果第三个盒子换成文字，图片，input等有内容的东西，就不会过去占前面两个盒子腾出来的标准流，而是在后面显示。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token selector">div.aa</span><span class="token punctuation">&#123;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">div.bb</span><span class="token punctuation">&#123;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">div.cc</span><span class="token punctuation">&#123;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>  <span class="token selector">img</span><span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aa<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bb<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.//picture/cgx.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/173.png" alt="173"></p><p>2-</p><h2 id="项目准备"><a href="#项目准备" class="headerlink" title="项目准备"></a>项目准备</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/157.png" alt="157"></p><p>为什么精灵图要用背景图片，不用image插入，因为要使用position移动，这样更方便</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/158.png" alt="158"></p><p><strong>背景图片大小</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/159.png" alt="159"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/160.png" alt="160"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/161.png" alt="161"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/164.png" alt="164"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/165.png" alt="165"></p><p>水平正值阴影是往右移动，垂直正值阴影是往下移动</p><p><strong>文字阴影</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/162.png" alt="162"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/163.png" alt="163"></p><p><strong>过度</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/166.png" alt="166"></p><p>一般过度配合hover使用</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/167.png" alt="167"></p><p>注意，transition是写在要变化的盒子里面，不是写在hover里面，重中之重如果你单个写，不写all</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">transition: width 1s,background-color 5s;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里是加逗号隔开，而不是空格。</p><p><strong>html骨架</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/168.png" alt="168"></p><p><strong>网站图标</strong></p><p>图标文件一般放到网站<img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/169.png" alt="169">根目录</p><p>和引入css一样引入即可，三个属性，rel说明是什么关系，是这个页面的什么，如css就是stylesheet</p><p>，href是超引用即填路径，type填资源类型/作用，css的是text/css</p><h3 id="项目结构搭建"><a href="#项目结构搭建" class="headerlink" title="项目结构搭建"></a>项目结构搭建</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/170.png" alt="170"></p><p>首页都得叫index</p><p>一些多次使用的样式，各个页面都需要使用的css，比如清除默认边距等css放到base.css</p><p>公共的样式，比如多个页面，都有一个固定的header，就可以放到common.css</p><p>如：<img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/171.png" alt="171"></p><p>这些公共样式都放到commom.css，common普通的，公共的。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/172.png" alt="172"></p><p>引入css的时候，按照先base后commom最后index引入，因为后面的会覆盖前面的效果。</p><h3 id="小兔仙"><a href="#小兔仙" class="headerlink" title="小兔仙"></a>小兔仙</h3><p>问题：</p><p><strong>一定要按照正确的方法框架结构来写，不要自己瞎写，可能目标达到了，但是要浪费大量时间，代码凌乱不堪，可维护性极差</strong></p><p><strong>遇到问题，样式效果与预期不同，结合所有知识，思考为什么会导致这样，有什么可能性，要有目的性的解决问题，不要没有方向，乱改。</strong></p><p>1-伪元素是行内，想设置大小记得display</p><p>2-要注意你设置的css选择器到底有没有选中，也可看控制台样式表，不然找十年找不到问题所在，为什么没生效？</p><p>3-充分理解设置的到底是谁的margin，设置的是谁的样式。</p><p>4-bgi中的url中的路径可以加引号也可以不加。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5&amp;CSS3_day08</title>
      <link href="archives/4400a44a.html"/>
      <url>archives/4400a44a.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML5-amp-CSS3-day08-定位装饰"><a href="#HTML5-amp-CSS3-day08-定位装饰" class="headerlink" title="HTML5&amp;CSS3_day08-定位装饰"></a>HTML5&amp;CSS3_day08-定位装饰</h1><p><strong>如有错误，各位大佬帮忙在评论区指正，感谢~~~</strong></p><p>有三种布局方式，一种标准流（文档流），一种浮动，一种就是定位。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/122.png" alt="122"></p><h2 id="相对定位"><a href="#相对定位" class="headerlink" title="相对定位"></a>相对定位</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/123.png" alt="123"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/124.png" alt="124"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/125.png" alt="125"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/126.png" alt="126"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/127.png" alt="127"></p><p>相对定位是基于本身来移动，而且移动后，原位置不脱标，移动后的位置照样</p><p>有原来的显示模式特点，如它是块元素，就完全占一行</p><p>移动left200px和top100px的意思是，移动后的div的左边距离原div左边200px，上面距离原div上边100px</p><p>如何只设置定位，不设置移动，元素标签位置不变</p><p>如果right和left，top和bottom都设置了，以left和top生效</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/128.png" alt="128"></p><h2 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/130.png" alt="130"></p><p>一般使用子绝父相，绝对定位这里的父，可以是爹也可以是爷爷等等，如果都找不到，就依照游览器定位。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/131.png" alt="131"></p><p>移动方式和相对定位一样，移动left200px和top100px的意思是，移动后的div的左边距离原div左边200px，上面距离原div上边100px，但是这里子div必须在父div里面</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">为什么在布局时，子集元素使用绝对定位时，父级元素就要用相对定位呢？分析:方向箭头叠加在其他图片上方，应该使用绝对定位，因为绝对定位完全脱标，完全不占位置。父级盒子应该使用相对定位，因为相对定位不脱标，后续盒子仍然以标准流的方式对待它如果父级盒子也使用绝对定位，会完全脱标，那么下方的广告盒子会上移，这显然不是我们想要的结论:父级要占有位置，子级要任意摆放，这就是子绝父相的由来。原文链接：https://blog.csdn.net/LmissL/article/details/108647865<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>right,top,left,bottom这些值可以是负数（超出父类）</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">什么时候用浮动，什么时候用定位呢，我只知道浮动没有上下，只有左右，但是定位上下左右都有办法设置。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>个人理解：盒子使用绝对定位后，使用margin：0 auto居中失效，因为没有了参照物，auto不知道是多少，无法计算。</p><p>脱标后的标签元素，照样可以设置margin，padding等，这里auto失效应该不是因为脱标</p><p>注意，正常的标准流使用此方法居中，盒子要设置大小，不然auto也无法计算自然无法居中。</p><p> 那么如何居中呢，使用定位的left，right等（注意如left：50%，会让盒子的最左边在父级中心线上，而不是一个正方形盒子正好居中，对半分），因为这个原因，所以还需要与margin配合居中。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/132.png" alt="132"></p><p>但是问题又来了，当盒子大小width和height改变，每次想要居中，又要再自己计算margin需要设置多少的值，当遇到小数的时候，还无法设置（无法设置小数，如1.5px），我们可以用transform：translate（-50%，-50%）解决</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/133.png" alt="133"></p><p>自我提问：为什么要有浮动和定位</p><p>因为它们和标准流都是一种布局方式，各有各的优势好处，方便布局，哪个能达到效果而且最简便就用哪个。</p><p>绝对定位总结</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/134.png" alt="134"></p><p>绝对定位后，原来占的地方脱离标准流，新占的地方具有行内块的特点，可以与其他脱标元素一行排多个，但是它还是脱标的，覆盖在标准流的原内容上面。如下图，且绝对定位以具有定位的父级为参照物，父级没有定位就已游览器为参照物</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/135.png" alt="135"></p><p><mark>绝对定位这里的父级不只是父亲元素，只要是包含它的都可以，一百层div嵌套，只需要有一层具有定位，就不会以游览器为参照物</mark></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/136.png" alt="136"></p><p>它的父级是蓝色，没有定位，然后找爷爷pink粉色，有定位，就以粉色爷爷做参照物，不会以游览器做参照物</p><h3 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/137.png" alt="137"></p><p>如这个搜索框和侧边栏， 不管网页如何上下滑动，都不会消失</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/138.png" alt="138"></p><p>位置设置也是left，right，bpttom，top</p><h3 id="元素的层级关系"><a href="#元素的层级关系" class="headerlink" title="元素的层级关系"></a>元素的层级关系</h3><p>  层级关系，就是多个元素谁在谁的上面，最终显示谁。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/139.png" alt="139"></p><p>言简意赅，如果有标准流和浮动，相同大小，浮动的那个元素标签显示在最上层，被用户看见。</p><p>如果层级相同，都是浮动，或者都是定位，则谁写在下面，谁显示</p><p>其中都是定位，如果你就像写在前面的显示给用户看，可以使用z-index：1；这行css，其中值越大的越显示在上面，默认为0(注意，这个必须配合定位来使用)</p><h3 id="装饰"><a href="#装饰" class="headerlink" title="装饰"></a>装饰</h3><h4 id="垂直对齐方式"><a href="#垂直对齐方式" class="headerlink" title="垂直对齐方式"></a>垂直对齐方式</h4><p>因为游览器处理行内元素和行内块元素，默认按照文字特点解析，默认为baseline</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/140.png" alt="140"></p><p>导致这里对不齐，怎么办呢</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/141.png" alt="141"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/142.png" alt="142"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/143.png" alt="143"></p><p>通过添加css vertical-align：baseline/top/middle/bottom解决，那么是给input加还是img加呢，实测middle必须加在img（较大的标签），top加给谁都可以，貌似不同标签有不同，没理解它的具体原理。</p><p>第二种情况</p><p>当一个标签元素（这里为图片），放在一个没设置高的div里面，按理说，div的高就是图片的高，但事实如下</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/144.png" alt="144"></p><p>下面会多一点，怎么办呢，照样设置middle，或者给图片添加display:block把它转成块，因为游览器默认把行内和行内块做为文字基线处理，块元素不会。</p><h4 id="将盒子里面的图片居中"><a href="#将盒子里面的图片居中" class="headerlink" title="将盒子里面的图片居中"></a>将盒子里面的图片居中</h4><p>用行高，配合vertical：middle；</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/145.png" alt="145"></p><p>必须两个都写，单纯写行高是没用的，因为行高管不了图片，虽然解析行内块和行内元素都是按照文字的特点解析，单纯写vertic设置居中也不行，因为它不知道对照哪个值居中。（具体工作原理看文档，我是整不明白）</p><p>因为游览器处理行内和行内块都看作文字处理，如img就像一个大文字处理，所以text-align:center;可以让图片水平居中，这里注意，这个text-align:center;需要写到图片的父级元素css上，因为图片就是图片没有里面的内容，不知道让谁居中，写到图片的父级，就知道是让图片居中，文字p不同，写到p的css上面就行，因为p是双标签，p中包含了文字。</p><h4 id="光标类型"><a href="#光标类型" class="headerlink" title="光标类型"></a>光标类型</h4><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/146.png" alt="146"></p><p>光标，就是你的鼠标，如能点进去看的，会设置成一个小手的形状</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/147.png" alt="147"></p><p>你像让光标移动到一个图片变成小手，就给图片加css -例cursor:pointer;</p><h4 id="边框圆角"><a href="#边框圆角" class="headerlink" title="边框圆角"></a>边框圆角</h4><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/148.png" alt="148"></p><p>radius半径(长度); 桡骨; 周围;</p><p>注意：最多只能设置四个值，设置一个值就是四个全是，设置四个就是从左上角顺时针设置，设置两个三个，没有赋值的看对角，与margin和padding的设置一样。</p><p>如何设置正圆，首先长宽相同，设置值为50%（最多50%，再大没变化），或者长宽的一半px</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/149.png" alt="149"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/150.png" alt="150"></p><h4 id="overflow溢出部分显示效果"><a href="#overflow溢出部分显示效果" class="headerlink" title="overflow溢出部分显示效果"></a>overflow溢出部分显示效果</h4><p>overflow在前面有解决坑爹现象塌陷问题，和清除浮动。什么？为什么能清除浮动？这就和bfc有关系了，月薪两千的流水线前端，不需要知道太多工作原理。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/151.png" alt="151"></p><h4 id="元素的显示和隐藏"><a href="#元素的显示和隐藏" class="headerlink" title="元素的显示和隐藏"></a>元素的显示和隐藏</h4><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/152.png" alt="152"></p><p>visibility:hidden隐藏后，照样占标准流，一样占位置，只是那一片位置变成了空白</p><p>display:none完全隐藏，不占位置。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/153.png" alt="153"></p><p>这里one虽然没了，但是照样占了一行，为visibility</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/154.png" alt="154"></p><p>这里one完全隐藏了，为display:none；</p><h4 id="透明属性opacity"><a href="#透明属性opacity" class="headerlink" title="透明属性opacity"></a>透明属性opacity</h4><p>opacity不透明度; 不透明性; 模糊; 费解; 难懂;</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/155.png" alt="155"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/156.png" alt="156"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5&amp;CSS3_day07</title>
      <link href="archives/d4bfb9db.html"/>
      <url>archives/d4bfb9db.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML5-amp-CSS3-day07-瑾年的学习记录"><a href="#HTML5-amp-CSS3-day07-瑾年的学习记录" class="headerlink" title="HTML5&amp;CSS3_day07-瑾年的学习记录"></a>HTML5&amp;CSS3_day07-瑾年的学习记录</h1><p>设置input的placeholder提示语语法为::placeholder</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/119.png" alt="119"></p><p>设置图片垂直居中vertical-align</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/120.png" alt="120"></p><h2 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h2><h3 id="额外标签"><a href="#额外标签" class="headerlink" title="额外标签"></a>额外标签</h3><p>为什么要清除浮动呢，清除浮动的作用是避免因为此标签不占标准流，而它的父级又没有设置宽高，导致页面效果与预期不同，清除浮动后能让它们重新“占位”</p><p><b>父级加高度</b></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/111.png" alt="111"></p><p><b>父级不加高度，导致与预期不同</b></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/112.png" alt="112"></p><p>解决方法：</p><p>1-直接把父类加高度，但是有时就是不能加高度，用方法二</p><p>2-在父类后加一个块元素标签，标签设置css的clear：both，一般把这个标签class写为clearfix</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/113.png" alt="113"></p><p>both代表两边，其实还要left和right的选项</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/110.png" alt="114"></p><h3 id="单伪元素清除法"><a href="#单伪元素清除法" class="headerlink" title="单伪元素清除法"></a>单伪元素清除法</h3><p>其实和额外标签法一样，就是利用伪元素添加一个标签，注意要加上display：block因为伪元素是行内的，没有块元素的特性</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/114.png" alt="114"></p><p>为了兼容低版本游览器，还可以加哈桑高度与隐藏</p><h3 id="双伪元素清除法"><a href="#双伪元素清除法" class="headerlink" title="双伪元素清除法"></a>双伪元素清除法</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/115.png" alt="115"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/116.png" alt="116"></p><p>其实这看起来和单伪类标签法一样的，为什么多此一举写两个css呢，因为display转为table后，可以解决塌陷问题。</p><h3 id="overflow清除浮动"><a href="#overflow清除浮动" class="headerlink" title="overflow清除浮动"></a>overflow清除浮动</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/117.png" alt="117"></p><h2 id="学成在线项目"><a href="#学成在线项目" class="headerlink" title="学成在线项目"></a>学成在线项目</h2><p>1-创造根目录</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/118.png" alt="118"></p><p>所以网站的首页都叫index.html,文件命名都要是英文</p><h3 id="项目流程总结"><a href="#项目流程总结" class="headerlink" title="项目流程总结"></a>项目流程总结</h3><p>tips：</p><p>1-link是写在head里面</p><p>2-logo最好使用h1嵌套a嵌套img，使用h1有利于seo</p><p>3-浮动的元素可以再设置margin</p><p>4-导航一般用ul&gt;li&gt;a</p><p>4-尽力给元素标签设置类class，写css时用交集或者后代选择器选中，不要直接用元素选择器选中，因为一个项目有多个相同的元素标签，设置速度样式都不同。</p><p><b>步骤</b></p><p>1-创造根目录，包含css文件夹，image文件夹，index.html文件，文件夹名字需要是英文</p><p>2-按照从外到内，从上到下，从左到右，css书写从浮动/display；盒子；文字样式（为什么css先写浮动和display运行更快呢，比如a一个超链接，你要设置它的大小，你必须把它转为有块元素的性质，才能设置大小，这就需要用到浮动或者display，如果你浮动写在后面，大小写在前面，起初大小不生效，发现有浮动，游览器就要多一步去渲染)</p><p>3-版心居中，一般类名用wrapper</p><p>4-清除默认样式如margin等设置为0，超链接的下划线等去除，清除浮动等等（可以找一个好的style.css复制过来）</p><p><b>自我疑问</b></p><p>不是浮动后，不加清除浮动，会失去标准流（文档流）会被下面的盒子顶位置吗，为什么有时又没有？</p><p>答：那是因为你没有观察清楚，其实有一个大盒子包含了它们，里面的小盒子如果一个浮动一个不设置浮动照样会被顶位置，但是大div如header盒子没设置浮动，所以不会被下面的另一个大div如nav盒子顶。</p><p>还有一种情况，因为大div没有设置大小（有的情况就不能设置），大小全靠子内容撑开，但是子内容全部都浮动了，就会导致下面的大div顶上来，这时候就需要清除浮动（利用上面的单/双伪元素等方法）</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/121.png" alt="121"></p><p>如图设置的都是大盒子内部的元素，每个大框架大盒子并没有加浮动css</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5&amp;CSS3_day06</title>
      <link href="archives/a3b8894d.html"/>
      <url>archives/a3b8894d.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML5-amp-CSS3-day06"><a href="#HTML5-amp-CSS3-day06" class="headerlink" title="HTML5&amp;CSS3_day06"></a>HTML5&amp;CSS3_day06</h1><h2 id="一些margin与padding的问题"><a href="#一些margin与padding的问题" class="headerlink" title="一些margin与padding的问题"></a>一些margin与padding的问题</h2><p>垂直布局的块元素，上下margin会合并</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/94.png" alt="94"></p><p>互相嵌套的块级元素导致塌陷（两个盒子嵌套，子盒子加外边距，将会影响父盒子）</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/95.png" alt="95"></p><p>本来想让蓝盒子在粉色盒子内有一个50px的边距，没想到两个盒子都下移了，这就叫塌陷。</p><p>下面是解决方法</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/96.png" alt="96"></p><h3 id="行内设置margin与padding无法生效"><a href="#行内设置margin与padding无法生效" class="headerlink" title="行内设置margin与padding无法生效"></a>行内设置margin与padding无法生效</h3><p>和行内元素设置大小一样，设置起来都无效，有一种方法可以代替margin设置上下，那就是行高line-height</p><h2 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/97.png" alt="97"></p><p>注意是匹配父元素中的子元素</p><p>当你想设置样式，但不想给class或者id时使用</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/98.png" alt="98"></p><p>其中n可以填公式，odd是奇数，even是偶数</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/99.png" alt="99"></p><h3 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/100.png" alt="100"></p><p>一些不重要的装饰内容，可以使用伪元素，且必须配合content使用</p><p>当不设置时，默认是行内元素，设置宽高不生效，可display为blokc即可生效</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/101.png" alt="101"></p><h3 id="标准流又称文档流"><a href="#标准流又称文档流" class="headerlink" title="标准流又称文档流"></a>标准流又称文档流</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/102.png" alt="102"></p><h3 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/103.png" alt="103"></p><p>one和two间有一个间距，这个间距不是margin，两div间没有默认的margin，这个间距是因为两个div代码不在一行书写，换行了。</p><p>但是如果不换行，可读性极差，怎么办呢，用浮动来解决。</p><p><b>浮动以前多用于图文环绕，先用于网页布局</b></p><p>图文环绕</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/104.png" alt="104"></p><p>网页布局</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/105.png" alt="105"></p><p>两个盒子都float:left;不换行也无白色间隙</p><h4 id="浮动的特点"><a href="#浮动的特点" class="headerlink" title="浮动的特点"></a>浮动的特点</h4><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/106.png" alt="106"></p><p><mark>注意：第一个盒子浮动，不占标准流，第二个不浮动，第二个就会去第一个盒子的位置，所以three占了one的位置</mark></p><p><mark>但是如果两个盒子都浮动，则不会互占位置，这就是上述two蓝色正方形并没有占one粉色的原因</mark></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/107.png" alt="107"></p><p>浮动后的元素，也就是float:right/left；的这些元素，将脱离标准流，不再占标准流位置，后面的元素就会顶上来，但不会覆盖内容。</p><p>加了浮动后的元素，想行内块一样，可以设置大小，而且可以一行显示多个</p><p>为什么无法再居中，因为你设置了左或右浮动，无法再让它居中，它只能实现一个。</p><h4 id="css书写顺序"><a href="#css书写顺序" class="headerlink" title="css书写顺序"></a>css书写顺序</h4><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/108.png" alt="108"></p><p>先写浮动，后写盒子模型，最后写文字样式，这样可以增加游览器渲染速度，但我们写代码的时候，不知道哪个首先要浮动，我们先写完，然后把浮动代码剪接到首行即可。</p><p>当父类宽度不够，无法浮动，会自动换行</p><p><b>导航案例</b></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/109.png" alt="109"></p><p>需求分析</p><p>1-用一个大div包括所有元素，并用margin 0 auto版心居中</p><p>2-用ul&gt;li&gt;a*8来实现八个新闻</p><p>3-将八个li设置浮动，并将a设置为块元素，并设置大小（因为li设置了浮动，所以a设置为块元素也能一行显示）</p><p>4-最后利用伪类hover设置鼠标移上去的颜色</p><p>5-css记得遵循，先浮动，后盒子，最后设置文字样式。</p><p>我的代码</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>纯手写<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">             <span class="token selector">*</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>     <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>             <span class="token selector">ul</span><span class="token punctuation">&#123;</span>      <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>            <span class="token selector">.nav li</span><span class="token punctuation">&#123;</span>                <span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span>                            <span class="token punctuation">&#125;</span>            <span class="token selector">.nav li a</span><span class="token punctuation">&#123;</span>                <span class="token property">width</span><span class="token punctuation">:</span>80px<span class="token punctuation">;</span>                 <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>                   <span class="token property">background-color</span><span class="token punctuation">:</span>pink<span class="token punctuation">;</span>                <span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span>                <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span>                <span class="token property">text-decoration</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span>                <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>                <span class="token property">line-height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token selector">ul li a:hover</span><span class="token punctuation">&#123;</span>                <span class="token property">background-color</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token selector">div</span><span class="token punctuation">&#123;</span>                <span class="token comment">/* 当div不设置宽高，完全是内容把盒子撑开，设置margin居中将无效 */</span>                <span class="token property">width</span><span class="token punctuation">:</span> 640px<span class="token punctuation">;</span>                <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>                <span class="token property">margin</span><span class="token punctuation">:</span> 0px auto<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考代码</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">  <span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token comment">/* 1、去除标签默认的margin和padding */</span>    <span class="token selector">*</span> <span class="token punctuation">&#123;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 2、找到ul，去除小圆点 */</span>    <span class="token selector">ul</span><span class="token punctuation">&#123;</span>      <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 3、找到li标签，设置浮动 */</span>    <span class="token selector">ul li</span> <span class="token punctuation">&#123;</span>      <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 4、找到a标签，设置宽高 */</span>    <span class="token selector">ul li a</span> <span class="token punctuation">&#123;</span>      <span class="token comment">/* a标签默认是行内元素，不能直接设置宽高 */</span>      <span class="token comment">/* 1、转换成行内块元素 */</span>      <span class="token comment">/* display: inline-block; */</span>      <span class="token comment">/* 2、转换成块级元素 */</span>      <span class="token comment">/* display: block; */</span>      <span class="token comment">/* 3、设置浮动 */</span>      <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> #ffc0cb<span class="token punctuation">;</span>      <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">ul li a:hover</span> <span class="token punctuation">&#123;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> #008000<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>问题：</p><p>1-代码凌乱，解决方法：遵循从外到内，从上到下</p><p>2-大div设置margin版心居中没反应，原因是最后才设置margin，而且div本身没设置宽高，div是被内容li和a这些撑开的，导致div居中无效（div再是内容的爹，但是爹本身没东西，管不住儿子，得听儿子的不居中）（盒子不设置大小，auto无法计算，计算方法=（游览器大小-内容）/2，自然无法居中。）</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5&amp;CSS3_day05</title>
      <link href="archives/3ab1d8f7.html"/>
      <url>archives/3ab1d8f7.html</url>
      
        <content type="html"><![CDATA[<hr><h1 id="HTML5-amp-CSS3"><a href="#HTML5-amp-CSS3" class="headerlink" title="HTML5&amp;CSS3"></a>HTML5&amp;CSS3</h1><p><mark>所有的布局，从外到内，从上到下</mark></p><p>pxcook如果是psd则用开发模式，png等格式用设计模式，按空格可以拖，等于鼠标上下滑动。</p><h2 id="day4复习案例"><a href="#day4复习案例" class="headerlink" title="day4复习案例"></a>day4复习案例</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 案例一 --></span><span class="token comment">&lt;!-- 我的代码 --></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">div</span><span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>      <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../pic&amp;video/shopcar_01.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">div:hover</span><span class="token punctuation">&#123;</span>      <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../pic&amp;video/shopcar_02.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 首先给一个div；      设置宽度大小    设置背景色和背景图片  利用伪类css实现鼠标移上去转换图片 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 参考答案 --></span><span class="token comment">&lt;!-- &lt;!DOCTYPE html>&lt;html lang="en">&lt;head>&lt;meta charset="UTF-8">&lt;meta name="viewport" content="width=device-width, initial-scale=1.0">&lt;title>购物车&lt;/title>&lt;style>/* 因为a是行内元素，直接设置宽高不生效，我们需要将a的显示模式转化 */.cart &#123;display: block;width: 67px;height: 31px;background-color: pink;background-image: url("images/shopcar_01.png");&#125;.cart:hover &#123;background-image: url("images/shopcar_02.png");&#125;&lt;/style>&lt;/head>&lt;body>&lt;a href="#" class="cart">&lt;/a>&lt;/body>&lt;/html> --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例二</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/80.png" alt="案例二"></p><p>我的代码</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!DOCTYaE</span> <span class="token attr-name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">htta-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Comaatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewaort<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">.aside</span><span class="token punctuation">&#123;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> #2c505f<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">a</span><span class="token punctuation">&#123;</span>      <span class="token property">text-indent</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 20ax<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>      <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span>      <span class="token comment">/* 超链接也有行高 */</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">a:hover</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aside<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>手机 电话卡<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>电视 盒子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>笔记本 显示器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>家电 插线板<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>出行 穿戴<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>智能 路由器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>电源 配件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>健康 儿童<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>耳机 音箱<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>生活 背包<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">.box</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 234px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 420px<span class="token punctuation">;</span>      <span class="token comment">/* background-color: pink; */</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.box a</span> <span class="token punctuation">&#123;</span>      <span class="token comment">/* 需要a标签这个行内元素设置宽高，需要转换成：块级元素或者行内块元素 */</span>      <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 234px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> #2c505f<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>      <span class="token comment">/* 去除默认的下划线 */</span>      <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token comment">/* 每个a标签文字首行缩进 */</span>      <span class="token property">text-indent</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>      <span class="token comment">/* a标签中的文字垂直居中 */</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 鼠标移入之后，让a底色变红 */</span>    <span class="token selector">.box a:hover</span> <span class="token punctuation">&#123;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 一般导航点击能跳转，所以一般需要使用a标签完成 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>手机 电话卡<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>电视 盒子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>笔记本 显示器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>家电 插线板<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>出行 穿戴<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>智能 路由器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>电源 配件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>健康 儿童<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>耳机 音箱<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>生活 箱包<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例三</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/81.png" alt="81"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">我的代码<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">.header</span><span class="token punctuation">&#123;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">a</span><span class="token punctuation">&#123;</span>      <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>      <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> grey<span class="token punctuation">;</span>      <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>      <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">a:hover</span><span class="token punctuation">&#123;</span>      <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">p</span><span class="token punctuation">&#123;</span>      <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> grey<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 需求分析   设置一个盒子,然后数个超链接,按实际需求给超链接改为行内块--></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>瑾年<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>产品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>企业文化<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>云服务<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>游戏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>移动版下载<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>问题反馈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>联系作者<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html">参考代码<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">.box</span> <span class="token punctuation">&#123;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 在后期项目项目中，会设置一个宽度固定并且水平居中的盒子包住内容，限定内部元素的范围（后面项目中会解释，同学们先以模仿为主） */</span>    <span class="token selector">.box .container</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 1226px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>      <span class="token comment">/* background-color: pink; */</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.box .container a</span> <span class="token punctuation">&#123;</span>      <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #b0b0b0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token selector">.box .container a:hover</span> <span class="token punctuation">&#123;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.box .container span</span> <span class="token punctuation">&#123;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #b0b0b0<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>小米网<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>MIUI<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>米聊<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>游戏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>多看阅读<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>云服务<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>小米网移动版<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>问题反馈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Select Region<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><mark>想让超链接在盒子里面居中，a的行高就设置为盒子高度</mark></p><h2 id="选择器的优先级"><a href="#选择器的优先级" class="headerlink" title="选择器的优先级"></a>选择器的优先级</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/82.png" alt="82"></p><p>一般范围越大关的越宽，优先级越低</p><p>继承的优先级最低</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/83.png" alt="83"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/84.png" alt="84"></p><p>当都是继承，哪个继承关系近，就继承哪个。所以这里是红色</p><p><b>注意当是并集选择器，几个选择器间选择的是不同标签，没有优先级比较。当选择的是同一个标签才有比较优先级这一说</b></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">      <span class="token selector">div,p.cnm</span><span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span> black <span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>        <span class="token selector">div,.cnm</span><span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cnm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如这个代码，是并集选择器，但后面的p.cnm是交集选择器，其中.cnm和p.cnm都选中p标签，p.cnm的优先级更高，所以此为黑色。</p><h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/85.png" alt="85"></p><p>margin是外边距，是盒子和盒子之间的距离</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/86.png" alt="86"></p><p><b>注意width和heigh设置的盒子大小，不包括内外边距区域和边框区域，再设置border和padding会撑大盒子</b></p><p>border和padding都会撑大盒子</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/87.png" alt="87"></p><p>solid实线，dotted点线，dashed虚线，其中属性颜色，大小，线段可以不分先后书写</p><p><b>如何单独设置一个或者多个方向的border呢</b></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/88.png" alt="88"></p><p>只需要单独的写border-left或者border-right与border-bottom或border-top</p><p><b>当然它有复合属性也能单独书写，但是因为麻烦不常用</b></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/89.png" alt="89"></p><p>padding,margin也都有选择上下左右的属性，注意padding设置了，它的背景颜色也是盒子的颜色，肉眼无法识别，如果没有其他元素识别，哪个是内容哪个是padding，需要用到开发者工具。</p><p>如果padding后面跟了不同的四个值，分别设置的是顺时针上右下左</p><p>如果只设置了两个或者三个值，还是上右下左，没写的那一面取对面的值，如上对下，右对左。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/90.png" alt="90"></p><p><b>一般加上border和padding后盒子大小会被撑开，那么如何固定盒子大小呢</b></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/91.png" alt="91"></p><p>加上box-sizing：border-box；</p><h2 id="去除默认内外边距"><a href="#去除默认内外边距" class="headerlink" title="去除默认内外边距"></a>去除默认内外边距</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/92.png" alt="92"></p><h2 id="版心居中"><a href="#版心居中" class="headerlink" title="版心居中"></a>版心居中</h2><p>版心就是网页的有效内容</p><p>margin： 0px auto；</p><p>auto=（用户页面水平总大小-内容水平大小）/2px</p><p>因为只要水平居中，所以加上auto自适应即可，上下的内边距设置为多少看实际需求（当设置为0，px单位可省略）</p><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/93.png" alt="93"></p><p>案例分析：</p><p>1-遵循从外到内，从上到下，先设置一个大盒子包含所有内容</p><p>2-用ul&gt;li&gt;a设置下面的超链接内容</p><p>3-新知识，利用ul{list-style:none；}去除无序列表的样式（每行前面的点点）</p><p>4-设置文字的样式，大小颜色等</p><p>我的代码</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">div</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 50px auto<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> dashed 1px #666<span class="token punctuation">;</span>            <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token comment">/* 注意这里要在div中加内边距,才有间隙,不是在h2中加 */</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">*</span><span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">h2</span><span class="token punctuation">&#123;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>            <span class="token property">padding-left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>            <span class="token property">padding-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">border-bottom</span><span class="token punctuation">:</span> dashed 1px <span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 一般交集选择器中标签选择器写最前面类选择器写后面，但这里是后代选择器 */</span>        <span class="token selector">.box ul</span><span class="token punctuation">&#123;</span>            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.box li</span><span class="token punctuation">&#123;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">border-bottom</span><span class="token punctuation">:</span> dashed 1px <span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.box a</span><span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>最新文章/New Ariticles<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>什么是css<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>体验javescript的魅力<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>网页前端工程师的梦想<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我每天需要学多久呢<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>你的压力是什么<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>jquery中的链式编程是什么<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考代码</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token comment">/* 清除标签默认的margin和padding */</span>    <span class="token selector">*</span> <span class="token punctuation">&#123;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>    <span class="token selector">body</span> <span class="token punctuation">&#123;</span>      <span class="token comment">/* 去除行高带来的默认间隙，完成精准布局 */</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.box</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>      <span class="token comment">/* background-color: pink; */</span>      <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 41px 30px 0<span class="token punctuation">;</span>      <span class="token comment">/* 自动内减 */</span>      <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.box h2</span> <span class="token punctuation">&#123;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 41px<span class="token punctuation">;</span>      <span class="token comment">/* background-color: pink; */</span>      <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>      <span class="token comment">/* 自动内减 */</span>      <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.box ul</span> <span class="token punctuation">&#123;</span>      <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.box ul li</span> <span class="token punctuation">&#123;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>      <span class="token property">padding-left</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>      <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px dashed #ccc<span class="token punctuation">;</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.box li a</span> <span class="token punctuation">&#123;</span>      <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>最新文章/New Articles<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京招聘网页设计，平面设计，php<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>体验javascript的魅力<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>jquery世界来临<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>网页设计师的梦想<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>jquery中的链式编程是什么<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意</p><p>1-分清楚你设置的是谁的内边距，谁的外边距。<br><a href="https://zhoudongqi.com/archives/a3b8894d.html" target=_blank>点我游览下一篇</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5&amp;CSS3_day04</title>
      <link href="archives/4db6e861.html"/>
      <url>archives/4db6e861.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML5-amp-CSS3-day04"><a href="#HTML5-amp-CSS3-day04" class="headerlink" title="HTML5&amp;CSS3_day04"></a>HTML5&amp;CSS3_day04</h1><h2 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h2><p>后代选择器（所有后代，儿子孙子等等）用空格，子代选择器（父子关系）用&gt;</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/50.png" alt="50"></p><p>选择器间用空格隔开<img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/51.png" alt="51"></p><h2 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h2><p>选择器间用逗号，隔开</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/52.png" alt="52"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/53.png" alt="53"></p><h2 id="交集选择器"><a href="#交集选择器" class="headerlink" title="交集选择器"></a>交集选择器</h2><p>1.交集选择器必须满足多个条件</p><p>2.选择器之间是紧挨著的，中间没有间隔字符</p><p><mark>3.书写时，标签选择器在前面，类选择器在后面</mark></p><p>4.由于id属性具有唯一性，一般ID选择器是不参与交集选择器的</p><p>5.当交集选择器都是标签选择器或者都是类选择器时，才可以互换位置</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/54.png" alt="54"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/55.png" alt="55"></p><h2 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h2><p>选择器：hover{}，任何标签都能添加伪类，如当前这个鼠标悬停出现样式</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/56.png" alt="56"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/57.png" alt="57"></p><h2 id="emmet语法"><a href="#emmet语法" class="headerlink" title="emmet语法"></a>emmet语法</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/58.png" alt="58"></p><p>为了更快的打代码</p><h2 id="背景属性"><a href="#背景属性" class="headerlink" title="背景属性"></a>背景属性</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/59.png" alt="59"></p><p>rgba的a取值卫0-1</p><h2 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/60.png" alt="60"></p><p>当盒子的大小大于图片，将自动用多个图片补齐</p><p>当只想出现一个图片怎么办呢？</p><p>1-设置盒子的大小和图片一样</p><p>2-背景平铺</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/61.png" alt="61"></p><p>repeat复制，平铺的意思</p><p>平铺的意思就是把区域沾满，默认为全部平铺，当x平铺则水平铺满</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/62.png" alt="62"></p><h2 id="背景位置"><a href="#背景位置" class="headerlink" title="背景位置"></a>背景位置</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/63.png" alt="63"></p><p>当水平垂直取值一样，可省略只写一个</p><p>默认取值为background-position： 0 0 ，当取值为像素px，则在坐标0 0 的基础上移动，如20px 60px则向右移动20px，向下移动60px</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/64.png" alt="64"></p><p>如果给的是负数，则向左和向上移动</p><h2 id="背景属性连写"><a href="#背景属性连写" class="headerlink" title="背景属性连写"></a>背景属性连写</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/65.png" alt="65"></p><p>这个书写顺序可以打乱，自动识别，不像font的属性连写必须按照style weight size family的顺序写</p><p>原因应该是font的这四个属性可能相似，不好自动识别出来，所以规定了顺序</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/66.png" alt="66"></p><p>position中数值不可以颠倒顺序，写center botton可以颠倒</p><h2 id="背景图和img插入图区别"><a href="#背景图和img插入图区别" class="headerlink" title="背景图和img插入图区别"></a>背景图和img插入图区别</h2><p>重要的图片，比如你卖的产品用img，用来装饰的用背景图</p><h2 id="元素的显示模式（块，行内，行内块）"><a href="#元素的显示模式（块，行内，行内块）" class="headerlink" title="元素的显示模式（块，行内，行内块）"></a>元素的显示模式（块，行内，行内块）</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/67.png" alt="67"></p><p>块元素，独占一行，可以设置宽和高，宽度默认与父级一样</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/68.png" alt="68"></p><p>行内元素不能设置宽高，你设置了宽高也没反应，只与内容大小相关</p><p><mark>行内块元素，一行能显示多个，设置宽高还能生效</mark></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/69.png" alt="69"></p><h3 id="元素显示模式的转换"><a href="#元素显示模式的转换" class="headerlink" title="元素显示模式的转换"></a>元素显示模式的转换</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/70.png" alt="70"></p><p>display显示展示，block块</p><h3 id="元素嵌套"><a href="#元素嵌套" class="headerlink" title="元素嵌套"></a>元素嵌套</h3><p>一般来说，大的可以套小的，如块元素里面可以有块与行内，行内不能嵌套块</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/71.png" alt="71"></p><p>p不能套和h1，h1也不能套p，因为一段文字不能即是段落，又是标题</p><p>同时也不能嵌套自己，如p套p，无意义、</p><p><mark>a可以嵌套任何标签，但不能套自己</mark></p><h2 id="css特性（继承与层叠）"><a href="#css特性（继承与层叠）" class="headerlink" title="css特性（继承与层叠）"></a>css特性（继承与层叠）</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/72.png" alt="72"></p><p>注意：控制文字的都可以继承，不是文字的都不能继承。</p><p>inherited继承</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/73.png" alt="73"></p><p>其中span没有设置css，但会继承父类div的css</p><p><b>注意</b></p><p>css中的height属性和width属性都是设置的标签，不是设置文字，设置文字的为font-size：xxpx，所以不能被继承</p><h3 id="继承的几个特殊"><a href="#继承的几个特殊" class="headerlink" title="继承的几个特殊"></a>继承的几个特殊</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/75.png" alt="75"></p><h3 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/76.png" alt="76"></p><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/77.png" alt="77"></p><p><b>多行输入快捷键</b></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/78.png" alt="78"></p><p>alt+shift+单击</p><p><mark>需求分析</mark></p><p>1-这是五个超链接加了宽高和背景颜色（a是行内元素无法设置宽高，所以要先设置为行内块元素）</p><p>2-去除了超链接的默认下划线，设置了字体为白色</p><p>3-字体居中，上下居中用行高line-height设置</p><p>4-伪类a：hover让鼠标移上去变成黄色</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">a</span><span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* yellow太花看不清楚就不设置了 */</span>        <span class="token selector">a:hover</span><span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>3<span class="token punctuation">,</span> 55<span class="token punctuation">,</span> 33<span class="token punctuation">,</span> .5<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>导航1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>导航2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>导航3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>导航4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>导航5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例二</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/79.png" alt="79"></p><p>需求分析</p><p>1-与第一个案例一样，只是背景改成了图片</p><p>2-如果需要每个a单独设置不同的颜色，利用类选择器多写几个就行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- &lt;!DOCTYPE html>&lt;html lang="en">&lt;head>    &lt;meta charset="UTF-8">    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge">    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0">    &lt;title>Document&lt;/title>    &lt;style>        a&#123;            background-color: red;            color: #fff;            width: 100px;            height: 50px;            display: inline-block;            text-align: center;            line-height: 50px;            text-decoration: none;        &#125;        /* yellow太花看不清楚就不设置了 */        a:hover&#123;            background-color: rgba(3, 55, 33, .5);        &#125;    &lt;/style>&lt;/head>&lt;body>    &lt;a href="">导航1&lt;/a>    &lt;a href="">导航2&lt;/a>    &lt;a href="">导航3&lt;/a>    &lt;a href="">导航4&lt;/a>    &lt;a href="">导航5&lt;/a>&lt;/body>&lt;/html> --></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">a</span><span class="token punctuation">&#123;</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>./picture/cgx.jpg<span class="token punctuation">)</span></span><span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>            <span class="token comment">/* 这个背景色照样生效，但是背景图片在颜色上面，所以被背景图片覆盖，无法显示 */</span>            <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* yellow太花看不清楚就不设置了 */</span>        <span class="token selector">a:hover</span><span class="token punctuation">&#123;</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>./picture/zhouyu.gif<span class="token punctuation">)</span></span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>五彩导航<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>五彩导航<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>五彩导航<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>五彩导航<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>五彩导航<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://zhoudongqi.com/archives/3ab1d8f7.html" target=_blank>点我游览下一篇</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5&amp;CSS3_day03</title>
      <link href="archives/d3d27dc2.html"/>
      <url>archives/d3d27dc2.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML5-amp-CSS3-day03-瑾年的学习记录"><a href="#HTML5-amp-CSS3-day03-瑾年的学习记录" class="headerlink" title="HTML5&amp;CSS3_day03-瑾年的学习记录"></a>HTML5&amp;CSS3_day03-瑾年的学习记录</h1><p><mark>day03（CSS01-基础选择器+字体文本样式）</mark></p><p>tips：</p><pre class="line-numbers language-htm" data-language="htm"><code class="language-htm">&lt;!doctype html&gt;&lt;!-- 感叹号和doctype不要分开 --&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>windows默认格式化代码快捷键alt+shift+l</p><p>nofollw标签有利seo，防止不相关链接分散权重</p><p>作者：author</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>nofollow的使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>autor<span class="token punctuation">"</span></span>  <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.zhoudongqi.com<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nofollow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>nofollow避免此标签分散本网站权重<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>video的poster属性，为视频添加未播放时的首页</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>nofollow的使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>autor<span class="token punctuation">"</span></span>  <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span>  <span class="token attr-name">muted</span> <span class="token attr-name">controls</span> <span class="token attr-name">poster</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/02.png<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.zhoudongqi.com/medias/video/ruiwen.mp4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 图片大小和视频大小不协调，后续可用css适应 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="css3"><a href="#css3" class="headerlink" title="css3"></a>css3</h2><p>1-常规有三种写法，行内式，嵌入式，外联式，不常用有引入式</p><p>2-选择器的作用就是去找到选择需要修改样式的标签</p><p>3-每个属性后需要加分号；</p><p>4-内嵌式css写在head中的style中，把css嵌在html里面了</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/22.png" alt="css写法和选择器-瑾年的学习记录"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/23.png" alt="css内嵌式-瑾年的学习记录"></p><p>5-外联式，把css专门写在一个文件中，在html中用link引入（此文件在不需要结构代码，直接写代码就行），link标签写在head中，不需要写在style里面，rel为relation关系的意思，stylesheet为样式表，此语句表示，引入一个css文件，它是本页面html的样式表。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/24.png" alt="css外联式-瑾年的学习记录"></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* css，这是标签选择器 */</span><span class="token selector">p</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>6-行内式，直接写在需要改变样式的标签语句内</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> blueviolet<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span> 稳定发挥，冲<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><mark>三种方法的使用场景</mark></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/25.png" alt="css三种引入场景-瑾年的学习记录"></p><h2 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h2><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/26.png" alt="四种基本选择器-瑾年的学习记录"></p><p>注意：标签选择器会选择所有的对应标签，给予样式，有时候不需要这样，就需要用到id和类选择器。</p><h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/27.png" alt="类选择器-HTML5&amp;CSS3"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 一个标签可以有多个类名，一个类也可以被多个标签调用--></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">            <span class="token comment">/* 定于类选择器 */</span>            <span class="token selector">.red</span><span class="token punctuation">&#123;</span>                <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token selector">.backg</span><span class="token punctuation">&#123;</span>                <span class="token property">background-color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--调用选择器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red backg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我有两个类名,类名间用空格隔开 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h3><p>id选择器和行内式css一样，常用为配合js使用</p><p>id选择器和类选择器使用相似，一个用#定义一个用.定义，调用分别为id=””和class=””,但每个标签的id像我们的身份证一样不能重复，虽然游览器中不同标签重复调用同一个id会都渲染，但是这在原则上是不能这样使用的，在js中也会出问题</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/28.png" alt="id选择器-瑾年"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/29.png" alt="id选择器代码与页面-瑾年"></p><h3 id="通配选择器"><a href="#通配选择器" class="headerlink" title="通配选择器"></a>通配选择器</h3><p>通配选择器就是*[css代码]可以选择所有的选择器，但一般情况下优先级权重也是最低的，范围越广的选择器，优先级权重越低（当有多个css修饰同一个内容，内容最终样式实现需要看这些选择器的权重高</p><p> 一般用来统一去除margin和padding</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/30.png" alt="通配符选择器-瑾年"></p><h2 id="文字样式"><a href="#文字样式" class="headerlink" title="文字样式"></a>文字样式</h2><p>当不设置，一般默认字号为16px</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/31.png" alt="文字样式说明-瑾年博客"></p><h3 id="fontweight"><a href="#fontweight" class="headerlink" title="fontweight"></a>fontweight</h3><p>取值为blod/700或者normal/400</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/32.png" alt="fontweight-瑾年的学习记录"></p><h3 id="fontstyle"><a href="#fontstyle" class="headerlink" title="fontstyle"></a>fontstyle</h3><p>文字的样式，正常，倾斜等</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/33.png" alt="字体样式-瑾年"></p><h3 id="font-family"><a href="#font-family" class="headerlink" title="font-family"></a>font-family</h3><p>windows默认微软雅黑，苹果默认苹方字体</p><p>字体的系列，比如宋体，黑体楷体等等。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/34.png" alt="常见字体-瑾年"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/35.png" alt="字体family-瑾年"></p><p>网页一般用无衬线字体系列</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/36.png"></p><p>可以设置多个字体用逗号隔开，当用户电脑没有第一个字体，就用第二个设置的字体，依此类推。</p><h3 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h3><p>当一个内容有多个同级别选择器给予样式，后面的覆盖前面的</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/37.png" alt="层叠性-瑾年"></p><h3 id="字体的复合属性"><a href="#字体的复合属性" class="headerlink" title="字体的复合属性"></a>字体的复合属性</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/38.png" alt="字体复合属性-瑾年"></p><p><mark>注意顺序。写错顺序不会生效，style weight size family</mark></p><p><mark>只能省略前面两个，后面的size 和family不能省略</mark></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/39.png" alt="瑾年Blog"></p><h2 id="文本的一些样式"><a href="#文本的一些样式" class="headerlink" title="文本的一些样式"></a>文本的一些样式</h2><h3 id="文本缩进与对齐"><a href="#文本缩进与对齐" class="headerlink" title="文本缩进与对齐"></a>文本缩进与对齐</h3><p>text-align：left/right/center不管是img还是span还是a超链接，还是文本，与表单input都可以使用这个css<mark>要给以上元素的父元素设置</mark></p><p>如h1的内容的父元素就是h1所以在h1标签中设置即可，但是img的内容就是img，所以要给包含img的元素设置才行，这也是判断单双标签的依据。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/40.png" alt="文字缩进-瑾年"></p><p>1em等于当前所设置的1个字符的大小，默认字符大小为16px，2em则为32px，如果人为修改字符大小为20px，那2em就是40px大小</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/41.png" alt="文字对齐-瑾年"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/42.png" alt="textalign不仅可用于文本-瑾年"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/43.png"></p><h3 id="文本修饰"><a href="#文本修饰" class="headerlink" title="文本修饰"></a>文本修饰</h3><p>underline，line-through，overline，none，line-through就是一条线贯穿文本，自然是删除线。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/44.png" alt="44"></p><h3 id="行高"><a href="#行高" class="headerlink" title="行高"></a>行高</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/45.png" alt="45"></p><p>注意：行高是文本高度+上下间距，如果填倍数取值，如1.5，这个1.5是当前字号大小的1.5倍。</p><p>如果font复合编写，size和line-height用/隔开</p><h3 id="谷歌开发者工具"><a href="#谷歌开发者工具" class="headerlink" title="谷歌开发者工具"></a>谷歌开发者工具</h3><p>element就是元素标签，style中就是css，想编辑css则点击一个内容再按tab键。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/46.png" alt="46"></p><p>当取消勾选，此行代码将失效，被删除线划掉的代码，说明在真实代码中这一行被注释了，或者被覆盖失效了。</p><h3 id="颜色的取值"><a href="#颜色的取值" class="headerlink" title="颜色的取值"></a>颜色的取值</h3><p>常用16进制表示颜色，甲方给设计稿过来，是什么颜色就什么颜色，复制粘贴即可，16进制为#开头，后面还有六位字母或者数字组成，每两位代表一个色值，分别对应rgb三个色值，如果两个数一样就可以缩写成一个，比如#00ee22可以写为#0e2</p><p><mark>rgba，rgb为三原色取0-255，a为透明度通道Alpha取0-1</mark></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/47.png" alt="47"></p><h3 id="margin-0-auto"><a href="#margin-0-auto" class="headerlink" title="margin 0 auto"></a>margin 0 auto</h3><p>可以实现盒子的居中</p><h3 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h3><p>实现需求</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/48.png" alt="48"></p><p>需求分析：</p><p>1-所有内容都需要居中与网页，则将所有元素标签放于一个div，此div用margin：0 auto；设置居中</p><p>2-标题使用h1</p><p>3-年份与腾讯科技的颜色都不相同，需要使用一个p，然后再用span将此两段文字分开，分别使用类选择器设置颜色（为什么不用p的标签选择器，因为下面还有很多段落一样需要使用到p标签，但是他们不需要变颜色）</p><p>4-收藏本文使用a的超链接，但它与一般的超链接不一样，没有下划线，则设置样式text-decoration：none</p><p>5-使用hr实现分割线，注意放到div内</p><p>6-四个段落都用类选择器，实现缩进，text-indent：2em（1em=此时的一个字符大小px）</p><p>注意：记得设置盒子div的大小，不然无法准确实现效果</p><p><strong>代码</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.timecolor</span> <span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #808080<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.jinniancolor</span> <span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #87ceeb<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.boxcenter</span><span class="token punctuation">&#123;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.content</span><span class="token punctuation">&#123;</span>            <span class="token property">text-indent</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>boxcenter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>自然评选改变科学<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>timecolor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2077年01月28日14:58<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jinniancolor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>瑾年科技<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>收藏本文<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            2019年，事件视界望远镜团队让世界首次看到了黑洞的样子。不过，研究人员公布的这张发光环形物体的图像并不是传统的图片，而是经过计算获得的。利用位于美国、墨西哥、智利、西班牙和南极地区的射电望远镜所得到的数据，研究人员进行了数学转换，最终合成了这张标志性的图片。研究团队还发布了实现这一壮举所用的编程代码，并撰文记录这一发现，其他研究者也可以在此基础上进一步加以分析。        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            这种模式正变得越来越普遍。从天文学到动物学，在现代每一项重大科学发现的背后，都有计算机的参与。美国斯坦福大学的计算生物学家迈克尔·莱维特因“为复杂化学系统创造了多尺度模型”与另两位研究者分享了2013年诺贝尔化学奖，他指出，今天的笔记本电脑内存和时钟速度是他在1967年开始获奖工作时实验室制造的计算机的1万倍。“我们今天确实拥有相当可观的计算能力，”他说，“问题在于，我们仍然需要思考。”        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            如果没有能够解决研究问题的软件，以及知道如何编写并使用软件的研究人员，一台计算机无论再强大，也是毫无用处的。如今的科学研究从根本上已经与计算机软件联系在一起，后者已经渗透到研究工作的各个方面。近日，《自然》（Nature）杂志将目光投向了幕后，着眼于过去几十年来改变科学研究的关键计算机代码，并列出了其中10个关键的计算机项目。        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            最初的现代计算机并不容易操作。当时的编程实际上是手工将电线连接成一排排电路来实现的。后来出现了机器语言和汇编语言，允许用户用代码为计算机编程，但这两种语言都需要对计算机的架构有深入的了解，使得许多科学家难以掌握。20世纪50年代，随着符号语言的发展，特别是由约翰·巴克斯及其团队在加州圣何塞的IBM开发的“公式翻译”语言Fortran，这种情况发生了变化。利用Fortran，用户可以用人类可读的指令来编程，例如x            = 3 + 5。然后由编译器将这些指令转换成快速、高效的机器代码。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><b>综合二</b></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/49.png" alt="49"></p><p>tips：</p><p>1-div就是用来网页布局的，会使用到无数次，最好用类选择器实现css</p><p>2-块元素div可以包含行内元素img等，行内元素不能包含块元素，有少许例外。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token comment">/* 可以通过给body标签设置背景颜色完成设置浏览器的背景颜色 */</span>    <span class="token selector">body</span> <span class="token punctuation">&#123;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> #f5f5f5<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.box</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 234px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>      <span class="token comment">/* 让box盒子div标签居中 */</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>      <span class="token comment">/* 让内部的img和文本类型的元素水平居中 */</span>      <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.pic</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 160px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.product</span> <span class="token punctuation">&#123;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.info</span> <span class="token punctuation">&#123;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #cccccc<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.price</span> <span class="token punctuation">&#123;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #ffa500<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./picture/zhouyu.gif<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>product<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>九号平衡车<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>成年人的玩具<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>price<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1999元<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：</p><p>1-margin: o auto;是让div盒子居中，不是让内容等居中</p><p>2-图片这些单标签使用text-align，必须给父级添加才生效（text-align类似的这些属性，谁用就相当于谁包含的内容实现这些属性效果，在老html中img是无闭口/的，图片并不被包含与img中，所以无法生效，需要给包含图片的父级添加；个人理解）<br><a href="https://zhoudongqi.com/archives/4db6e861.html" target=_blank>点我游览下一篇</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SEO严重错误纠正</title>
      <link href="archives/df5cfee9.html"/>
      <url>archives/df5cfee9.html</url>
      
        <content type="html"><![CDATA[<h1 id="SEO严重错误纠正"><a href="#SEO严重错误纠正" class="headerlink" title="SEO严重错误纠正"></a>SEO严重错误纠正</h1><p>我发现本网站在google，bing，搜狗都有排名，且靠前，为什么百度就一直不收录子页呢？主要原因是百度蜘蛛较少，而我的提交又有错误。</p><p>后发现后台百度蜘蛛返回了301，原因为<mark><a href="https://www.zhoudongqi.com/">瑾年的学习记录</a></mark>本站是https协议头，而我的站点地图sitemap与自动提交收录提交的都是http开头的链接，蜘蛛访问时就被重定向了。</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/mix/SEO_301.png" alt="蜘蛛返回301-瑾年的学习记录"></p><p><img src="https://www.zhoudongqi.com/medias/picture/new/mix/seo_sitemap.png" alt="站点地图-瑾年的学习记录"></p><p>更正：</p><p>1-将站点地图修改为https头</p><p>2-主动提交插件，修改配置，协议头也改为https</p><p>3-等待收录<br>注意：各大站长平台认证时，协议头也需要选中为https，百度还需要认证https</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/mix/seo_bd.png" alt="bd-https认证-瑾年的学习记录"></p>]]></content>
      
      
      <categories>
          
          <category> 网站运营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SEO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用SEO优化技巧提高网站排名</title>
      <link href="archives/bb5e895e.html"/>
      <url>archives/bb5e895e.html</url>
      
        <content type="html"><![CDATA[<h1 id="seo优化技巧"><a href="#seo优化技巧" class="headerlink" title="seo优化技巧"></a>seo优化技巧</h1><p><strong>如有错误，各位大佬帮忙在评论区指正，感谢~~~</strong></p><p><strong>SEO优化技巧</strong>重要：内容，友链，外链，关键词搜索后点击量</p><p>总结：</p><p>​    <mark>内容</mark>要丰富，高质量图文解释都有，必要时还要有视频，并且原创，一千字以上，将关键词2-8%写入内容，加锚文本（12个左右）做内链，合理利用h1与srong和图片的alt，不相关链接记得加上nofollow，尽量每天更新，不要长时间断更新；</p><p>​    <mark>友链</mark>互30-40个，不要互降权链接，也不要互他挂链超过50条的链接（他挂的越多，给你的pr权重越少）最好行业相关，权重排名越高越好，不相关问题也不大，但是给你导入的权重较低(主题敏感PR)，重中之中你要看他有没有给你链接加nofollow；不管友链还是锚文本外链，还是发的纯文本宣传，一定要给以文字说明，最好是你需要排名网站的标题或者关键词，不要是光秃秃的一个站点链接。</p><p>​    <mark>标题</mark>不要堆积，电脑搜索后都显示不完全；</p><p>​    <mark>外链</mark>可以发q群，空间，以及各种论坛等等，当你发了外链的页面被收录参与排名，即对你有有用，给你带来权重(生效周期为15-30天)，空间等那些虽然不能为你参与评分，但是能带来流量也可以（需要精准流量，用户打开页面有停留，不然打开就关反而对你不利）</p><p><mark>单链</mark>经济允许，你疯狂买就成，权重越高越好，给你带来蜘蛛和流量等等。</p><p><mark>点击率与停留</mark>网站流量越高，用户停留越久权重一般越高，用户停留搜索引擎就会知道你这个页面受用户喜欢，价值就越高，如果用户打开就关，或者没人访问说明没营养，就不会被推荐，这也是快排的基本原理。</p><p><mark>收录</mark>在没权重的时候，不会有蜘蛛爬取页面，你就需要自己去相应搜索引擎站点提交链接收录，没收录就不可能有排名和索引，一直不收录可以去tb消费一下子，他们通常通过蜘蛛池进行收录。</p><p><mark>HITS算法</mark>不整听不懂的，就是大量权威也好，不权威也好的网站挂上你的链接，显然这很难做到；那我们做第二点，挂上你关键词同搜的权威网站，如你的关键词是博客，你就挂博客搜索的第一页链接，如博客园，csdn等。</p><p><mark>本地优化</mark>你的服务器一定要好，不然蜘蛛来了根本爬不动东西，源码一定要简洁，设置robots和站点地图给蜘蛛一个导航，都能更好的爬取你的页面。</p><p><mark>量力而行</mark>那些指数高，同搜索上千万的词，竞争力巨大，一般人是做不上去的，老老实实做做长尾词即可。</p><p><mark>抓重点</mark>你做的是主站链接，内页收录与否与首页排名其实并没太大关系，你也不可能把大量内页做上排名的首页。</p><p><mark>TDK布局</mark>权重最高的是TITLE其次是keywords，再是description，如果你是新站想做排名，<strong>title最好精准，而且不要太多太长</strong>，DK同理，你越长虽然对应的东西越多，如”瑾年的学习记录blog的python和前端学习与网络安全以及如何网站排名”虽然他对应的多，但是搜索引擎不知道你究竟做的是什么东西，即使知道，用户搜索时你的权重也会被分散，从而根本不会展示在首页给用户看。（当然也有个例，这网站钱多，域名时间长等等)</p><p><mark>出图</mark>你会发现有的链接在搜索引擎搜索后，除了title和description还有一张图片，十分大气美观，两种方法，一去搜索引擎站点属性中提交，但是某d貌似必须关联小程序才有权限，二多在页面放上图片，且加上alt，设置为你的title名称</p><p><mark>子页标题</mark>子页标题一定要加上首页的主title，增加权重。</p><p><mark>随机应变</mark>不同行业，不同词的指数不同，竞争力也不同，相应的布局与提高排名的方法与侧重点就有些许不同，要懂得SEO的原理去判断与随机应变，不要照本宣科。</p><p><mark>域名</mark>最好要老域名，新域名排名很难做，一定要备案</p><p><mark>秘籍</mark>你就是要做新站，那就花钱把其他人高权重的网站通过301导入到你的新站，或者快排(快排周期在15-30天)，快排也是一种作弊手段，通常使用虚假的模拟用户点击来实现，当你不再使用快排，排名也会迅速下降，这和贷款做生意差不多，如果你觉得我排第一肯定会吸引很多人，内容够优质，停止购买快排也能保存原排名，只需要利用快排亮亮相，则是一种不错的方法。</p><p><mark>链接层级</mark>目录链接层级越深越不容易被百度蜘蛛爬取，也就不利于seo，所以现在还有什么no-category插件。</p><p>如jinnianx.com/a/b/c.html的seo是不如jinnianx.com/d/e.html的</p><p><mark>伪静态</mark>配置伪静态可以固定链接，有利于seo</p><p><mark>301重定向</mark>一般我们会主域名如zhoudongqi.com和<a href="http://www.zhoudonqi.com都开启访问同一个页面,但是搜索引擎会把它们看作两个页面去收录,就会分散权重,所以我们需要把一个重定向到另一个.一般(各大厂都是)把zhoudongqi.com重定向为www.zhoudonqi.com/">www.zhoudonqi.com都开启访问同一个页面，但是搜索引擎会把它们看作两个页面去收录，就会分散权重，所以我们需要把一个重定向到另一个。一般（各大厂都是）把zhoudongqi.com重定向为www.zhoudonqi.com</a></p><p><mark>智者务其实，当你进行了上述一系列优化，最重要的是每天学习，更新高质量内容</mark></p><p>​    </p><p>1-有收录才有排名，设置插件自动提交站点。</p><p>2-用户体验，与百度蜘蛛模拟用户体验,一般蜘蛛越多权重越高</p><p>3-优质内容，原创，标题和内容对应，文章丰富度高，图文结合，最好还要有视频，字数一千以上，关键词在文章中多次出现(密度在%2-%8；%=次数/文章字数)</p><p>4-设置网站地图sitemap.xml（.html/.txt）</p><p>5-主页超链接要多</p><p>6-代码与结构要简单</p><p>7-不要大面积修改TDK，百度会清除掉以往收录与蜘蛛抓取的百度快照，降权或被k站，本站大面积修改后，原收录全部消失。</p><p>8-核心关键词放首页，长尾关键词放内页</p><p>9-看广告位SEM数量，关键词指数，相关结果，与首页数量来判断关键词排名难度。</p><p>10-网站分为主页（主域名），栏目页（主域名/xxx），内页(栏目页内的链接)，主页权重最高；越难的，越想取得排名的关键词放首页</p><p>11-一个页面加不少于12个的锚文本，但也不是越多越好，可能被判定作弊</p><p><a href="www.zhoudongqi.com" target="_blank ">回到首页</a></p><p>12-发外链（搭配文字说明链接作用），在高权重网站发外链，同平台一天内不超过三个。如各类相关论坛，博客，也可以购买外链。</p><p>13-换高质量高权重友链，且同行业较好</p><p>14-nofollow标签，给其他不相干网站超链接加上nofollow，减少权重流失（通过js实现的全站所有外链添加nofollow属性对seo是没有什么作用的，必须自己平时养成加nofollow的习惯）</p><blockquote><p>JS（JavaScript）是一种客户端脚本语言，它在浏览器中执行。当搜索引擎爬取网页时，它们通常不会执行JS代码，而是仅仅分析HTML和CSS来确定网页的内容和结构。</p><p>当你使用JS来添加nofollow属性时，搜索引擎爬虫在抓取网页时并不会执行JS代码，因此它们无法获取到通过JS添加的nofollow属性。这意味着，如果你仅仅依赖JS来添加nofollow属性，搜索引擎爬虫将会忽略这些属性，从而对SEO没有任何作用。</p><p>为了确保nofollow属性对SEO有效，你需要在HTML代码中直接添加nofollow属性。这可以通过手动编辑HTML代码或使用服务器端脚本语言（如PHP）来实现。这样，当搜索引擎爬虫抓取网页时，它们会直接读取HTML代码，并理解其中的nofollow属性，从而正确处理链接。</p><p>因此，为了确保nofollow属性对SEO起作用，你需要养成在HTML代码中直接添加nofollow属性的习惯，而不是仅仅依赖JS来添加。</p></blockquote><p>15-robots，爬虫蜘蛛访问的第一个页面，告诉蜘蛛哪些页面能爬，哪些不准爬，可配合nofollw，按照自己意愿合理分配权重。</p><p>16-标题组合成一句话，字数不超过32，用“-”隔开</p><p>17-记得设置img的alt属性</p><p>18-合理使用h1标签，strong标签</p><p>19-设置404页面（不要通过js等自动回到首页，以为能增加点击量，其实可能被百度认为作弊，去留要由用户决定）</p><p>20-链轮</p><p>21-链接最好不超过三层，影响爬取。</p><p>22-不要将其他域名重定向到需要优化seo的域名，这种引流，会被判定作弊。</p><p>以上就是所有的SEO优化技巧——-瑾年的学习记录</p><p><img src="https://www.zhoudongqi.com/medias/picture/new/mix/seo_youhua.png" alt="链轮"></p>]]></content>
      
      
      <categories>
          
          <category> 网站运营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SEO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5&amp;CSS3_day0102</title>
      <link href="archives/a341b368.html"/>
      <url>archives/a341b368.html</url>
      
        <content type="html"><![CDATA[<p><strong>如有错误，各位大佬帮忙在评论区指正，感谢~~~</strong></p><h1 id="HTML5与CSS3的前端入门知识"><a href="#HTML5与CSS3的前端入门知识" class="headerlink" title="HTML5与CSS3的前端入门知识"></a>HTML5与CSS3的前端入门知识</h1><h2 id="标签缩写对应全称"><a href="#标签缩写对应全称" class="headerlink" title="标签缩写对应全称"></a>标签缩写对应全称</h2><table><thead><tr><th>常用HTML标签的英文全称及简单描述</th><th></th><th></th></tr></thead><tbody><tr><td>HTML标签</td><td>英文全称</td><td>中文释义</td></tr><tr><td>a</td><td>Anchor</td><td>锚</td></tr><tr><td>abbr</td><td>Abbreviation</td><td>缩写词</td></tr><tr><td>acronym</td><td>Acronym</td><td>取首字母的缩写词</td></tr><tr><td>address</td><td>Address</td><td>地址</td></tr><tr><td>alt</td><td>alter</td><td>替用(一般是图片显示不出的提示)</td></tr><tr><td>b</td><td>Bold</td><td>粗体（文本）</td></tr><tr><td>bdo</td><td>Direction of Text Display</td><td>文本显示方向</td></tr><tr><td>big</td><td>Big</td><td>变大（文本）</td></tr><tr><td>blockquote</td><td>Block Quotation</td><td>区块引用语</td></tr><tr><td>br</td><td>Break</td><td>换行</td></tr><tr><td>cell</td><td>cell</td><td>巢</td></tr><tr><td>cellpadding</td><td>cellpadding</td><td>巢补白</td></tr><tr><td>cellspacing</td><td>cellspacing</td><td>巢空间</td></tr><tr><td>center</td><td>Centered</td><td>居中（文本）</td></tr><tr><td>cite</td><td>Citation</td><td>引用</td></tr><tr><td>code</td><td>Code</td><td>源代码（文本）</td></tr><tr><td>dd</td><td>Definition Description</td><td>定义描述</td></tr><tr><td>del</td><td>Deleted</td><td>删除（的文本）</td></tr><tr><td>dfn</td><td>Defines a Definition Term</td><td>定义定义条目</td></tr><tr><td>div</td><td>Division</td><td>分隔</td></tr><tr><td>dl</td><td>Definition List</td><td>定义列表</td></tr><tr><td>dt</td><td>Definition Term</td><td>定义术语</td></tr><tr><td>em</td><td>Emphasized</td><td>加重（文本）</td></tr><tr><td>font</td><td>Font</td><td>字体</td></tr><tr><td>h1~h6</td><td>Header 1 to Header 6</td><td>标题1到标题6</td></tr><tr><td>hr</td><td>Horizontal Rule</td><td>水平尺</td></tr><tr><td>href</td><td>hypertext reference</td><td>超文本引用</td></tr><tr><td>i</td><td>Italic</td><td>斜体（文本）</td></tr><tr><td>iframe</td><td>Inline frame</td><td>定义内联框架</td></tr><tr><td>ins</td><td>Inserted</td><td>插入（的文本）</td></tr><tr><td>kbd</td><td>Keyboard</td><td>键盘（文本）</td></tr><tr><td>li</td><td>List Item</td><td>列表项目</td></tr><tr><td>nl</td><td>navigation lists</td><td>导航列表</td></tr><tr><td>ol</td><td>Ordered List</td><td>排序列表</td></tr><tr><td>optgroup</td><td>Option group</td><td>定义选项组</td></tr><tr><td>p</td><td>Paragraph</td><td>段落</td></tr><tr><td>pre</td><td>Preformatted</td><td>预定义格式（文本 ）</td></tr><tr><td>q</td><td>Quotation</td><td>引用语</td></tr><tr><td>rel</td><td>Reload</td><td>加载</td></tr><tr><td>s/ strike</td><td>Strikethrough</td><td>删除线</td></tr><tr><td>samp</td><td>Sample</td><td>示例（文本</td></tr><tr><td>small</td><td>Small</td><td>变小（文本）</td></tr><tr><td>span</td><td>Span</td><td>范围</td></tr><tr><td>src</td><td>Source</td><td>源文件链接</td></tr><tr><td>strong</td><td>Strong</td><td>加重（文本）</td></tr><tr><td>sub</td><td>Subscripted</td><td>下标（文本）</td></tr><tr><td>sup</td><td>Superscripted</td><td>上标（文本）</td></tr><tr><td>td</td><td>table data cell</td><td>表格中的一个单元格</td></tr><tr><td>th</td><td>table header cell</td><td>表格中的表头</td></tr><tr><td>tr</td><td>table row</td><td>表格中的一行</td></tr><tr><td>tt</td><td>Teletype</td><td>打印机（文本）</td></tr><tr><td>u</td><td>Underlined</td><td>下划线（文本）</td></tr><tr><td>ul</td><td>Unordered List</td><td>不排序列表</td></tr><tr><td>var</td><td>Variable</td><td>变量（文本）</td></tr></tbody></table><p>form 表单域——翻译：类型; 种类; 形式; 外表; 样子; 表格</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>1-HTML是标记语言，不是编程语言</p><p>2-HTML语言文件后缀可以是HTML和HTM，常用为HTML</p><p>3-HTML5的文档定义就是</p><p>// <!doctype html></p><p>不需要加“5”，不区分大小写</p><p>4-元素由标签和内容组成</p><p>5-标签一般是成对出现的，&lt; br&gt;与&lt; hr&gt; &lt; img&gt;这些单标签，根据最新标准，最好写为&lt; br/&gt;与&lt; hr/&gt; &lt; img/&gt;</p><p>6-标签与属性虽然没大小写要求，但最好写小写，属性后的值用双引号（个别属性值自带双引号，则用单引号）</p><p>7-通过元素是否需要包含内容，判断是单标签还是双标签，如p标签，需要包含内容则是双，hr单纯加一条下划，则是单标签。</p><p>8.一个标签可以有多个属性，属性间，属性与标签名字间用空格隔开</p><p>9.字符实体为分号结尾”；“如&amp;n bsp；</p><p>10.本地绝对路径的符号为\，绝对路径就是完全完整的一个路径，如E:\前端\HTML_CSS_CODE，而网站的绝对路径与其他相对路径等基本上是“/”</p><p>11.“./”表示相对路径当前文件的目录，”../“就是再向上一级，”./“可省略</p><p>12.width和height只设置一个，则等比缩放</p><p><mark>meta元素可提供有关页面的元信息（meta-information）</mark></p><p><strong>meta是html语言head区的一个辅助性标签。也许你认为这些代码可有可无。其实如果你能够用好meta标签，会给你带来意想不到的效果；meta标签的作用有：搜索引擎优化（SEO），定义页面使用语言，自动刷新并指向新的页面，实现网页转换时的动态效果，控制页面缓冲，网页定级评价，控制网页显示的窗口等！</strong></p><h2 id="VS插件与设置"><a href="#VS插件与设置" class="headerlink" title="VS插件与设置"></a>VS插件与设置</h2><p>1.LiveServer（实现编辑器中修改，网站不用刷新直接进行相应改变）</p><p>2.Zeal文档（各种语言的离线文档，为软件需在官网下载）</p><p>3.设置中”autosave”设置为”afterdelay”（自动保存代码，防止出现意外，也可配合LiveServer使用）</p><h2 id="VS快捷键"><a href="#VS快捷键" class="headerlink" title="VS快捷键"></a>VS快捷键</h2><p><ins>在设置中可自己设置</ins></p><p>1.”!+enter”生成HTML结构框架模板</p><p>2.”ctrl+/“注释</p><p>3.”alt+b”打开游览器运行当前页面</p><p>4.”ctrl+s”保存</p><p>5.tab缩进，shift+tab往回缩进</p><p>6.ctrl+x剪切</p><p>7.ctrl+d选中内容的下一个</p><p>8.向下复制行，shift+alt+⬇</p><p>9.alt+⬇将此行代码移动到下一行代码下</p><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><h3 id="导读"><a href="#导读" class="headerlink" title="导读"></a>导读</h3><h3 id="三大语言的大概用途"><a href="#三大语言的大概用途" class="headerlink" title="三大语言的大概用途"></a>三大语言的大概用途</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/webbz.png"></p><h3 id="HTML固定结构"><a href="#HTML固定结构" class="headerlink" title="HTML固定结构"></a>HTML固定结构</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/02.png"></p><h3 id="不同游览器渲染引擎"><a href="#不同游览器渲染引擎" class="headerlink" title="不同游览器渲染引擎"></a>不同游览器渲染引擎</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/01.png"></p><h3 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h3><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/03.png"></p><h3 id="综合案例①"><a href="#综合案例①" class="headerlink" title="综合案例①"></a>综合案例①</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>综合案例①<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>腾讯科技高级web前端开发岗位<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>职位描述<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>负责重点项目的前端技术方案和架构研发<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>岗位要求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>本科毕业，有前端经验，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>长得帅<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span>&lt;/        <span class="token comment">&lt;!-- 格式化标签em，strong这些都可以互相嵌套，p和h独占一行，img与超链接a与音乐audio与视频video都不独占       --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>HR<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- &lt;img src = "./picture/zhouyu.gif" alt="地址" title="工作地址">本地相对路径 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">"</span>https://www.zhoudongqi.com/medias/picture/new/jinnian/cgx.jpg<span class="token punctuation">"</span></span>  <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>冠希<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>工作地址<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>音乐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.zhoudongqi.com/audio/80000.mp3<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span> <span class="token attr-name">loop</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>歌曲<span class="token punctuation">"</span></span> <span class="token attr-name">autoplay</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>视频<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>video/街舞.mp4<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span> <span class="token attr-name">loop</span> <span class="token attr-name">muted</span> <span class="token attr-name">autoplay</span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 视频一般无法自动播放，加了属性也不行，因为游览器限制了，需要加muted消音属性才能自动播放 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://zhoudongqi.com/<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点我新页面跳转博客主页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://zhoudongqi.com/<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_self<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点我本页面跳转博客主页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意</strong></p><p><mark>h与p都是独占一行，audio与video与img都不是独占一行</mark></p><p><mark>title为鼠标悬停在控件上显示的文字提示，alt是图片无法显示时提示的文字,视频加了没用</mark></p><p><mark>一般无法自动播放视频，需要加上muted消音属性</mark></p><p><mark>a标签的target，当值为_blank则新页面打开，_self则本页面打开</mark></p><p><mark>超链接的href为超文本引用，hypertext reference，链接可以用””#”代替</mark></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/04.png"></p><h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>练习<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>40.6摄氏度:上海创出140年气象史上高温新纪录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>2021年07月27日 10:58:26 来源:新华网<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>P</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>新华网上海7月26日电（记者李荣）26日13时36分至47分这一时间段，上海徐家汇气象观测站测得当日最高温达40.6摄氏度。这是上海有气象记录以来140年的高温新纪录，打破了此前1934年创下的40.2摄氏度的历史极值。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>上海已经连续2天发出了最高等级的红色高温警报。上海中心气象台首席服务官满莉萍说，今年副热带高压强度特别强，对上海及江南地区的控制“实在太稳定了”，整个7月份基本上都处在它的势力范围之内。25日上海已出现了气象史上7月份“第四高”的高温值，这使得26日的“基础”气温就很高，超过了30摄氏度，然后不断地升温。此外，26日白天风小，又吹的是西南风，特别是在中午之后这一个最易出现高温的时段，光照又比较强，所以气温“直线飙升”，一举冲破历史极值，出现了“创纪录”的极端酷暑天。在上海历史上，出现40摄氏度以上极端高温的几率并不大。根据相关资料，中心城区徐家汇观测站140年来仅出现了5次记录，除了这一次的新纪录，还有就是1934年7月12日的40.2摄氏度；1934年8月25日、2009年7月20日、2010年8月13日的40摄氏度。由于气温实在太高，上海26日下午不少地区出现了热对流天气。气象台说，首先是浦东地区，下起了热雷雨。到15时05分，全市大部分地区出现了分散性的雷电活动和热雷雨，中心城区徐家汇等地都响起了隆隆的雷声。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><b>练习2</b></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>练习百度页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/logo_baidu.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>请填写你的信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>姓名:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入你的姓名<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>密码:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入密码<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>确定密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>确定密码<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>验证码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入验证码<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/yz.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我已阅读并接收<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>《百度用户协议》<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>犯错：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">1-起初<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>中少写了"/"导致没闭口，所有文字都变成了h12-忘记了meta的书写方法，教程https://www.w3school.com.cn/tags/tag_meta.asp3-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--其中en对应英文，zh-CN对应中文，如果设置的是英文，国内游览器识别到后，可能提示用户是否翻译此网站--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>4-忘记了head中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>的书写<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>列表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 有序列表 order list--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>周某<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>唐某<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>蒋某<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 无序unoder --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>周某<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>唐某<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>蒋某<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 自定义列表，define title  --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>周某<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>19岁<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>本科<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/05.png"></p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p><img src="https://www.zhoudongqi.com/medias/picture/new/HTML_CSS/06.png"></p><p>无序中ul也只能包含li，li中可嵌套任意内容</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/07.png"></p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- border是表格的边框，caption中文为说明文字，        字幕，法律文件的开端部分，为主标题，tr为行table_row，td为table_data_cell    th为表格里面的数据头，如姓名，年龄，性别等 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>亚洲富豪榜<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>          <span class="token comment">&lt;!-- thead,tbody,tfoot为表单的结构标签，对程序员没实际意义        最多让代码更加清晰，但可以让游览器渲染解释的更快 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>年龄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>财富<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>小周<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>25<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- rowspan为属性，行合并，colspan为列合并，span跨度; 范围 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">rowspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>3000000万<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>小唐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>26<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- &lt;td>3000000万&lt;/td> --></span>            <span class="token comment">&lt;!-- 合并单元格，保留上面的和左边的 ,但是不是跨结构合并            如小蒋的3000000万不能被合并--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tfoot</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>小蒋<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>26<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>3000000万<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tfoot</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/10.png"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/08.png"></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/09.png"></p><p><strong>caption为一个双标签，是表单的说明</strong></p><p><strong>rowspan和colspan是tr或者th的属性，用来合并，切不能跨结构体（thead，tfoot，tbody）</strong></p><h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><p>用途：登入，注册，搜索</p><p><strong>input是单标签，且不独占一行</strong></p><p><strong>文本框的常用属性placeholder(占位符)，给文本框添加提示字</strong></p><p><strong>multiple是type=“file”的常用属性，一次上传多个文件</strong></p><p><strong>input输入</strong></p><p><strong>checked属性为单选框和复选框等提供默认选中</strong></p><p><strong>radio属性单选项要与name属性结合使用，游览器才知道两个单选项中的关系</strong></p><p><strong>reset要与form表单域结合使用，才知道要重置哪些东西</strong></p><p><strong>当属性为type=”button”没有实际意义，后续配合js使用</strong></p><p><mark>value给按钮添加说明文字</mark></p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/11.png"></p><p><mark>radio之所以是单选框，因为老式收音机一次只能按一个按钮，其他按钮都会弹出来</mark></p><h4 id="单选框"><a href="#单选框" class="headerlink" title="单选框"></a>单选框</h4><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/12.png"></p><h4 id="button不只可以type-”button“还可以做标签"><a href="#button不只可以type-”button“还可以做标签" class="headerlink" title="button不只可以type=”button“还可以做标签"></a>button不只可以type=”button“还可以做标签</h4><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/13.png"></p><h4 id="在学了js后button标签的用途非常多，因为其他input中的submit，reset等都固定了，button可以多变"><a href="#在学了js后button标签的用途非常多，因为其他input中的submit，reset等都固定了，button可以多变" class="headerlink" title="在学了js后button标签的用途非常多，因为其他input中的submit，reset等都固定了，button可以多变"></a>在学了js后button标签的用途非常多，因为其他input中的submit，reset等都固定了，button可以多变</h4><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/14.png"></p><h4 id="表单综合代码"><a href="#表单综合代码" class="headerlink" title="表单综合代码"></a>表单综合代码</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- placeholder占位符，提示用户输入 --></span>    文本框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>输入账号<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    密码框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>输入密码<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>     <span class="token comment">&lt;!-- checked默认选中，需要与name属性结合才能实现多选一，不然都能选 --></span>    单选框女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    单选框男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    多选框    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- multiple属性，让文件上传一次可选中多个文件 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">multiple</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 重置需要结合form表单域来使用，这样reset才知道重置的哪些 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- value可以显示在客户端上给button提供名称 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>我是普通标签<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>我也是普通标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span>    下拉标签    <span class="token comment">&lt;!-- selected属性默认选中，不设置则为第一个option --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>衡阳<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>长沙<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">selected</span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>纽约<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>   文本域   <span class="token comment">&lt;!-- 用户右下角可拖动大小，在css中要禁止 --></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>   表单-lable标签   <span class="token comment">&lt;!-- 配合单标签使用，让除单标签外的元件也能选中标签 --></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>方法一,直接套上lable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>方法二，给表单配置id与lable的for属性配合使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex1<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>woman<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>woman<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex1<span class="token punctuation">"</span></span><span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>man<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>man<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/17.png"></p><h4 id="语义化标签"><a href="#语义化标签" class="headerlink" title="语义化标签"></a>语义化标签</h4><p>作用：布局</p><p><b>无语言标签</b></p><p><mark>无语意的span一行显示多个，div一行只显示一个，后续会多次用到</mark></p><p><b>有语言标签</b></p><p>多用于手机端的网页布局开发</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/15.png"></p><h4 id="字符实体"><a href="#字符实体" class="headerlink" title="字符实体"></a>字符实体</h4><p>常用只有一个&amp;n bsp</p><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/18.png"></p><h3 id="HTML综合训练"><a href="#HTML综合训练" class="headerlink" title="HTML综合训练"></a>HTML综合训练</h3><p><b>表格</b></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1000<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span><span class="token punctuation">></span></span>优秀学生信息表格<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>年纪<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>学号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>班级<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">rowspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>高三<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>周周<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>888<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>三年二班<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>唐唐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>666<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>三年二班<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>喵喵<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>999<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>三年二班<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tfoot</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>评语<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>国家栋梁<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tfoot</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/19.png"></p><p><b>表单</b></p><p>1-当单选框两个都给默认属性，默认后面一个</p><p>2-多选框可默认多个选项</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>        青春不常在，抓紧谈恋爱    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    昵称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入你的名称<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入你的密码<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    性别    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    出生日期:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">selected</span><span class="token punctuation">></span></span>2002<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>2001<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>2000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>年    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">selected</span><span class="token punctuation">></span></span>06<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>07<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>08<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>月    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">selected</span><span class="token punctuation">></span></span>21<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>22<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>23<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>日    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    喜欢的类型:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lab1e</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token punctuation">></span></span>阳光<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lab1e</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lab1e</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token punctuation">></span></span>活泼<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lab1e</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lab1e</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token punctuation">></span></span>独立<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lab1e</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lab1e</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>御姐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lab1e</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lab1e</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span> <span class="token punctuation">></span></span>爱探索<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lab1e</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lab1e</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>萝莉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lab1e</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    个人介绍:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>我承诺<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>年满18岁，单身<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>年满18岁，单身<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>年满18岁，单身<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>免费注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>重置<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/20.png"></p><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><p><b>注意</b></p><p>1-css的注释是/* */</p><p>2-html的标签属性写法与css不同，如html为type=”checkbox”，css为color：red；</p><h3 id="三种引入方式"><a href="#三种引入方式" class="headerlink" title="三种引入方式"></a>三种引入方式</h3><p><img src="https://zhoudongqi.com/medias/picture/new/HTML_CSS/21.png"></p><p><mark>后续内容请搜索标签前端工程师</mark></p><p><a href="https://www.zhoudongqi.com/tags/" target=_blank>点我搜索标签</a><br><a href="https://zhoudongqi.com/archives/d3d27dc2.html" target=_blank>点我游览下一篇</a></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>1-菜鸟教程<a href="https://www.runoob.com/html/html-tutorial.html">https://www.runoob.com/html/html-tutorial.html</a></p><p>2.W3C<a href="https://www.w3school.com.cn/">https://www.w3school.com.cn/</a></p><p>3.黑马<a href="https://www.bilibili.com/video/BV1Kg411T7t9">https://www.bilibili.com/video/BV1Kg411T7t9</a>?</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>静态注入网页请假</title>
      <link href="archives/d62e487b.html"/>
      <url>archives/d62e487b.html</url>
      
        <content type="html"><![CDATA[<p>网站为学校请假页面，只是本地的静态抓包注入，没有进行任何风险性操作</p><p>我没有找到意见bug等问题提交入口，请金智或相关人员看见后，尽快修复。</p><p>本人建议措施：网站将报文全部进行加密处理和加入时间戳验证。</p><p>1-设置抓包域名，打开canary抓包<br>2-访问请假页面<br>3-返回canary找到请假页面的包，长按注入，修改响应体（请假理由，时间什么的）<br>4-开启抓包，再次访问，已注入</p><p><video src="https://www.zhoudongqi.com/medias/video/vocation.mp4" width="300px" height="600px" controls="controls"></video></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 静态注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日志与公告</title>
      <link href="archives/810add95.html"/>
      <url>archives/810add95.html</url>
      
        <content type="html"><![CDATA[<p><strong>交流合作联系微信:RememberYourTowel，欢迎各大it，金融，法务等大佬~~~</strong></p><h2 id="如何访问本站"><a href="#如何访问本站" class="headerlink" title="如何访问本站"></a>如何访问本站</h2><p>百度等各大引擎搜索“瑾年的学习记录”或“瑾年blog”即可</p><p>站点为<a href="http://www.zhoudongqi.com/">www.zhoudongqi.com</a></p><h2 id="站点子域名"><a href="#站点子域名" class="headerlink" title="站点子域名"></a>站点子域名</h2><p>1-todolist.zhoudongqi.com</p><h2 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h2><p>1-云产品，不管是服务器，数据库，储存空间还是域名一定要货比三家，寻找折扣，不要原价购买。</p><h3 id="2021-11-20"><a href="#2021-11-20" class="headerlink" title="2021.11.20"></a>2021.11.20</h3><p>因为误操作，导致在域名注册商godaddy上架了此域名jinnian.life的出售，注册商直接修改了此域名的dns服务器，进而无法连接到正确的ip地址，导致无法访问，于2021.11.21发现并更新dns服务器。</p><h3 id="2021-11-22"><a href="#2021-11-22" class="headerlink" title="2021.11.22"></a>2021.11.22</h3><p>将域名 jinnian.life 从godaddy注册商转出到阿里云，并购买域名zhoudongqi.com , jinnianx.com，jinianx.cn，与4g4h8m80g轻量服务器。</p><h3 id="资源防盗链，cdn-存储桶等"><a href="#资源防盗链，cdn-存储桶等" class="headerlink" title="资源防盗链，cdn,存储桶等"></a>资源防盗链，cdn,存储桶等</h3><p>破站服务器资源还能顶住，先不加。 </p>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AxureRP8.0</title>
      <link href="archives/908fbb9b.html"/>
      <url>archives/908fbb9b.html</url>
      
        <content type="html"><![CDATA[<h1 id="AxureRP8-0的基础教程"><a href="#AxureRP8-0的基础教程" class="headerlink" title="AxureRP8.0的基础教程"></a>AxureRP8.0的基础教程</h1><p>axurerp8/9较难，但是能实现更复杂的功能，如果想快速写一个网站或者app原型，可以使用墨刀。</p><h2 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h2><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109231742913.png"></p><p>干嘛的？</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109231745747.png"></p><p>基本词汇</p><p>1-低保真-就是比草稿图高级一些的设计稿，也叫线框图（黑白灰）</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109231753977.png"></p><p>2-高保真-在低保真的基础是，把页面加上色彩等，还原成用户看到的真实页面，也叫设计稿。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109231754524.png"></p><p><mark>如何汉化？</mark></p><p>打开参考资料的网盘，axurexp8.0与汉化包都在，将lang文件拖到axture的安装目录</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109242015345.png"></p><h2 id="软件组成"><a href="#软件组成" class="headerlink" title="软件组成"></a>软件组成</h2><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109242012510.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109242017738.png"></p><p>样式中可以调控件的相关属性，预览效果点发布或者预览</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109242103094.png"></p><p>点空白处可以添加背景图片，背景图片也有很多属性选择，比如是重复还是填充还是水平重复等</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109242105941.png"></p><h2 id="案列"><a href="#案列" class="headerlink" title="案列"></a>案列</h2><h3 id="163邮箱登入案例"><a href="#163邮箱登入案例" class="headerlink" title="163邮箱登入案例"></a>163邮箱登入案例</h3><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;iconfont.cn图标库ctrl+z也可返回上一步操作按住ctrl加点击元件选中，调节居中对齐，左右对齐等选中多个元件，按下ctrl+g或者右键选择组合，可把多个元件组合到一起在更多里面有裁剪，去除图片等不用的部分颜色里面有析取颜色的笔，可析取屏幕上任意颜色当你嫌麻烦不想做，可以直接复制图片上去代替元件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109251206943.png"></p><p>shift+点击可同时选择多个控件</p><p>选择元件，上下左右键可调整元件的x，y轴位置（一个单位），按住shift+上下左右，一次可移动10个单位。</p><p>ctrl+拖拽控件可复制一个一模一样的控件</p><h3 id="安卓机器人图标"><a href="#安卓机器人图标" class="headerlink" title="安卓机器人图标"></a>安卓机器人图标</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109251344828.png"></p><p>结合分开，合并去除，相交等是元件中的布尔运算。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109251553482.png"></p><p>右键元件里有交互功能设置</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109251745367.png"></p><p>case事件是可以直接复制粘贴到另一个元件中的</p><p>元件中的一个变化（比如用户鼠标点击）可以添加多个事件case（如显示与隐藏），但是必须有条件判断，无条件判断则只能设置一个case（可以把多个动作放到一个case中），否则会提示用户选择case。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109261915719.png"></p><p>可以看到在属性里鼠标单击有两个case</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109261915895.png"></p><h3 id="充值页面"><a href="#充值页面" class="headerlink" title="充值页面"></a>充值页面</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109262002376.png"></p><p>选中可多次使用，如何是禁用，则进行第一次case后，后续动作都无效。</p><h3 id="tab切换"><a href="#tab切换" class="headerlink" title="tab切换"></a>tab切换</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109271308611.png"></p><p><mark>一定要注意理解元件的层次，上一层的元件会覆盖下一层的元件</mark></p><p>1-在最底层加一个红色的矩形</p><p>2-倒数第二层加白色矩形作为选中滑块</p><p>3-再上一层添加矩形，填写文字（设置交互选中状态字体变红）</p><p>4-添加热区在最上层，点击热区（添加交互，点击则选中对应文字矩形，文字矩形中字体也就变红，再添加让滑块移动到指定位置）</p><p>5-将三个矩形设置选中项</p><p>ps：第一个矩形开始即要在属性栏设置为选中状态，不然无法变色。</p><h3 id="二级菜单"><a href="#二级菜单" class="headerlink" title="二级菜单"></a>二级菜单</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109271551686.png"></p><p>1-创造两个矩形，一个作为menue一个作为submenu</p><p>2-将矩形打成一个组合</p><p>3-给组合添加事件，鼠标移入显示子菜单矩形，移出隐藏即可。</p><h3 id="广告载入"><a href="#广告载入" class="headerlink" title="广告载入"></a>广告载入</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109271556916.png"></p><p><mark>case中的动作是分步执行的，先执行最先添加的，再执行后面的</mark></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109271606956.png"></p><p>步骤</p><p>1-设置主页面，也就是软件页面（设置元件载入，主页面载入自动弹出广告元件）</p><p>ps:尽量使用元件载入时，不要使用页面使用时，因为页面使用时，无法直接复制粘贴case。</p><p>2-设置遮挡，纯黑色，透明的调成百分之50（起到软件弹广告主页面一般会变暗作用）</p><p>3-设置广告</p><p>4-设置关闭广告按键（设置点击事件，点击将广告，遮挡，与关闭广告键全部隐藏）</p><h3 id="广告轮播"><a href="#广告轮播" class="headerlink" title="广告轮播"></a>广告轮播</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109271641107.png"></p><p>1-设置广告图片三张并命名好识别</p><p>2-设置三个圆点（用元件椭圆形，按住shift可以等比缩小，就不会变成椭圆）</p><p>3-圆点设置初始颜色，第一个默认选中，设置选中交互变色（用于区分当前选中那个圆点）</p><p>4-设置圆点点击事件（将对应图片至于顶层，再将三个圆点置顶）</p><p>5-把三个圆点设置选项组（作用是选中一个圆点，另外两个圆点默认不选中）</p><h3 id="path展开与收缩"><a href="#path展开与收缩" class="headerlink" title="path展开与收缩"></a>path展开与收缩</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109271956560.png"></p><p>这里可以自己创建一个初始模板，类似idea的代码初始模板，一打开自动生成这个初始页面。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109271920417.png"></p><p>1-将主页面图片拉上去</p><p>2-将五个图标移动到主页面图层下面</p><p>3-用椭圆元件制作主菜单，椭圆内打一个+号，点击主菜单弹出那五个图标，用鼠标点击移动事件即可（提前记录好坐标）</p><p>4-椭圆设置点击旋转45度，达到识别效果，再复制一个椭圆2点击椭圆1则将椭圆2置顶，点椭圆2则将椭圆1置顶，点击椭圆2则五个图标移动收回到原坐标</p><h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109271936268.png"></p><p>当有判断条件，可以出现多个case</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109271948497.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109271948039.png"></p><p>1-使用表单元件，下拉列表框</p><p>2-添加三个选项</p><p>3-给下拉列表框添加点击事件，三个case分别将对应图片置顶图层即可</p><h3 id="账号密码登入判断"><a href="#账号密码登入判断" class="headerlink" title="账号密码登入判断"></a>账号密码登入判断</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109272031369.png"></p><p>1-首先用两个文本框，在属性中给予提示句（请输入账号和请输入密码）</p><p>2-添加两个文本段落，提示失败和成功，在未登入前都隐藏。</p><p>2-再用按钮元件，写判断条件，成立则显示登入成功，不成立则显示失败。</p><h2 id="动态面板是什么？"><a href="#动态面板是什么？" class="headerlink" title="动态面板是什么？"></a>动态面板是什么？</h2><p><mark>作用是app页面间的无缝跳转，如从登入页面跳转到软件首页</mark></p><p>动态面板都从坐标0.0开始</p><p>只有页面和动态面板才有拖动事件</p><p>建议不勾选自动调整尺寸大小</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109272256058.png"></p><p>通俗说，动态面板最上层的有穿透性，可以控制动态面板外的元件，<mark>在主页面也只显示动态面板最上层的层级</mark>，动态面板各层级间互不影响，它的作用是实现动态页面里面的层级页面跳转（通过设置页面状态动作），从而让app页面跳转更加连贯。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109272305779.png"></p><p>预览后state2是不显示在主页的</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109272306873.png"></p><h2 id="动态面板案例"><a href="#动态面板案例" class="headerlink" title="动态面板案例"></a>动态面板案例</h2><h3 id="登入升级版（动态页面层级跳转）"><a href="#登入升级版（动态页面层级跳转）" class="headerlink" title="登入升级版（动态页面层级跳转）"></a>登入升级版（动态页面层级跳转）</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109272325061.png"></p><p>将登入的事件添加鼠标点击，则将zhuye层级调到最前显示（即设置状态的动态面板）</p><h3 id="轮播"><a href="#轮播" class="headerlink" title="轮播"></a>轮播</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110081513303.png"></p><p>1-将三张图片设置为动态面板的三个state</p><p>2-设置三个椭圆元件，设置点击事件，点击后选中椭圆（再设置选中变红的交互），并将对应state面板状态</p><p>3-设置下一张与上一张元件，并隐藏（用户鼠标移入再显示），通过载入事件隐藏，移入事件显示</p><p><mark>升级版</mark></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110081516016.png"></p><p>区别：椭圆元件也通过设置动态面板状态实现</p><p>1-将三个椭圆设置为一个动态面板，三个state对应三张图片的三个state</p><p>2-其余的大同小异</p><p>3-设置画面自动转换选中case中状态面板的向前，后循环即可，dots无需动画，下一张选向左移入，上一张相反。</p><p>注意：上一张与下一张的元件要建立在主动态面板的state1上，不然图片一转换，元件都没了，充分理解各元件在那一层。</p><h3 id="抽屉导航"><a href="#抽屉导航" class="headerlink" title="抽屉导航"></a>抽屉导航</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110082012451.png"></p><p>1-做好首页面，一个矩形，再加上一个红矩形做状态栏，再加上爱心标记，并都选中设置动态面板</p><p>2-将导航页面x轴设置为-280，点击爱心，弹出灰色遮罩，移动导航页面到x0，y0</p><p>3-设置点击页面，导航x再移动到-280，隐藏遮罩</p><p>4-利用一个矩形先隐藏，和导航页面一起选中设置动态面板，设置拖动事件，拖动则动态面板x到-280，实现左拖动返回。</p><p>ps：注意遮罩等与其他元件的先后层级顺序，如何遮罩在运行后在所以元件上方，那后面就直接无法运行了。</p><h3 id="带判断条件的抽屉导航"><a href="#带判断条件的抽屉导航" class="headerlink" title="带判断条件的抽屉导航"></a>带判断条件的抽屉导航</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110100950585.png"></p><p>1-设置两个矩形元件分别做为主页面和导航页面，并一起设置为动态面板</p><p>2-因为要有拖动事件，所以必须是页面或者动态面板，所以把主页面蓝色设置一个动态面板</p><p>3-设置拖动事件</p><p>4-设置左上角矩形为菜单，点击则跳出导航页，设置点击事件即可。</p><p>5-再设置一个矩形文字为红色，当点击左上角矩形，先判断文字是红则主页面动态面板移动（右移），则显示出了导航页，再设置矩形文字为绿，设置判断，如果文字是绿，则面板移动回去，挡住导航页。</p><p>ps：设置好动态面板的名字，防止选择错页面，导致错误，记好动态面板原xy位置</p><p><mark>与上一个区别是，这个可以点击菜单栏返回</mark></p><h3 id="苹果手机接听页面"><a href="#苹果手机接听页面" class="headerlink" title="苹果手机接听页面"></a>苹果手机接听页面</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110101023795.png"></p><p>1-分别设置接听页面图片，挂断页面图片，电话图标图片，滑动接听文字图片</p><p>2-将四元件打成动态面板，再将电话图片打成动态面板（需要拖动事件，必须面板或者页面）</p><p>3-在电话两边设置两面墙，电话移动时碰撞到右墙则设置事件动态面板跳转到挂断图片，左墙则电话回到拖动原位置（防止电话图标出左界，必须通过移动时事件设置，不能通过拖动时，因为拖动是用户操作，不能这样交互事件与元件）</p><p>ps：通过设置case条件，元件范围，接触。</p><p>墙体不能隐藏，因为隐藏则无法接触，将透明度都设置为0即可</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110101031367.png"></p><p>4-设置拖动结束，电话图标会到原位置（防止图标停在中间，与苹果手机接听实际不符，不美观）</p><p>5-设置拖动时，”滑动来接听文字“逐渐隐藏（3000ms左右）</p><h3 id="动画轮播"><a href="#动画轮播" class="headerlink" title="动画轮播"></a>动画轮播</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110101215629.png"></p><p>1-设置点击下一张上一张元件轮播动态面板状态</p><p>2-新知识，动态面板状态改变时事件case，设置隐藏和等待</p><p>3-再设置动态面板的左右拖动事件，轮播动画。</p><h3 id="猎豹游览器"><a href="#猎豹游览器" class="headerlink" title="猎豹游览器"></a>猎豹游览器</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110101941825.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110101945044.png"></p><h2 id="病态效果"><a href="#病态效果" class="headerlink" title="病态效果"></a>病态效果</h2><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110102022568.png"></p><p><mark>简而言之，就是死循环的意思，比如先一个正方形元件，设置点击则移动x的10个单位，然后再设置元件移动时事件，则出现一个死循环</mark></p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110102127698.png"></p><p>新知识：</p><p>1-跳转内页，case里有打开链接选项，选择你要打开的页面即可</p><p>2-全局变量，当页面跳转后，控件就会刷新回到初始页面，怎么保持先前的变化呢？用全局变量</p><p>在case中可以设置。</p><p>3-首先点击蓝色，设置动态面板状态为蓝色页，红色同理（看见页面转换就想到动态面板），并分别设置变量值为red和blue</p><p>4-设置载入时事件，加case判断变量是blue就设置动态面板状态为蓝色，red则红色，于是实现了先前变化的保存。</p><h3 id="局部变量和函数"><a href="#局部变量和函数" class="headerlink" title="局部变量和函数"></a>局部变量和函数</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110111713132.png"></p><p>点击fx跳出内置的函数选择，也可以自己写函数，局部变量独立于一个元件，记录它的状态等。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110111747793.png"></p><p>获取日期等函数可加条件判断，如果函数值等于多少，则将元件文本修改为自定义内容等。其他函数同理</p><h3 id="获取实时时间"><a href="#获取实时时间" class="headerlink" title="获取实时时间"></a>获取实时时间</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110112303724.png"></p><p>1-设置两个矩形打成动态面板</p><p>2-设置载入时动态面板循环（再设置一次元件文字等于当前时间函数，防止打开页面第一瞬间没记录时间）</p><p>3-设置面板状态时case，分别赋予动态面板的两个state时间即可（面板1s改变一次，也获取1s时间）</p><p><mark>方法二</mark></p><p>利用病态效果循环</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110112327201.png"></p><p>1-设置一个文本框（只有文本框有文字改变时事件）</p><p>2-设置载入获取事件赋予文本框</p><p>3-设置文本改变时事件，再获取赋予，形成循环。</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><pre class="line-numbers language-py" data-language="py"><code class="language-py">https:&#x2F;&#x2F;www.axure.com.cn&#x2F;5068函数指南大全<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="元件函数"><a href="#元件函数" class="headerlink" title="元件函数"></a>元件函数</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110141915177.png"></p><p>1-创建一个元件</p><p>2-设置点击事件</p><p>3-点击fx选择函数</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110141916573.png"></p><p>4-设置你想要的，这里有很多，如上图的this.windth就是将元件文字设置为窗口宽度</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110141917869.png"></p><h3 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110141919102.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110141919602.png"></p><h3 id="进度条制作"><a href="#进度条制作" class="headerlink" title="进度条制作"></a>进度条制作</h3><p>利用病态效果</p><p>1-设置一个矩形作为加载条</p><p>2-设置上传按钮，设置点击事件，改变矩形尺寸<mark>因为设置数值的话，就固定了无法修改，所以利用函数设置，每次加1</mark></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110141927419.png"></p><p>3-设置矩形（加载条）尺寸改变时事件，和上传点击事件形成循环</p><p>4-添加条件，当尺寸大于一定值就停止，防止出界。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110141930747.png"></p><p>5-病态效果循环记得设置等待，不然会出问题，毕竟axure不是全能</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110141935852.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110141936888.png"></p><h3 id="动态面板的两个特性"><a href="#动态面板的两个特性" class="headerlink" title="动态面板的两个特性"></a>动态面板的两个特性</h3><p>滚动条与页面固定</p><p>滚动条就是可以向下滑动显示为显示的文字等，固定就是此元件不会随页面滑动消失，一直是在顶层显示。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110141948153.png"></p><p>1-此操作都需要将元件转为动态面板</p><p>2-首先创造一个元件，打为动态面板，再右击选择固定到游览器即可</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110141951184.png"></p><p>3-滚动条，首先设置一个元件为动态面板，勾选掉动态面板自动调整页面大小（勾选的话超出的文字也会自动显示）</p><p>4-在动态面板上加入段落控件（超出动态面板大小，为了看滚动条效果）</p><p>5-右击选择滚动条为自动即可</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110141953105.png"></p><h3 id="顶部固定条"><a href="#顶部固定条" class="headerlink" title="顶部固定条"></a>顶部固定条</h3><p>滑动到一定位置再弹出，和页面固定一样，就是加了个条件</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110142045724.png"></p><p>一定要选择显示动态面板，不要选择显示矩形，不然无效，因为动态面板才能固定和滚动滑轮。</p><h3 id="回到顶部"><a href="#回到顶部" class="headerlink" title="回到顶部"></a>回到顶部</h3><p>设置点击事件，滚动到锚链接即可</p><h3 id="替换敏感词"><a href="#替换敏感词" class="headerlink" title="替换敏感词"></a>替换敏感词</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110142055740.png"></p><p>利用替换函数即可</p><p><mark>此外还要数学函数如比较大小计算加减乘除，字符串函数字母变大，布尔函数等大同小异不演示</mark></p><h2 id="中继器"><a href="#中继器" class="headerlink" title="中继器"></a>中继器</h2><p>中继器就是设置一个模板，然后有类似数据库表的东西，将表内数据自动填充到模板，设置了多少个值就会呈现多少相同的东西。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110161438334.png"></p><p>笔记</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110161051259.png"></p><p>步骤</p><p>1-选择元件中继器，点击，添加数据</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110161438615.png"></p><p><mark>模板是垂直还是水平，有没有间隔等，在样式中可调</mark></p><p>2-设置你需要显示的模板，如你设置了名字，和qq，就用两个标题元件接收，照片用图片接收</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110161054195.png"></p><p>3-设置事件，将对应值赋予模板，数据表内有四个数据，页面就输出了第一张图的四个模板</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110161055083.png"></p><h3 id="中继器排序"><a href="#中继器排序" class="headerlink" title="中继器排序"></a>中继器排序</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110161439767.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110161439374.png"></p><p>1-设置点击元件，添加中继器事件即可</p><h3 id="中继器筛选"><a href="#中继器筛选" class="headerlink" title="中继器筛选"></a>中继器筛选</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110161439621.png"></p><p>1-添加筛选条件即可，用给文本框一个变量给用户选择，也可以直接固定选择</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110161440849.png"></p><h3 id="中继器翻页"><a href="#中继器翻页" class="headerlink" title="中继器翻页"></a>中继器翻页</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110161449073.png"></p><p>设置现在页面即可，一页显示几个数据可以在case中调，也可以在中继器样式中调，我只有四个数据，每页选择1最多只能选择四页（用户选择页数跳转，与筛选同理用变量接收即可）</p><h3 id="评论案例"><a href="#评论案例" class="headerlink" title="评论案例"></a>评论案例</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110161503278.png"></p><p>1-通过数据集中的添加行为，中继器添加行数，增加中继器行数，即可以增加一个模板。</p><p>2-当输入内容，名字，点击提交事件，评论增加一行，再从元件中取出（case事件，评论文本等于发布内容矩形的文本，或者在中继器中直接用变量接收）数据得以显示。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110161507711.png"></p><p>还要删除行，更新行，都是大同小异。</p><h2 id="其他知识点"><a href="#其他知识点" class="headerlink" title="其他知识点"></a>其他知识点</h2><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202110161550945.png"></p><p>1-内联框架即在一个框架里，可包含其他网站，视频，图片等，axure不支持视频音乐，在前端中可以。</p><p>如下</p><pre class="line-numbers language-none"><code class="language-none">&lt;iframe src&#x3D;&quot;https:&#x2F;&#x2F;zhoudongqi.com&#x2F;&quot; frameborder&#x3D;&quot;0&quot; width&#x3D;&quot;800&quot; height&#x3D;&quot;600&quot;&gt;&lt;&#x2F;iframe&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><iframe src="https://www.jinnian.life/" frameborder="0" width="800" height="600"></iframe><p>2-本网站即为响应式布局，手机与电脑访问布局不同，自适应布局就是根据游览器页面当前大小，选择布局，在工具栏的视图中可设置。</p><p>3-母版就相当于一个封装好的模块和函数，可直接被调用。</p><p>注意：</p><p>1-如果要跳转另一个动态面板，注意要隐藏本页面，或者在页面排序中另一个动态面板排在本页面前面，不然就一直显示不出来，问题找都找不到。</p><h2 id="实践项目"><a href="#实践项目" class="headerlink" title="实践项目"></a>实践项目</h2><h3 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h3><p>需要axure原型源码的联系我即可。</p><h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><p><video  width="500px" controls src="https://www.zhoudongqi.com/medias/video/rp_yanshi.mp4"></video></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>页面实现有多种方法，重在学会使用软件，灵活变通，找出最简单的方法。</p>]]></content>
      
      
      <categories>
          
          <category> UI设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AxureRP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大学中计算机网络的一些基础知识</title>
      <link href="archives/e255a10a.html"/>
      <url>archives/e255a10a.html</url>
      
        <content type="html"><![CDATA[<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>王道考研<a href="https://www.bilibili.com/video/BV19E411D78Q">https://www.bilibili.com/video/BV19E411D78Q</a></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学课程 </tag>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSP实用基础入门教学</title>
      <link href="archives/aceb1eca.html"/>
      <url>archives/aceb1eca.html</url>
      
        <content type="html"><![CDATA[<h1 id="JSP实用基础入门教学"><a href="#JSP实用基础入门教学" class="headerlink" title="JSP实用基础入门教学"></a>JSP实用基础入门教学</h1><h2 id="1-基础语法"><a href="#1-基础语法" class="headerlink" title="1-基础语法"></a>1-基础语法</h2><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>哈哈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>&lt;%--jsp自己的隐藏注释，客户端看不到--%>java中的注释，客户端也看不到/*   java的多行注释，客户端看不到*/<span class="token comment">&lt;!-- 能看到--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三种scriptlet代码"><a href="#三种scriptlet代码" class="headerlink" title="三种scriptlet代码"></a>三种scriptlet代码</h3><p>一般情况下不在jsp中写java代码，因为耦合度太高，现在都追求高内聚，低耦合。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109212231006.png"></p><h3 id="include动静态包含"><a href="#include动静态包含" class="headerlink" title="include动静态包含"></a>include动静态包含</h3><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>B站<a href="https://www.bilibili.com/video/BV1W64y1C7N8?p=2">https://www.bilibili.com/video/BV1W64y1C7N8?p=2</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学课程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea的基础使用方法--瑾年Blog</title>
      <link href="archives/e8bb5609.html"/>
      <url>archives/e8bb5609.html</url>
      
        <content type="html"><![CDATA[<h1 id="idea的基础使用方法"><a href="#idea的基础使用方法" class="headerlink" title="idea的基础使用方法"></a>idea的基础使用方法</h1><p><mark>有理解错误欢迎大佬评论指正</mark></p><p style="color:red"> 文件-设置-键盘映射可以查询所有快捷键</p><p style="color:blue"> 快捷键无效是因为与电脑中其他软件快捷键冲突</p><p>1，alt+enter打开可能的代码修改建议，ctrl+f1可查看错误警告说明，再按一次可展开详细说明。<img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211112278.png"></p><p>错误说明</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211245946.png"></p><p>2，按两下shift或者ctrl+shift+A打开操作搜索</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211115318.png"></p><p>3，ctrl+q查看类文档，ctrl+shift+i查看文本光标处符号定义</p><p>文档</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211122770.png"></p><p>定义</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211239584.png"></p><p>4，idea提供代码补全，按ctrl+space（空格），这里因为此快捷键与切换输入法冲突，则按ctrl+shift+space</p><p>4.1按ctrl+shift+enter可以补全语句，列如补全末尾的’;’与一些变量。</p><p>4.2在需要查看有关静态变量或者方法的建议，按两下ctrl+space</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211130928.png"></p><p>5，ctrl+w选中单词等</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211135990.png"></p><p>6，ctrl+/ 注释，也可选中多行注释</p><p> <img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211136782.png"></p><p>7，ctrl+d向下复制任意行，ctrl+y删除，其实没啥用，复制粘贴一样</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211137127.png"></p><p>8，重新排列方法ctrl+shift+上/下箭头，重新排列行alt+shift+上/下箭头</p><p>9,收起与展开代码 ctrl+’-‘与ctrl+’=’</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211154187.png"></p><p>10,ctrl+alt+t快捷使用环绕，列如一些if，while，try语句，ctrl+alt+delete可解开操作</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211201384.png"></p><p>11，alt+j，ctrl+alt+shift+j多选同一个光标选中符号，多用于整体替换</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211203882.png"></p><p>12.后缀补全，在语句后加一个’.’，选中你需要的语句，自动补全</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211209073.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211211637.png"></p><p>13.语句补全，ctrl+shift+enter，自动补全格式，如输入if再按此快捷键，补全中括号与大括号等。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211212883.png"></p><p>14，ctrl+space显示补全建议，然后选中选项按tab补全，这里是替换补全，与直接enter不同，enter是插入。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211215370.png"></p><p>15，重命名字段shift+f6，全部替换</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211217603.png"></p><p>16，统一提取变量与修改ctrl+alt+v</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211219948.png"></p><p>17,<mark>当你记不得一些重构快捷键，ctrl+alt+shift+t可以开启重构菜单</mark></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211224240.png"></p><p>18，代码格式（有时没反应，大概率是与qq或者网易云等软件热键冲突，修改下热键就好了）</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211231935.png"></p><p>19，方法签名</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211235543.png"></p><p>20，ctrl+f查询当前，ctrl+q替换当前，ctrl+shift+f查询文件中，ctrl+shift+q替换文件中</p><p>21，文件结构</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109211301811.png"></p><p>22，ctrl+b打开函数声明，ctrl+e查看最近的文件</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub打不开</title>
      <link href="archives/d12ff440.html"/>
      <url>archives/d12ff440.html</url>
      
        <content type="html"><![CDATA[<h1 id="Github打不开怎么办？"><a href="#Github打不开怎么办？" class="headerlink" title="Github打不开怎么办？"></a>Github打不开怎么办？</h1><h2 id="打不开的原因"><a href="#打不开的原因" class="headerlink" title="打不开的原因"></a>打不开的原因</h2><p>1-GitHub的ip服务经常变化，当它变化后，与我们本机原先记录的解析ip不一样，因为dns服务器被墙，我们得不到最新的ip，自然就打不开了。</p><p>使用站长工具等获取ip在站长之家输入GitHub网址，查询到目前的有效ip用ip打开即可，也可以配置到本地hosts，就能用域名打开，不过ip再次变化又要修改。</p><p>2-完全被运营商墙了，你获得ip也没用，那么就得换个网络试试，比如wifi换流量，还是不行就得科学上网。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>注意下面的给的ip是我目前有效的，但是这个ip是变化的，你必须自己看当前的对应最新ip</p><p> <strong>一、找到github.com域名解析的ip地址。</strong></p><p>在浏览器中打开如下地址：<a href="https://sites.ipaddress.com/github.com/">https://sites.ipaddress.com/github.com/</a></p><p>在网页下方三分之一处可以找到github.com对应的ip地址。</p><p>记下github.com对应的ip：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token number">140.82</span><span class="token number">.113</span><span class="token number">.4</span>    github<span class="token punctuation">.</span>com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>二、找到github.global.ssl.fastly.net网址解析的ip地址</strong></p><p>在浏览器中打开如下地址：<a href="https://ip.tool.chinaz.com/github.global.ssl.fastly.net">https://ip.tool.chinaz.com/github.global.ssl.fastly.net</a></p><p>在网页中找到github.global.ssl.fastly.net对应的ip地址。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token number">157.240</span><span class="token number">.1</span><span class="token number">.33</span>    github<span class="token punctuation">.</span>global<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span>fastly<span class="token punctuation">.</span>net<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>三、确定静态资源对应的ip地址</strong></p><p>在浏览器中打开如下网址：<a href="https://ip.tool.chinaz.com/assets-cdn.github.com">https://ip.tool.chinaz.com/assets-cdn.github.com</a></p><p>在网页中找到静态资源对应的ip地址：</p><p>记下静态资源对应的ip地址：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token number">185.199</span><span class="token number">.108</span><span class="token number">.153</span>    assets<span class="token operator">-</span>cdn<span class="token punctuation">.</span>github<span class="token punctuation">.</span>com<span class="token number">185.199</span><span class="token number">.109</span><span class="token number">.153</span>    assets<span class="token operator">-</span>cdn<span class="token punctuation">.</span>github<span class="token punctuation">.</span>com<span class="token number">185.199</span><span class="token number">.110</span><span class="token number">.153</span>    assets<span class="token operator">-</span>cdn<span class="token punctuation">.</span>github<span class="token punctuation">.</span>com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="四、修改系统中的hosts文件"><a href="#四、修改系统中的hosts文件" class="headerlink" title="四、修改系统中的hosts文件"></a><strong>四、修改系统中的hosts文件</strong></h1><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/githubip.png"></p><p>Ubuntu系统：sudo vim /etc/hosts<br>Windows系统：打开 C:\Windows\System32\drivers\etc 找到hosts文件</p><p>在底部加入前三步获得的内容，即：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token number">140.82</span><span class="token number">.113</span><span class="token number">.4</span>       github<span class="token punctuation">.</span>com<span class="token number">157.240</span><span class="token number">.1</span><span class="token number">.33</span>       github<span class="token punctuation">.</span>global<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span>fastly<span class="token punctuation">.</span>net<span class="token number">185.199</span><span class="token number">.108</span><span class="token number">.153</span>     assets<span class="token operator">-</span>cdn<span class="token punctuation">.</span>github<span class="token punctuation">.</span>com<span class="token number">185.199</span><span class="token number">.109</span><span class="token number">.153</span>     assets<span class="token operator">-</span>cdn<span class="token punctuation">.</span>github<span class="token punctuation">.</span>com<span class="token number">185.199</span><span class="token number">.110</span><span class="token number">.153</span>     assets<span class="token operator">-</span>cdn<span class="token punctuation">.</span>github<span class="token punctuation">.</span>com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 保存退出。重启浏览器，就可以正常访问github.com了。</p><p>以后再不好使就是这些网址更新了，再改就行。</p><p>ps：直接用ip打不开，是因为一个服务器可能绑定多个域名，它不知道你访问哪一个，而一个域名同一时间段只能有一个ip（可能有多个ip但是是轮流使用，同时间只有一个ip）</p><p>4.保存hosts文件后，快捷键Win+r，输入cmd回车，进入控制台后输入ipconfig /flushdns刷新DNS</p><p><strong>最直接的方法就是科学上网。</strong>但是有时候科学后，在cmd等控制台里运行项目，要下载访问github的资源（不是npm等下载，就是直接会访问github那种），但是照样访问不了（明明科学了，浏览器能访问GitHub，cmd等控制台就是不行），我也不知道什么原理，但这种情况下，用修改本地host的方法就可以访问了。</p>]]></content>
      
      
      <categories>
          
          <category> 实用小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何获取他人位置ip</title>
      <link href="archives/ca1f9928.html"/>
      <url>archives/ca1f9928.html</url>
      
        <content type="html"><![CDATA[<h1 id="如何获取他人的实时位置"><a href="#如何获取他人的实时位置" class="headerlink" title="如何获取他人的实时位置"></a>如何获取他人的实时位置</h1><p><strong>如有错误，各位大佬帮忙在评论区指正，感谢~~~</strong></p><h2 id="1-打QQ电话"><a href="#1-打QQ电话" class="headerlink" title="1-打QQ电话"></a>1-打QQ电话</h2><p>如果你有对方QQ，对方也在线，给他打一个QQ电话，再用fd或wireshark或火绒剑（火绒安全提供的安全分析工具），进行抓包，选中tcp流，即可看到对方ip地址（QQ电话的tcp未通过腾讯服务器中转），记得添加过滤，不然信息流太多，无法判断。</p><p>ps：无需接通</p><h2 id="2-点击网站"><a href="#2-点击网站" class="headerlink" title="2-点击网站"></a>2-点击网站</h2><p>让他点击你的网站，你从后台看下记录就成，简单明了。</p><h2 id="3-精准ip地址查询"><a href="#3-精准ip地址查询" class="headerlink" title="3-精准ip地址查询"></a>3-精准ip地址查询</h2><p>这里它用的都是官方api</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">https://www.sojson.com/ip/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-不得使用"><a href="#4-不得使用" class="headerlink" title="4-不得使用"></a>4-不得使用</h2><p>找黑产产业链，违法通过内部职员社工查询，这是违法行为。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 定位ip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一次浅的社工</title>
      <link href="archives/5cef4ea5.html"/>
      <url>archives/5cef4ea5.html</url>
      
        <content type="html"><![CDATA[<h2 id="中国公民的隐私安全应该如何防护？"><a href="#中国公民的隐私安全应该如何防护？" class="headerlink" title="中国公民的隐私安全应该如何防护？"></a>中国公民的隐私安全应该如何防护？</h2><p>为了规避审查，大部分业务通过外网聊天软件，如telegram等传播，甚至有黑警通过公安内部非法查询进行牟利，还有银行职员，社保局工作人员等等各种有相关查询权限的人，利用此黑产赚钱，这都是违法的奉劝大家<strong>遵循法律法规，切勿以身试法</strong>，逆天而行。可以不用，但不能没有Privacy is gone</p><blockquote><p>违法人员提供的相关服务：微信QQ好友提取，开房同住，手机号查户籍，全家户口户籍信息，姓名查身份证，名下房产，手机定位，身份证使用记录（包含飞机火车开房等等），身边关联人员，银行流水/个人资产，快递收件地址，银行卡冻结原因，婚姻纪录，手机通话纪录，手机机主信息，公司法人股东，车辆行驶轨迹等等等等</p></blockquote><p>查询信息包括车牌号码，开房信息，qq老密，户籍sfz，各大网站密码，q群关系，手机机主，贴吧，微博，lol，快递地址（各大商城如jd流出），facebook等等等等，视频中库的信息量一百多G已是黑产中的九牛一毛，而且这些都是免费的库子。</p><h2 id="黑商向外的部分裤"><a href="#黑商向外的部分裤" class="headerlink" title="黑商向外的部分裤"></a>黑商向外的部分裤</h2><p><img src="https://www.zhoudongqi.com/medias/picture/mix/1.png" alt="1"></p><p>这些是目前市面上常见的查询库</p><p><img src="https://www.zhoudongqi.com/medias/picture/mix/2.png" alt="2"></p><p>腾讯200g数据内容如下</p><p><img src="https://www.zhoudongqi.com/medias/picture/mix/3.png" alt="3"></p><p>库子都是已经被下载的数据，已经无可挽回损失，可恶的是那些黑产人员还提供付费查询，利用一些没有职业道德法律意识的银行，移动等等平台的职员进行高价实时查询服务，严重危害了公民的隐私安全。</p><p>2022  </p><p>1-学习通所有大学生信息在相应违法网站开价10w（第二天tg机器人红鼻子就已经拿到数据，并供免费查询）</p><p>2- 202207红鼻子销号，但是又诞生了形形色色各种机器人。</p><p>3-2022-06/07 上海公安被脱裤，所有近十亿条报案人相关信息被开价130w</p><p>网络空间安全以及公民隐私安全已经成为我国需要重点防护的对象。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KALI攻击_DNS污染</title>
      <link href="archives/c7821acb.html"/>
      <url>archives/c7821acb.html</url>
      
        <content type="html"><![CDATA[<p><strong>虚拟机的网络记得配置好，不然扫不到host主机。</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">0.23 zTY:/ 复制打开抖音，看看【瑾年的作品】用dy当个图床# CTF https://v.douyin.com/MQ4aPqR/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><iframe src="//player.bilibili.com/player.html?aid=716641342&bvid=BV1FX4y1A7Z2&cid=372071089&page=1" allowfullscreen="allowfullscreen" width="80%" height="600px" scrolling="no" frameborder="0" ></iframe>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KALI攻击_DNS污染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>瑾年的一些前端工程师学习资料</title>
      <link href="archives/a2ab0f17.html"/>
      <url>archives/a2ab0f17.html</url>
      
        <content type="html"><![CDATA[<h1 id="瑾年的一些前端工程师学习资料"><a href="#瑾年的一些前端工程师学习资料" class="headerlink" title="瑾年的一些前端工程师学习资料"></a>瑾年的一些前端工程师学习资料</h1><h2 id="学习视频"><a href="#学习视频" class="headerlink" title="学习视频"></a>学习视频</h2><p>1-<a href="https://www.bilibili.com/video/BV1D7411J71b">英语语法全程</a></p><p>2- <a href="https://www.bilibili.com/video/BV1YB4y1N76a">JS李立超</a></p><p>3- <a href="https://www.bilibili.com/video/BV1R7411F7JV">千峰python700集</a></p><p>4- <a href="https://www.bilibili.com/video/BV1YE411D7nH">操作系统</a></p><p>5- <a href="https://www.bilibili.com/video/BV1fx411X7BD">MYSQL基础</a></p><p>6-   <a href="https://www.bilibili.com/video/BV18J411W7cE">JAVA基础知识</a></p><p>7- <a href="https://www.bilibili.com/video/BV1XJ411X7Ud">HTML%CSS</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习资料 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python的一些入门基础知识</title>
      <link href="archives/3242eca1.html"/>
      <url>archives/3242eca1.html</url>
      
        <content type="html"><![CDATA[<h1 id="python的一些入门基础知识"><a href="#python的一些入门基础知识" class="headerlink" title="python的一些入门基础知识"></a>python的一些入门基础知识</h1><h2 id="p1-Python的介绍"><a href="#p1-Python的介绍" class="headerlink" title="p1-Python的介绍"></a>p1-Python的介绍</h2><p>python的特点<a href="http://c.biancheng.net/view/7748.html">http://c.biancheng.net/view/7748.html</a></p><p><mark>可移植性，各个平台能运行，运行快（基于c语言），简单易学，面向对象也能面向过程，可扩展性（能用c和c++编写，然后在python程序中使用，让运行速度更快隐藏算法），可嵌入性能把python嵌入c程序中当脚本使用，非常丰富的库（在libs中)</mark></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#输入成绩判断等级：</span> cj<span class="token operator">=</span><span class="token builtin">float</span> <span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入你的成绩："</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> cj<span class="token operator">>=</span><span class="token number">90</span> <span class="token keyword">and</span> cj<span class="token operator">&lt;=</span><span class="token number">100</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"优秀"</span><span class="token punctuation">)</span><span class="token keyword">elif</span> cj<span class="token operator">>=</span><span class="token number">70</span> <span class="token keyword">and</span> cj<span class="token operator">&lt;</span><span class="token number">90</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"良好"</span><span class="token punctuation">)</span><span class="token keyword">elif</span> cj<span class="token operator">>=</span><span class="token number">60</span> <span class="token keyword">and</span> cj<span class="token operator">&lt;</span><span class="token number">70</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"及格"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"你要努力了"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="p2-环境pycharm等安装"><a href="#p2-环境pycharm等安装" class="headerlink" title="p2-环境pycharm等安装"></a>p2-环境pycharm等安装</h2><h3 id="p2-Python安装"><a href="#p2-Python安装" class="headerlink" title="p2-Python安装"></a>p2-Python安装</h3><p><a href="https://mp.weixin.qq.com/s/4oWzRIn0sasfrxwpli_4hw">https://mp.weixin.qq.com/s/4oWzRIn0sasfrxwpli_4hw</a></p><p>尽量不要中文路径。</p><p>pip使用教程（下载标准库外的库）</p><p><a href="https://www.cnblogs.com/songzhixue/p/11296720.html">https://www.cnblogs.com/songzhixue/p/11296720.html</a></p><p>也可以直接在设置-项目-python解释器中点+安装库</p><h3 id="Pycharm安装"><a href="#Pycharm安装" class="headerlink" title="Pycharm安装"></a>Pycharm安装</h3><pre class="line-numbers language-py" data-language="py"><code class="language-py">https<span class="token punctuation">:</span><span class="token operator">//</span>mp<span class="token punctuation">.</span>weixin<span class="token punctuation">.</span>qq<span class="token punctuation">.</span>com<span class="token operator">/</span>s?__biz<span class="token operator">=</span>MzI3NzI1MzY4Mw<span class="token operator">==</span><span class="token operator">&amp;</span>mid<span class="token operator">=</span><span class="token number">2247492904</span><span class="token operator">&amp;</span>idx<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>sn<span class="token operator">=</span><span class="token number">0970650063d724b9c251848a2e5789ad</span><span class="token operator">&amp;</span>chksm<span class="token operator">=</span>eb6bbe74dc1c3762518dbeb3bc2813ca8da339bfc014bf897fc2450d431f5a29343ceccfbbe4<span class="token operator">&amp;</span>scene<span class="token operator">=</span><span class="token number">178</span><span class="token operator">&amp;</span>cur_album_id<span class="token operator">=</span><span class="token number">1786174076420472834</span><span class="token comment">#rd</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>cd命令</strong></p><pre class="line-numbers language-ht" data-language="ht"><code class="language-ht">https:&#x2F;&#x2F;jingyan.baidu.com&#x2F;article&#x2F;6079ad0ec0145b28ff86db88.html输入cd..为返回上一级输入d：为进入d盘，其他盘同理输入cd d：1\2\3即进入d盘的1文件夹中的2文件夹中的3文件夹，主要不可以直接跳盘，比如现在在c盘，直接cd d：&#x2F;1&#x2F;2&#x2F;3，必须先到d盘输入dir可显示当前级有的文件和文件夹（有dir的是文件夹，文件会直接显示大小）输入文件夹部分名字，再按tab键可补全文件名按上数字键盘旁边的上箭头，可以出现原先输入的命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>###开发环境介绍</p><p><strong>venv与直接建立项目的区别</strong></p><p>venv建立项目是创造一个新的环境，库与标准库等是分开的，如当你接私活爬虫的requests库需要用2.0版本，而公司项目用的是1.0版本，如果不用venv虚拟隔开，就会冲突。</p><p>第三方库可以在文件，设置，venv项目中添加</p><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/p1.png"></p><h3 id="Pycharm"><a href="#Pycharm" class="headerlink" title="Pycharm"></a>Pycharm</h3><p><strong>快捷键</strong></p><p><mark>快捷键失效，可能是与其他软件冲突，或者安装了vim的插件，在设置中的插件中给vim卸载了就行了，或是是键盘被锁定，按fn+win解开</mark></p><pre class="line-numbers language-py" data-language="py"><code class="language-py">https<span class="token punctuation">:</span><span class="token operator">//</span>blog<span class="token punctuation">.</span>csdn<span class="token punctuation">.</span>net<span class="token operator">/</span>cuomer<span class="token operator">/</span>article<span class="token operator">/</span>details<span class="token operator">/</span><span class="token number">81534140</span>https<span class="token punctuation">:</span><span class="token operator">//</span>www<span class="token punctuation">.</span>cnblogs<span class="token punctuation">.</span>com<span class="token operator">/</span>sui776265233<span class="token operator">/</span>p<span class="token operator">/</span><span class="token number">10200809.</span>html可以在设置里面下载设置你习惯的编辑器快捷键，本人用windows选项crtl<span class="token operator">+</span><span class="token operator">/</span>注释ctrl<span class="token operator">+</span>alt<span class="token operator">+</span>l格式化代码ctrl<span class="token operator">+</span>d复制当前行到下一行ctrl<span class="token operator">+</span>y删除当前行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注释shift+/，#为注释，···  ···前后三个点多行注释。</p><p>明白venv与普通建立项目的区别，vene重新虚拟了一个环境，一般项目使用，学习阶段不用勾选，因为占用资源。</p><p>文件重命名在refactor重构里面</p><p>光标在函数上，按Ctrl再鼠标点击，可以看到函数底层定义</p><p>win+r打开运行菜单，snippingtool系统截图工具</p><p>mspaint是画图工具</p><p><mark>在文件（file）-&gt;设置（setting）-&gt;键盘映射(keymap)中也可以查找各种快捷键</mark></p><h3 id="如何汉化"><a href="#如何汉化" class="headerlink" title="如何汉化"></a>如何汉化</h3><p>点击左上角file，找到设置settings 找打插件plugins，再右边的搜索框输入chinese 插件安装后，点击应用Apply，再重启软件即可</p><h2 id="p3-基础"><a href="#p3-基础" class="headerlink" title="p3-基础"></a>p3-基础</h2><h3 id="小知识"><a href="#小知识" class="headerlink" title="小知识"></a>小知识</h3><pre class="line-numbers language-none"><code class="language-none">a &#x3D; 1b &#x3D; 2print(a,b,100)#结果为1 2 100，print可以多个输出，而且可以直接带已知数,下面是print函数定义print(&quot;-&quot;*20)#结果为二十个&quot;-&quot;号--------------------，别问为什么，就是这样设置的#如果是数字和字符串做乘法运算，会将这个字符串重复多次。print()中整形也不能与字符串拼接，字符串双引号和单引号都可以。end&#x3D;&quot;&#x2F;n&quot;即语句输出完最后加一个换行，sep&#x3D;&quot;:&quot;即每个输出间用&quot;:&quot;隔开如print(1,2,3,sep&#x3D;&quot;:&quot;),输出1:2:3​&#96;&#96;&#96;def print(self, *args, sep&#x3D;&#39; &#39;, end&#x3D;&#39;\n&#39;, file&#x3D;None): # known special case of print    &quot;&quot;&quot;    print(value, ..., sep&#x3D;&#39; &#39;, end&#x3D;&#39;\n&#39;, file&#x3D;sys.stdout, flush&#x3D;False)        Prints the values to a stream, or to sys.stdout by default.    Optional keyword arguments:    file:  a file-like object (stream); defaults to the current sys.stdout.    sep:   string inserted between values, default a space.    end:   string appended after the last value, default a newline.    flush: whether to forcibly flush the stream.    &quot;&quot;&quot;    pass&#96;&#96;&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="变量命名"><a href="#变量命名" class="headerlink" title="变量命名"></a>变量命名</h3><p>python中直接a = 100，A = ‘ABC’即可，不需要int和string什么的，会自动帮我们定义。</p><pre class="line-numbers language-none"><code class="language-none">money &#x3D; 200type(money)#看money的类型print(type(money))#现在是intmoney &#x3D; 20.2print(type(money))#现在是floatmoney &#x3D; &#39;1万&#39;print(type(money))#现在是str字符串，在引号里面就是字符串，单引号双引号都可以。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1-分大小写<br>2-由字母，数字，下划线，其他的特殊符号不行，不能数字开头。<br>3-格式错误可运行，有灰色波浪线，可用中文，但会黄色警告。<br>4-不能使用关键字。<br>5-最好见名知意<br>6-小驼峰开头第一个字母全部小写如getNameByLine,但python最好用下划线，如get_name_by_line<br>7-大驼峰，每个字母大写GetNameByLine（在面向对象的类名中使用）</p><h3 id="数据类型与转换"><a href="#数据类型与转换" class="headerlink" title="数据类型与转换"></a>数据类型与转换</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109181228282.png"></p><p>单引号双引号三个引号就是字符串类型，小数就是float型等等</p><p>三个引号可保留格式输出字符串，如鹅鹅鹅诗歌的格式都保留了</p><p>当字符串中需要有引号可以这样</p><pre class="line-numbers language-none"><code class="language-none">message &#x3D; &quot;&#39;abcdefg&#39;&quot;message &#x3D; &#39;&quot;abcdefg&quot;&#39;但是不能message &#x3D; &#39;ab“cd&#39;efg”这样efg”就没有与之对应，语法出错<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109181251048.png"></p><pre class="line-numbers language-none"><code class="language-none">输入money等于10解决方法 print（int（money）+1000），即使money是字符也能准确转成对应的数字进行计算，结果为1010或者解决方法 print（money+str（1000））把1000变成字符串，进行拼接，结果为100010<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109181256996.png"></p><p>input输入的默认是字符串类型，赋值后变量是字符串。</p><p>字符串可以转int但必须是整数，如果是浮点数如1.11就会报错，如果是int型如字符串“1”，就会转为整型1</p><p>int型可随便转成str型</p><p>浮点数和str可以互相随便转换</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109181309222.png"></p><p>布尔类型转int，true就是1，false就是0，int转布尔，除了0或者空字符串是false，其他都是true。</p><h3 id="赋值与输出"><a href="#赋值与输出" class="headerlink" title="赋值与输出"></a>赋值与输出</h3><pre class="line-numbers language-none"><code class="language-none">a &#x3D; b &#x3D; c &#x3D; 5#可d&#x3D;&quot;dddd&quot;a,b,c,d&#x3D;5,5,5,&quot;ddd&quot;#可print(a,b,c,d)print(&quot;%daaaaaaaa      %d%d%s&quot; %(a,b,c,d))#这时输出后a和b相差aaaaaa和多个空格，print里面怎么写就输出什么<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109181403385.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109181416364.png"></p><p>除就是直接除，整除就是结果取整，如9//6结果为1</p><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109181424820.png"></p><p>先比较第一个,第一个大就大,不再比较后面的，如果第一个一样就依次比较后面的</p><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>and两边一边为0,结果就为0,即一侧为假就是假,如过无0,则取后面那个(and第一个判断处理后，还需要判断后一个条件，最后判断是谁就输出谁),如a=1 b=3 print(b and a),得到的是1</p><p>or两边一个为真就是真</p><pre class="line-numbers language-none"><code class="language-none">a &#x3D; 1b &#x3D; 2print(a or b)#结果为1，因为第一个1为真，就不再运行判断后面b是真是假，直接输出1a &#x3D; 0b &#x3D; 2print(a or b)#结果为2，因为第一个是0假，再判断后面的，后面为2，就输出2#这里是输出数字，在编辑器中已经定义了就是这样运行的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">a &#x3D; 1b &#x3D; 2c &#x3D; 3print(b &gt; a and b&lt;3)#结果为true，这里不是数字，而有关系运算符，就输出true或者falseprint(not (b &gt; a and b&lt;3)) #结果为false，not逻辑就是取反<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出"></a>格式化输出</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109181456230.png"></p><p>%d digit数字数位，%s string ,%f float ,%o octal八进制</p><pre class="line-numbers language-none"><code class="language-none">age &#x3D; 20name &#x3D; &quot;陈冠希&quot;money &#x3D; 2000000.99print(&#39;%d岁的%s一部电影赚了%.2f元&#39; % (age,name,money))#注意print里面有&#39;&#39;print(age+&quot;岁的&quot;+name+&quot;一部电影赚了&quot;+money+&quot;元&quot;)#或者print(str(age)+&#39;岁的&#39;+name+&#39;一部电影赚了&#39;+str(money)+&#39;元&#39;)#直接字符串拼接，但是因为age和money不是字符串类型，无法拼接，所以必须先强转。（拼接必须全是字符串类型）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>%.2f即保留两位小数输出</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109181501663.png"></p><h3 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h3><p>前缀0b就是二进制，0o就是八进制，0x十六进制hexadecimal，默认十进制</p><p>十六进制是0123456789abcdef </p><p><mark>二进制计算</mark></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109191143538.png"></p><p>1，2，4，8，16，32，64，128，256 ，二进制哪一位有相加即可快速得到十进制。</p><pre class="line-numbers language-none"><code class="language-none">a&#x3D;bin(20)#转二进制print(a)a&#x3D;oct(50)#转八进制print(a)a&#x3D;hex(150)#转十六进制print(a)#binary二进制，octal八进制，hex十六进制<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>转十进制</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109191316383.png"></p><p>二进制转八与十六</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109191321010.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109191329497.png"></p><h2 id="位运算结果"><a href="#位运算结果" class="headerlink" title="位运算结果"></a>位运算结果</h2><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109191355799.png"></p><p>逻辑运算符print(5 and 20)与位运算print（5 &amp; 20）不同，前者只要没有0与空字符取最后数值，即20</p><p>后者&amp;运算先将5与20二进制化为0b101与0b10100，然后前后&amp;运算得到0b100结果为4</p><p>或运算与异或运算与‘与运算’相似，规则不同而已。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109191355799.png"></p><p>运算符</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109191402977.png"></p><p>1字节=1byte=8bit=三十二位</p><p>所有位运算通过转换成二进制后运算</p><p><mark>左右移计算</mark></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109191432979.png"></p><p><mark>难点取反运算</mark></p><p>如何true与false参与运算，true是1，false为0，print（1+true）得到2</p><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202109191518985.png"></p><h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h3><p>简单的if，else</p><pre class="line-numbers language-none"><code class="language-none">import random  # 引入随机数包ran &#x3D; random.randint(1, 10)  # random.randint(1，10)生成1到10的整数ran2 &#x3D; random.randint(1, 10)print(ran, ran2)abs(ran)  # abs()是将括号里面的数字绝对值if ran &gt; ran2:    print(&quot;yes&quot;)else:    print(&quot;no&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>if-elif-else</p><pre class="line-numbers language-none"><code class="language-none">#当所有的elif都不成立，才运行else，一个成立则跳出此判断语句再向下运行sales &#x3D; int(input(&quot;请输入你的销售金额，不同金额有不同奖励&quot;))#注意int转换下类型，input是字符串类型，无法与整形比较if 10000 &lt; sales &lt;&#x3D;50000:print(&quot;你得到了一辆tesla&quot;)elif 50000 &lt; sales &lt;&#x3D;100000:print(&quot;你得到了两辆tesla&quot;)elif 150000 &lt; sales &lt;&#x3D;200000:print(&quot;你得到了三辆tesla&quot;)else:print(&quot;你被开除了&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>pass关键词</p><pre class="line-numbers language-none"><code class="language-none">a &#x3D; 1if a&#x3D;&#x3D;1 :passelse :pass#pass无意义，但可支撑这个语句，不填语句会报错，pass可当空占用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>三目运算符</p><p>格式： <code>变量 = 值1 if 条件 else 值2</code> 当条件成立时把 值1 赋值给变量，条件不成立时把 值2 赋值给变量，其实就是对if…else 语句的一种简写。</p><p>示例：</p><pre class="line-numbers language-none"><code class="language-none">a &#x3D; 10b &#x3D; 30if a &gt; b:    c &#x3D; aelse:    c &#x3D; bprint(&#39;a和b两个数的较大值是%d&#39;%c)if a &gt; b:print(&quot;a&gt;b&quot;)else:print(&quot;a&lt;b&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上的 <code>if...else</code> 代码可以简写成以下格式:</p><pre class="line-numbers language-none"><code class="language-none">a &#x3D; 10b &#x3D; 30c &#x3D; a if a&gt;b else bprint(&#39;a和b两个数的较大值是%d&#39;%c)print(&quot;a&gt;b&quot;) if a&gt;b else print(&quot;a&lt;b&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><p>continue和break要在for,while等循环中使用,单独的if语句中不能使用break和continue.</p><p>continue结束当前循环，break跳出整个循环</p><pre class="line-numbers language-none"><code class="language-none"># i &#x3D; 0# next1 &#x3D; 0# num &#x3D; 0## while i &lt; 100:#     next1 +&#x3D; 1#     i +&#x3D; 1#     num &#x3D; num +next1# print(num)# 猜数字# 因为不知道要猜多少次所以用死循环，然后判断加break，猜对就break跳出# import random## while True:#     ran &#x3D; random.randint(1, 10)#     guess &#x3D; int(input(&quot;欢迎来到随机猜数字游戏(1-10)，请输入您猜的数字&quot;))#     # 记得把input转int不然永远是错#     if guess &#x3D;&#x3D; ran:#         print(&quot; 恭喜你猜对了&quot;)#         break#     else:#         print(&quot;你猜错了&quot;)# for循环# range(10),输出0-9，默认从0开始，sep为1，不包括最后一个# 输出0 1 2 3 4 5 6 7 8 9# for i in range(10):#     print(i)# 从1开始，间隔为2，输出1 3 5 7 9for i in range(1, 10, 2):    print(i)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="for-else-和-while-else"><a href="#for-else-和-while-else" class="headerlink" title="for- else  和 while -else"></a>for- else  和 while -else</h3><p>当没执行过break则执行else，执行过break则不执行else</p><pre class="line-numbers language-none"><code class="language-none">for i in range(3):if i &gt; 3:breakelse:print(&quot;if一直不成立，没执行过break，执行此else语句&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="continue和break"><a href="#continue和break" class="headerlink" title="continue和break"></a>continue和break</h3><pre class="line-numbers language-none"><code class="language-none"># 输出能不能被3整除的1-10的数# for i in range(10):#     if i % 3 !&#x3D; 0:#         print(i)#     else:#         pass# continuefor i in range(10):    if i % 3 &#x3D;&#x3D; 0:        continue    else:        print(i)# break跳出整个循环，注意是最近的循环，不是跳出if，continue是跳出当前的一次循环<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="循环嵌套"><a href="#循环嵌套" class="headerlink" title="循环嵌套"></a>循环嵌套</h3><pre class="line-numbers language-none"><code class="language-none"># 打出倒立直角三角形***************# 方法一# n &#x3D; 0# while n &lt;&#x3D; 5:#     print(&quot;*&quot; * n)#     n +&#x3D; 1# 方法二n &#x3D; 1while n &lt;&#x3D; 5:    m &#x3D; 0    while m &lt; n:        print(&quot;*&quot;, end&#x3D;&quot;&quot;)#取消换行，因为这里的*需要连起来        m +&#x3D; 1    print()#加换行    n +&#x3D; 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="切片操作"><a href="#切片操作" class="headerlink" title="切片操作"></a>切片操作</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202111061641014.png"></p><p>首先把s1的hello创建到变量池，然后把s1赋予s2，那么他们两个的地址相同，自然结果也都是hello</p><p>，s3=”hello”编辑器从变量池找hello，发现已经有了，就直接赋予，这么做是为了节省空间，所以s1和s2</p><p>和s3的地址都是一样的，s4是hello1，在变量池没有，所以另外创建，地址与前三个不同。</p><pre class="line-numbers language-none"><code class="language-none">#查看地址的函数 id()n &#x3D; 3print(id(n))#转绝对值的函数 abs()n &#x3D; -3print(abs(n))#查看类型type()n &#x3D; -3print(type(n))#获取ascll码ord()n &#x3D; &quot;A&quot;print(ord(n))#结果65#获取字符串长度len()n &#x3D; &quot;111&quot;print(len(n))#结果3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="字符串的截取"><a href="#字符串的截取" class="headerlink" title="字符串的截取"></a>字符串的截取</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202111071740109.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202111071743698.png"></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>1-python不用{}包含语句，而是用缩进规划范围，所以在if等语句中一定要注意缩进。</p><p>2-python里没有i++这种自增</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>千峰教育python700集从入门到精通<a href="https://www.bilibili.com/video/BV1R7411F7JV">https://www.bilibili.com/video/BV1R7411F7JV</a></p><p>千峰python专栏公众号<br>```</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学课程 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript的入门知识</title>
      <link href="archives/b92db53e.html"/>
      <url>archives/b92db53e.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-JS简介"><a href="#1-JS简介" class="headerlink" title="1-JS简介"></a>1-JS简介</h2><p>诞生于1995年，起初用于处理网页的前端验证，比如用户名长度，密码长度，邮箱格式等。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210805100851.png"></p><p>不同的游览器用的引擎不一样，所以打开网页的速度也不同。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210805101352.png"></p><p>ES是标准，dom是提供一个对象操作网页，bom提供一个对象操作游览器。</p><h2 id="2-第一个JAVASCRIPT程序"><a href="#2-第一个JAVASCRIPT程序" class="headerlink" title="2-第一个JAVASCRIPT程序"></a>2-第一个JAVASCRIPT程序</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">></span><span class="token operator">&lt;</span>html<span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token constant">JS</span>代码需要写道script标签中<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span><span class="token comment">// 控制游览器弹出一个警告框</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"第一个JavaScript程序"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 向控制台输入一个内容</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"你居然能发现我"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//在网页输出一个内容</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"helloworld"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>尚学堂李立超JavaScript基础<a href="https://www.bilibili.com/video/BV1YW411T7GX?from=search&amp;seid=12314234006355490479">https://www.bilibili.com/video/BV1YW411T7GX?from=search&amp;seid=12314234006355490479</a></p><p>黑马pink老师<a href="https://www.bilibili.com/video/BV1Sy4y1C7ha?p=1">https://www.bilibili.com/video/BV1Sy4y1C7ha?p=1</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA基础入门学习</title>
      <link href="archives/498f0b66.html"/>
      <url>archives/498f0b66.html</url>
      
        <content type="html"><![CDATA[<h1 id="JAVA基础入门学习"><a href="#JAVA基础入门学习" class="headerlink" title="JAVA基础入门学习"></a>JAVA基础入门学习</h1><h2 id="1-JAVA介绍"><a href="#1-JAVA介绍" class="headerlink" title="1-JAVA介绍"></a>1-JAVA介绍</h2><h3 id="1-1java发展史"><a href="#1-1java发展史" class="headerlink" title="1.1java发展史"></a>1.1java发展史</h3><p>2004年JAVA1.5的更新力度最大，所以也叫做JAVA5.0</p><p>3月16日，JDK 16正式发布了，此版本会得到短期技术支持，下一版本JDK17将会有长期的技术支持。每三年会有一个“长期支持的版本”（Long Term Support release，简称LTS），该版本会提供为期三年的支持。Java 8是一个LTS，当前的LTS是Java 11，下一个应该是Java 17。</p><p>其实Java不断的迭代，没几个月就冒出一个新版本，很多人对于java8都没有精通，但是现在16都发布了。其实从另外的角度可以知道不断迭代也可以证明它的火热程度。</p><h4 id="1-1-1企业为什么不升级？"><a href="#1-1-1企业为什么不升级？" class="headerlink" title="1.1.1企业为什么不升级？"></a>1.1.1企业为什么不升级？</h4><p>旧项目不敢轻易动，一升级就会遇到报错。对于企业来说，分分钟会带来兼容性问题，没有一个负责人敢做担保。而且JDK算是非常核心的基础设施，出了安全漏洞外，基本上是不会去动生产环境的JDK了。</p><p>其次就是工作量本来就很大，如果更新了，还要全员适应，时间都要花在写新业务代码。运维和测试都需要花大量的时间。</p><p>并且Java已经非常优秀了，有数据统计80%的人还在用8，甚至有的公司还在适用7。去年1月开始，Oracle JDK 开始对 Java SE 8 之后的版本开始进行商用收费，确切的说是 8u201/202 之后的版本。</p><h4 id="1-1-2开发人员为什么坚持用java8"><a href="#1-1-2开发人员为什么坚持用java8" class="headerlink" title="1.1.2开发人员为什么坚持用java8"></a>1.1.2开发人员为什么坚持用java8</h4><p>上述说了企业不敢更新，那么技术员自己学习显然也没有用。即使到了2019年，网上仍然在热烈讨论关于Steam和Optional的相关问题，Baeldung自己也发布了Java8Optional 指南。</p><p>Java 9引入了模块化系统，也就是虽然看起来很好，但是对于开发人员来说，JDK一旦模块化，但是第三方库并没有模块化。如果使用了第三方，那就是自己挖坑自己填。</p><h3 id="1-2-java跨平台原理"><a href="#1-2-java跨平台原理" class="headerlink" title="1.2 java跨平台原理"></a>1.2 java跨平台原理</h3><p>在相应平台如windows，mac安装一个翻译员jvm就行</p><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/j1.png"></p><h3 id="1-3-jre与jdk"><a href="#1-3-jre与jdk" class="headerlink" title="1.3 jre与jdk"></a>1.3 jre与jdk</h3><p>jre=java runtime environment</p><p>jdk包含jre与开发工具javac.exe（编译）与java.exe（运行），jre又包括jvm虚拟机（翻译）和核心类库。</p><p>安装jdk后运行开发java都可以，安装jre只能运行java程序。</p><p><font color="red">安装路径不要有空格和中文</font></p><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/j2.png"></p><h2 id="2-JAVA环境的准备"><a href="#2-JAVA环境的准备" class="headerlink" title="2-JAVA环境的准备"></a>2-JAVA环境的准备</h2><p><strong>常用dos命令</strong></p><p>按win+r</p><p>输入cmd回车</p><p>键盘上的箭头可以切换回使用过的命令</p><p>tab键可以补齐命令</p><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/j3.png"></p><p>cmd中，执行java命令与javac命令的区别：</p><p>javac：是编译命令，将java源文件编译成.class字节码文件。</p><p>例如：javac hello.java</p><p>将生成hello.class文件。</p><p> java：是运行字节码文件；由java虚拟机对字节码进行解释和运行。</p><p>例如：java hello</p><p><strong>配置path环境变量</strong></p><p>此环境用途是能在cmd中直接使用java与javac两个程序，而不需要选择java.exe所在路径</p><p>控制面板-系统和安全-系统-高级系统设置</p><p>第一步</p><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/j4.png"></p><p>第二步</p><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/j5.png"></p><p><strong>hello案例</strong></p><p>System的S记得大写，;是英文状态下的分号</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span><span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> main <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"HelloWorld"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-JAVA的基本语法"><a href="#3-JAVA的基本语法" class="headerlink" title="3-JAVA的基本语法"></a>3-JAVA的基本语法</h2><h3 id="3-1注释"><a href="#3-1注释" class="headerlink" title="3.1注释"></a>3.1注释</h3><p>单行//</p><p>多行/*  */</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/* java程序中最基本的组成单位是类类的定义格式public class 类名&#123;&#125;下面是我定义的helloworld类*/</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span><span class="token punctuation">&#123;</span>    <span class="token comment">/*这是mian方法，是程序的入口方法，代码从这里开始执行*/</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> main <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//这是输出语句，注意s要大写哦</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"瑾年java，HelloWorld"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>黑马程序员全套java教程<a href="https://www.bilibili.com/video/BV18J411W7cE">https://www.bilibili.com/video/BV18J411W7cE</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学课程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库Mysql的基础语法与使用</title>
      <link href="archives/ed62168e.html"/>
      <url>archives/ed62168e.html</url>
      
        <content type="html"><![CDATA[<h1 id="数据库Mysql的基础语法与使用"><a href="#数据库Mysql的基础语法与使用" class="headerlink" title="数据库Mysql的基础语法与使用"></a>数据库Mysql的基础语法与使用</h1><h2 id="1-mysql的安装"><a href="#1-mysql的安装" class="headerlink" title="1-mysql的安装"></a>1-mysql的安装</h2><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210805165116.png"></p><p>安装包在参考资料的课件中有</p><p>记住mysql的默认端口，默认用户名是root，环境变量可以不设置，它只是让你能使用dos mysql命令，作用不大。</p><p>设置环境变量<a href="https://blog.csdn.net/li93675/article/details/80700152">https://blog.csdn.net/li93675/article/details/80700152</a></p><p>此电脑右击-管理-服务和应用程序-服务  可查看mysql的服务状态</p><h2 id="2-如何彻底卸载mysql"><a href="#2-如何彻底卸载mysql" class="headerlink" title="2-如何彻底卸载mysql"></a>2-如何彻底卸载mysql</h2><p><mark>不彻底卸载，第二次安装会安装不上</mark></p><p>首先关闭此电脑右击-管理-服务和应用程序-服务   中mysql的服务</p><p>再从控制面板卸载mysql installer-community和mysql server 8.0两个软件（版本）</p><p>再删除安装目录的文件（有时卸载不会自动删除），一般在c\program files\mysql</p><p>再删除c\program files（x86）\mysql   ps：x86一般就是32位的软件</p><p>再删除c\program data\mysql（在隐藏文件夹，记得勾选显示隐藏文件夹选项）</p><p>再清理mysql注册表（不是必须的）</p><p>再删除path环境变量中关于mysql的安装路径</p><p>win7缺少插件，安装不了mysql就自行下载插件</p><p>还安装不了，就是mysql的一些文件没有删感觉，你又不晓得这个文件在哪，建议重装系统。</p><h2 id="3-Navicat"><a href="#3-Navicat" class="headerlink" title="3-Navicat"></a>3-Navicat</h2><p><mark>远程管理数据的图形化界面软件</mark></p><p>与navicat相似的软件还有sqlyog</p><p>安装包在参考资料的课件中</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/navicat.png"></p><h2 id="4-数据库的一些基础知识"><a href="#4-数据库的一些基础知识" class="headerlink" title="4-数据库的一些基础知识"></a>4-数据库的一些基础知识</h2><h3 id="4-1-数据库分类"><a href="#4-1-数据库分类" class="headerlink" title="4.1-数据库分类"></a>4.1-数据库分类</h3><p>SQL 的全称是 Structured Query Language, 中文含义是:结构化查询语言. 它是个关系数据库的标准语言</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/sql1.png"></p><p>详细请阅读参考资料的课件</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/sql2.png"></p><h3 id="4-2为什么用Mysql"><a href="#4-2为什么用Mysql" class="headerlink" title="4.2为什么用Mysql"></a>4.2为什么用Mysql</h3><p>因为mysql免费，操作简单，速度快，成本低，易安装卸载，Oracle性能更好，但运营成本太高，安装麻烦，小公司也用不起，维护难。其他数据库管理系统各有各的优缺点，见课件。</p><h2 id="5-Mysql连接navicat遇到的问题"><a href="#5-Mysql连接navicat遇到的问题" class="headerlink" title="5-Mysql连接navicat遇到的问题"></a>5-Mysql连接navicat遇到的问题</h2><p>连接mysql提示<em><strong>*Authentication plugin ‘caching_sha2_password’ cannot be loaded*</strong></em></p><p>这里是因为navicat12与mysql的密码加密规则不同导致</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">解决方法参考csdn：https:&#x2F;&#x2F;blog.csdn.net&#x2F;u011182575&#x2F;article&#x2F;details&#x2F;80821418<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6-入门"><a href="#6-入门" class="headerlink" title="6-入门"></a>6-入门</h2><p>sql也有很多版本标准，我们一般使用sql-92和sql：1999</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/sql3.png"></p><p>alter修改，manipulation操作，definition定义</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/sql5.png"></p><h2 id="7-DQL与DML与DDL"><a href="#7-DQL与DML与DDL" class="headerlink" title="7-DQL与DML与DDL"></a>7-DQL与DML与DDL</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 表的建立 ddl语言</span><span class="token keyword">CREATE</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span>sno <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">55</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    sex <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    age <span class="token keyword">int</span><span class="token punctuation">,</span>    dtdate <span class="token keyword">date</span><span class="token punctuation">,</span>    classname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">55</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    email <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">55</span><span class="token punctuation">)</span>    <span class="token comment">-- 最后一条不需要“，”结尾</span><span class="token punctuation">)</span><span class="token comment">-- 查询表中数据  dql语言</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> student<span class="token comment">-- *代表全部的意思，查询来自student的全部信息</span><span class="token comment">-- 查询表的结构信息，description，展示出表的数据类型并说明</span><span class="token keyword">desc</span> student<span class="token comment">-- 查询完整的建表sql语句</span><span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">table</span> student<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>int会自动扩充，所以不需要给长度，char是定长字符串，</p><p>如char(100),大小（0-255）里面只放”瑾年“两个字，还是占100个字符</p><p>varchar（0*65535）是变长字符串，varchar（100)放“瑾年”只占2个字符</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/sqlzf.png"></p><p>当数据很大就用text，存放音频视频就用blog，但不常用。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/sqltime.png"></p><p>时间戳与datetime的区别是，当不赋予时间，时间戳自动获取当前系统时间</p><h3 id="7-1-DDL"><a href="#7-1-DDL" class="headerlink" title="7.1-DDL"></a>7.1-DDL</h3><p><strong>在表中添加一列ddl</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 默认添加在最后</span><span class="token keyword">alter</span> <span class="token keyword">table</span> student <span class="token keyword">add</span> score <span class="token keyword">double</span>（<span class="token number">4</span>，<span class="token number">1</span>）；<span class="token comment">-- 添加到表开头</span><span class="token keyword">alter</span> <span class="token keyword">table</span> student <span class="token keyword">add</span> score <span class="token keyword">double</span>（<span class="token number">5</span>，<span class="token number">1</span>） <span class="token keyword">first</span>；<span class="token comment">-- 在指定列后面添加一列</span><span class="token keyword">alter</span> <span class="token keyword">table</span> student <span class="token keyword">add</span> score <span class="token keyword">double</span>（<span class="token number">5</span>，<span class="token number">2</span>） <span class="token keyword">after</span> age；<span class="token comment">-- ps：此语句跟随此博客前语句</span><span class="token comment">-- double(4,1)表示四个长度，1个小数位，比如123.1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>修改列信息</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> student <span class="token keyword">modify</span> score <span class="token keyword">int</span><span class="token punctuation">;</span><span class="token comment">-- 把score的类型改成int，原先设置的是double</span><span class="token keyword">alter</span> <span class="token keyword">table</span> student change score sco <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment">-- change既可以改变类型也能修改名字，此语句把列 名字score改为sco，类型改成double（4，3）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>删除列</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> student <span class="token keyword">drop</span> sco；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>删除表</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">drop</span> <span class="token keyword">table</span> student<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>修改表的名称</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> student <span class="token keyword">rename</span> <span class="token keyword">to</span> teachers；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="7-2DML数据的增删改"><a href="#7-2DML数据的增删改" class="headerlink" title="7.2DML数据的增删改"></a>7.2DML数据的增删改</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 新增</span><span class="token keyword">insert</span> <span class="token keyword">into</span> student <span class="token keyword">values</span>（<span class="token number">1</span>，“瑾年”，“男”，<span class="token number">12</span>，<span class="token number">5.2</span>，“<span class="token number">2021</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">06</span>，“python人工智能”，“xxxxxxx<span class="token variable">@qq.com</span>”）<span class="token punctuation">;</span><span class="token comment">-- 不区分单双引号，上述语句字符串单引号也行，每个数据见用逗号隔开，系统按照values顺序赋值给相关列</span><span class="token comment">-- 时间可以是2022-08-01也可以2022/08/01也可以2022.08.01</span><span class="token comment">-- 时间可以用函数now（），CURRENT()，sysdate()代替，自动获取现在的时间</span><span class="token comment">-- 指定列的添加</span><span class="token keyword">insert</span> <span class="token keyword">into</span> student（name） <span class="token keyword">values</span>（<span class="token string">'成成'</span>）；<span class="token keyword">insert</span> <span class="token keyword">into</span> student（sex，name） <span class="token keyword">values</span>（<span class="token string">"男"</span>，<span class="token string">"瑾年"</span>）<span class="token comment">--指定了列，后面的数据按指定列顺序赋值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><mark>注意括号和引号都要用英文的，不然报错</mark></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 修改 把sno=2的学生年纪 修改成19岁</span><span class="token keyword">update</span> student <span class="token keyword">set</span> age<span class="token operator">=</span><span class="token number">19</span> <span class="token keyword">where</span> sno<span class="token operator">=</span><span class="token number">2</span><span class="token comment">-- set后面是修改的列，where后面是修改满足条件</span><span class="token keyword">update</span> student <span class="token keyword">set</span> age<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span>dtadate<span class="token operator">=</span><span class="token string">"1921-06-03"</span> <span class="token keyword">where</span> sno<span class="token operator">=</span><span class="token number">2</span> sex<span class="token operator">=</span><span class="token string">"男"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><mark>不管是修改还是删除记得加条件，不然会全部选中修改和删除</mark></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 删除</span><span class="token keyword">delete</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> sno<span class="token operator">=</span><span class="token number">2</span>；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="7-3DQL"><a href="#7-3DQL" class="headerlink" title="7.3DQL"></a>7.3DQL</h3><h2 id="8-表的完整性约束"><a href="#8-表的完整性约束" class="headerlink" title="8-表的完整性约束"></a>8-表的完整性约束</h2><p><strong>用途</strong>：<font  color="blue">如果没有约束，数据中就会出现许多相同数据，从而无法通过条件where精确选中一条数据，也会参杂很多不合法数据</font></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210806145205.png"></p><p><strong>主键只有一个</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210806150350.png"></p><p><strong>列级约束</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> student3<span class="token punctuation">(</span>sno <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    sex <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">default</span><span class="token string">'男'</span> <span class="token keyword">check</span><span class="token punctuation">(</span>sex<span class="token operator">=</span><span class="token string">"男"</span><span class="token operator">or</span> sex<span class="token operator">=</span><span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    age <span class="token keyword">int</span> <span class="token keyword">check</span><span class="token punctuation">(</span>age<span class="token operator">>=</span><span class="token number">0</span> <span class="token operator">and</span> age<span class="token operator">&lt;=</span><span class="token number">130</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    dtdate <span class="token keyword">date</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    calssname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    email <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">55</span><span class="token punctuation">)</span> <span class="token keyword">unique</span>     <span class="token punctuation">)</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>表级约束</strong></p><p><mark>constraint约束，notnull和default只能写在列级约束</mark></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> student4<span class="token punctuation">(</span>sno <span class="token keyword">int</span>  <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    sex <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">default</span><span class="token string">'男'</span> <span class="token punctuation">,</span>    age <span class="token keyword">int</span> <span class="token punctuation">,</span>    dtdate <span class="token keyword">date</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    calssname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    email <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">55</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">constraint</span> pk_stu4_sno <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>sno<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">constraint</span> uk_stu4_email <span class="token keyword">unique</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">constraint</span> ck_stu4_sex <span class="token keyword">check</span><span class="token punctuation">(</span>sex<span class="token operator">=</span><span class="token string">"男"</span> <span class="token operator">or</span> sex<span class="token operator">=</span><span class="token string">"女"</span><span class="token punctuation">)</span>    <span class="token comment">-- 格式为constraint +你想设置的约束名（方便自己识别）+约束（约束对象）</span>     <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><mark>自增auto_increment必须是主键才有</mark></p><p><strong>表建立完成后如何添加约束以及如何删除约束</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210806180737.png"></p><p><strong>外键约束</strong></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>尚学堂<a href="https://www.bilibili.com/video/BV19K4y1P7vq?p=1">https://www.bilibili.com/video/BV19K4y1P7vq?p=1</a></p><p>课件【尚学堂】MySQL数据库零基础入门到精通全套教程链接: <a href="https://pan.baidu.com/s/1hTVI1awirnhO99_XSywz9A">https://pan.baidu.com/s/1hTVI1awirnhO99_XSywz9A</a> 提取码: e9g7</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学课程 </tag>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大学操作系统的基础知识-瑾年</title>
      <link href="archives/d04bd5bc.html"/>
      <url>archives/d04bd5bc.html</url>
      
        <content type="html"><![CDATA[<h1 id="大学操作系统的基础知识"><a href="#大学操作系统的基础知识" class="headerlink" title="大学操作系统的基础知识"></a>大学操作系统的基础知识</h1><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1-介绍"></a>1-介绍</h2><p><del>王道考研操作系统学习笔记，只记录重点</del></p><h2 id="2-操作系统的概念，功能，和目标"><a href="#2-操作系统的概念，功能，和目标" class="headerlink" title="2-操作系统的概念，功能，和目标"></a>2-操作系统的概念，功能，和目标</h2><p><mark>1-程序接口（允许用户通过程序间接使用）=系统调用=广义指令</mark></p><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/c1.png"></p><p><em>操作系统也是软件</em></p><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/c2.png"></p><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/c3.png"></p><h2 id="3-操作系统的特征"><a href="#3-操作系统的特征" class="headerlink" title="3-操作系统的特征"></a>3-操作系统的特征</h2><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/c4.png"></p><h2 id="4-操作系统的发展与分类"><a href="#4-操作系统的发展与分类" class="headerlink" title="4-操作系统的发展与分类"></a>4-操作系统的发展与分类</h2><p>1-手工操作阶段，用纸带机输入输出，人机速度矛盾（取纸带太慢），用户独占全机，一台机子只能一个人用。</p><p>2-单道批处理系统，引入脱机输入输出技术（用磁带比纸带快），并监督程序控制输入输出（操作系统雏形)，但是内存还是只能运行一道程序，cpu利用率还是很低</p><p>3-多道批操作系统，操作系统正式算诞生，多道程序可以并发执行，共享计算机资源，资源利用率大幅度提升，但是没有人机交互功能（只能等待计算机的结果，无法自己取消调试等)</p><p>4-分时操作系统，可以多个用户使用，也能人机交互(给各种用户轮流分配时间，如50ms)，缺点是太公平太平均分配，如果有紧急任务，照样需要等待。</p><p>5-实时操作系统，可以优先响应紧急任务，又分为软实时系统（运行少量时间违规，如售票系统偶尔出错无关紧要)，和硬实时系统（必须严格按照规定时间完成，如导弹系统，自动驾驶系统，差1ms就性命攸关）</p><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/c5.png"></p><h2 id="5-操作系统的运行机制与体系结构"><a href="#5-操作系统的运行机制与体系结构" class="headerlink" title="5-操作系统的运行机制与体系结构"></a>5-操作系统的运行机制与体系结构</h2><p>1-指令为计算机能读懂的命令，如二进制0011100等</p><p>2-原语是不可中断的，要运行到底。</p><p>3-OS就是操作系统的意思 operating system</p><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/c6.png"></p><h2 id="6中断和异常"><a href="#6中断和异常" class="headerlink" title="6中断和异常"></a>6中断和异常</h2><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210807104418.png"></p><p>发生中断就意味着需要操作系统介入，开展管理工作（进程一时间片完成，进行进程二）。</p><p>系统调用是内中断信号（系统调用是需要在核心态实现）</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108161744182.png"></p><p>I/O输入/输出(Input/Output)，分为IO设备和IO接口两个部分。 在POSIX兼容的系统上，例如<a href="https://baike.baidu.com/item/Linux/27050">Linux</a>系统 [1] ，I/O操作可以有多种方式，比如DIO(Direct I/O)，AIO(Asynchronous I/O，异步I/O)，Memory-Mapped I/O(内存映射I/O)等，不同的I/O方式有不同的实现方式和性能，在不同的应用中可以按情况选择不同的I/O方式。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210807104947.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108161745673.png"></p><h2 id="7系统调用"><a href="#7系统调用" class="headerlink" title="7系统调用"></a>7系统调用</h2><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210807105551.png"></p><p>比如打印机，为什么两个人同时打印，不会混淆，因为打印这种指令只能通过系统调用，系统调用又被操作系统管理，有条不紊的执行</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210807105926.png"></p><p>应用程序可以直接进行系统调用，但是比较麻烦，通常使用C库函数去调用，因为函数中封装了调用的方法</p><p>系统调用只能在处理器核心态进行</p><p>有的库函数比如获取绝对值不需要系统调用，但是创造一个文件夹这种函数就需要系统调用。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210807112608.png"></p><p>write（“abc”）看似我们一条语句就能写入adb，其实是语言函数帮我们封装了一系列操作</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210807112810.png"></p><p>这里的int x 指令不是整型，二十系统根据int的值选择相应功能</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108161745311.png"></p><h2 id="8进程"><a href="#8进程" class="headerlink" title="8进程"></a>8进程</h2><h3 id="8-1进程的定义"><a href="#8-1进程的定义" class="headerlink" title="8.1进程的定义"></a>8.1进程的定义</h3><p>程序就是一个指令序列</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210807113759.png"></p><p>为了描述控制进程的运行，系统中存放进程的管理和控制信息的数据结构称为<a href="https://baike.baidu.com/item/%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%9D%97/7205297">进程控制块</a>（PCB Process Control Block），它是进程实体的一部分，是操作系统中最重要的记录性数据结构。它是进程管理和控制的最重要的数据结构，每一个进程均有一个PCB，在创建进程时，建立PCB，伴随进程运行的全过程，直到进程撤消而撤消</p><h3 id="8-2进程的组成"><a href="#8-2进程的组成" class="headerlink" title="8.2进程的组成"></a>8.2进程的组成</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210807113843.png"></p><p>进程实体是整个进程的东西，是静态的，进程是动态的。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210807114037.png"></p><p>进程由pcb和程序段和数据段组成</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108161746838.png"></p><p>打开任务管理器可以看到每个程序打开后，其进程都会被分配一个pid进程标识符 5</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210807114328.png"></p><h3 id="8-3进程的组织方式"><a href="#8-3进程的组织方式" class="headerlink" title="8.3进程的组织方式"></a>8.3进程的组织方式</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210807115726.png"></p><p>索引和链接相似，就是把不同状态的进程建立了索引表。</p><h3 id="8-4进程的特征"><a href="#8-4进程的特征" class="headerlink" title="8.4进程的特征"></a>8.4进程的特征</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210807120137.png"></p><p>动态性是进程的最基本特征，进程与程序的概念完全不同。</p><p>进程是系统资源分配调度的独立单位</p><p>进程的结构性就是程序段，数据段，pcb</p><h3 id="8-5进程的五种状态"><a href="#8-5进程的五种状态" class="headerlink" title="8.5进程的五种状态"></a>8.5进程的五种状态</h3><p>运行态，就绪态，阻塞态，创建态，终止态</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210807180556.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108161746294.png"></p><p>就绪态不能直接转换为阻塞态，阻塞态也不能直接转换成运行态</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210810112909.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210810113146.png"></p><h3 id="8-6进程的控制"><a href="#8-6进程的控制" class="headerlink" title="8.6进程的控制"></a>8.6进程的控制</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108161746083.png"></p><p>进程的转换就是运行态，就绪态，阻塞态，创造态，终止态间的转换。</p><p><strong>通过原语进行进程控制</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108161746781.png"></p><p>关中断指令执行后，再有中断指令会暂时不处理，等开中断指令后再处理。</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210810150030.png"></p><p>任务管理器删除进程就是一直外界干预</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210810150123.png"></p><p><strong>一共有创建原语，阻塞原语，唤醒原语，撤销原语</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108161747691.png"></p><p>阻塞原语与唤醒原语必须成对使用，且因何事阻塞就应由何事唤醒</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/20210810150520.png"></p><h3 id="8-7进程的通信"><a href="#8-7进程的通信" class="headerlink" title="8.7进程的通信"></a>8.7进程的通信</h3><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101517015.png"></p><h2 id="9线程的概念与多线程模型"><a href="#9线程的概念与多线程模型" class="headerlink" title="9线程的概念与多线程模型"></a>9线程的概念与多线程模型</h2><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101519893.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101530606.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101530160.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101533137.png"></p><p><strong>线程的实现方式</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101534638.png"></p><p>用户可以看到，所以是不透明的，对操作系统是透明的，用户级线程就是用户可以看到的线程</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101537974.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101537241.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101538368.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108161747152.png"></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101540821.png"></p><h2 id="10处理机的调度"><a href="#10处理机的调度" class="headerlink" title="10处理机的调度"></a>10处理机的调度</h2><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101543921.png"></p><p> <strong>高级调度</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101546188.png"></p><p> <strong>中级调度</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101549061.png"></p><p><strong>七状态模型</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101551986.png"></p><p><strong>低级调度</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101552492.png"></p><p><strong>三种调度的对比与联系</strong></p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101554264.png"></p><p><strong>总结</strong>*</p><p><img src="https://www.zhoudongqi.com/medias/picture/tuchuang/202108101556567.png"></p><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p>1-王道考研<a href="https://www.bilibili.com/video/BV1YE411D7nH?p=2">https://www.bilibili.com/video/BV1YE411D7nH?p=2</a></p><p>2-csdn的笔记<a href="https://blog.csdn.net/weixin_43914604/article/details/104415990">https://blog.csdn.net/weixin_43914604/article/details/104415990</a></p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学课程 </tag>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>瑾年的一些小摘抄</title>
      <link href="archives/ac5a2f63.html"/>
      <url>archives/ac5a2f63.html</url>
      
        <content type="html"><![CDATA[<h1 id="瑾年的一些小摘抄"><a href="#瑾年的一些小摘抄" class="headerlink" title="瑾年的一些小摘抄"></a>瑾年的一些小摘抄</h1><p>此鸟不飞则已，一飞冲天，不鸣则已，一鸣惊人。</p><p>Dont be afraid of the new arenas.</p><p>Life is too short for long-term grudges.</p><p>If something is important enough,even if the odds are against you ,you should still do it.</p><p>Never really desperate,only the lost of the soul.</p><p>now its the time to take risk.</p>]]></content>
      
      
      <categories>
          
          <category> 生活趣事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML+CSS</title>
      <link href="archives/1e7210.html"/>
      <url>archives/1e7210.html</url>
      
        <content type="html"><![CDATA[<h1 id="小白HTML5-CSS笔记"><a href="#小白HTML5-CSS笔记" class="headerlink" title="小白HTML5+CSS笔记"></a>小白HTML5+CSS笔记</h1><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/study.jpg" alt="所有运行界面请自行调试"></p><h2 id="小知识"><a href="#小知识" class="headerlink" title="小知识"></a>小知识</h2><p><strong>引入图床太麻烦，代码请自行运行查看结果</strong></p><p>1-网站为BS结构，相较CS结构，具有跨平台，无需安装等优势。<br>2-万维网之父博纳斯李，w3c指定了统一的规范规则<br>3-游览器负责渲染<br>4-网页为纯文本编写，word等为富文本<br>5-html全称为hyper text markup language，超文本标记语言，超文本即超链接<br>6-学习html5就等于学习各种标签</p><p>7-url：Uniform Resource Locator统一资源定位符</p><p>src：Source资源</p><p>href：Hypertext Reference超文本引用</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!--html的基本格式--></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html5</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>            demo        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>1&amp;nbsp 空格</p><p>2&amp;gt 大于号</p><p>3&amp;lt小于号</p><p>4&amp;cope版权符号</p><p>更多参考w3c官方网站</p><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><p>1，自结束标签&lt; input/&gt;,&lt; img/&gt;；</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">2，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>一个网页有且只要一个根标签;3，文档声明<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span>;  这里html就是html5的声明，不要写html54，注释<span class="token comment">&lt;!-- 我是注释内容 --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>5，独占一行的为块元素，如p，不独占的为行内元素，如&lt; em&gt;&lt; em&gt;与&lt; strong&gt;&lt; strong&gt;；</p><p>6,h一共只有六级标题&lt; h1&gt;&lt; h1&gt;到&lt; h6&gt;&lt; h6&gt;,最好只有一个h1，游览器根据网页description与h1给与网页查询权重；</p><p>7，布局元素有&lt; header&gt;&lt;/ header&gt;,&lt; main&gt;&lt;/m ain&gt;,&lt; footer&gt;&lt; /footer&gt;,&lt; section&gt;&lt; /section&gt;,&lt; nav&gt;&lt; /nav&gt;等，但通常用块元素&lt; div&gt;啧啧啧&lt; /div&gt;与行内元素&lt; span&gt;&lt;/ span&gt;来布局。</p><p>8，超链接&lt; a&gt;&lt; /a&gt;为行内元素，但其中能放块元素，如:</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">herf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>www.jinnian.life<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>瑾年<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="相对与绝对路径"><a href="#相对与绝对路径" class="headerlink" title="相对与绝对路径"></a>相对与绝对路径</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html">绝对路径可理解为一般的网站目录地址，相对路径为本地文件路径，如"./电影/楚门的世界.mp4"与"../学习资源.前端学习.mp4"，其中./为在此文件的上一级目录寻找电影文件夹再寻找楚门的世界，../为上两级目录中寻找文件学习资料，再寻找前端学习.mp4，因为所有路径都参考与当前，所以叫相对路径。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="超链接的应用"><a href="#超链接的应用" class="headerlink" title="超链接的应用"></a>超链接的应用</h2><p>target属性，在当前页面打开，或在新的页面中打开</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>www.jinnian.life<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_self<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>本窗口打开<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>www.jinnian.life<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新窗口打开<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>制定锚点</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#paragraph1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>观看第一段<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>paragraph1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   第一段 日日无事事复日日忙忙亦茫茫<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>   第二段 鹅鹅鹅曲项向天歌<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- id属性不能重复，像身份证号一样，不要数字开头,javascript:;可做Hypertext reference的占位符，点击无效果--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>也可以加其他各种属性如：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./Saved Pictures/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>风景<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>alt为图片无法加载时，显示的文字，也为图片在万维网上提供关键字关联。图片src可以用图片的base64编码代替（当图片与网页需要同时加载时使用）<span class="token comment">&lt;!-- 图片格式png多种颜色，支持透明，不能动态，jpg支持多种颜色比png多，不支持透明，不能动态    ，gif可以简单透明，支持动态，颜色较少，wepb都支持空间小但兼容性不好 --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="内联框架与音频的引入"><a href="#内联框架与音频的引入" class="headerlink" title="内联框架与音频的引入"></a>内联框架与音频的引入</h2><p>内联框架就是在本网页映入另一个网页（任何其他网页），音乐引入和视频引入就是播放音乐视频啦</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>内联框架 音乐  视频 引入<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>引入<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>  <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">hight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 内联框架，引入一个网页，frameborder为框架边界0或1 --></span>    <span class="token comment">&lt;!-- iframe 和audio都是双标签，img是自结束标签 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>空匪darling <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./music/空匪 - Darling.mp3<span class="token punctuation">"</span></span> <span class="token attr-name">autoplay</span> <span class="token attr-name">controls</span> <span class="token attr-name">loop</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">controls</span> <span class="token attr-name">autoplay</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span>  <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./video/街舞.mp4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 这里的src都在我的本地，如果你们复制代码运行将不会显示，更换成你们的资源就行 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- &lt;embed src="" type="video/mp4">如果是老游览器不支持就用embed --></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>列表分为有序列表ordered Lis，无序列表Unordered List，定义列表Define List</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">无序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>有序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>定义<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>瑾年<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>美好的年华<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- dl —— define list——定义列表 　　dt —— define list title —— 用于生成定义列表中各列表项的标题，重复使用可以定义多个列表项的标题。注意：其中不能包含 hx 元素。 　　dd —— define list define —— 用于生成定义列表各列表项的说明文字段，重复使用可以定义多个说明文字段。dd是对应dt的简短说明或解释。--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="css基本用法"><a href="#css基本用法" class="headerlink" title="css基本用法"></a>css基本用法</h2><p>1.内联样式也叫行内式</p><p>缺点：只能对一行有用，所以在开发中一般不使用，当样式需要改变，需要一行一行修改，不方便维护更新。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>doctype</span> <span class="token attr-name">html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css基本用法<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>css行内式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                好久不见            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span>black<span class="token punctuation">;</span>font-size：30px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                危险危险危险            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 直接写在标签前面里面叫内联样式，属于css,cascading style sheet --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.内部式</p><p>缺点：只能在一个网页使用，不能跨页面使用，所以要用到下面的外部样式表，也叫外链式等</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>doctype</span> <span class="token attr-name">html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HEAD</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>内部式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">keywords</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>内部式<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">                <span class="token selector">p</span><span class="token punctuation">&#123;</span>                    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>                    <span class="token property">font-size</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span>                                       <span class="token punctuation">&#125;</span>            </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                全部comeforya            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>               我不在乎什么天长地久            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                这里的所有的p元素都被style控制，都变为红色，50px大小样式设置用：设置也不需要双引号，如color：red;，名值对结构才需要“”            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>HEAD</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.外部式</p><p>单独将style写入css文件中，再用link引入</p><p>开发中一般用此方法 </p><p>优点：可以跨网页，还能充分利用browser的缓存机制，加快网站加载速度，因为第二次访问css无需再从服务器加载，直接从本地缓存调用。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">p</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>外部<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>外部式，通过css引入<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token comment">&lt;!--&lt;meta http-equiv="refresh" content="3;URL=http://www.baidu.com">--></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>瑾年<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 引入css --></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./外部样式表.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token comment">&lt;!-- link为自结束标签 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>落霞与孤鹜齐飞<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html">注意事项：标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span> 内是css，需要遵循css的规范，不能用html语法，css的注释不是<span class="token comment">&lt;!--  --></span>,而是/* */<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html">p&#123;color:red;font-size:20px;&#125;其中p就是选择器，选择所有的p标签元素，&#123;&#125;里的内容叫做声明块，指定元素的样式声明是名值对结构，一个样式名对应一个样式值，名与值间以英文冒号:连接，以;结尾<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1.id选择器</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>id选择器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">           <span class="token selector">#red</span><span class="token punctuation">&#123;</span>               <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>       </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            放松再慢慢深空        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>            被窝里做一个梦        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  id选择器，只能选择一个，虽然目前游览器能把重复的id一起渲染，但不符合规定，js里面肯定不能写 </p><p>那怎么办呢，用下面的类选择器</p><p>2.class类选择器</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>class选择器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">           <span class="token selector">.red</span><span class="token punctuation">&#123;</span>               <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>           <span class="token selector">.jinnian</span><span class="token punctuation">&#123;</span>               <span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>       </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            放松再慢慢深空        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            被窝里做一个梦        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jinnian pink<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            class在style里面用.开头，id选择器用#开头，一个标签可以赋予多个class        比如这个赋予了jinnian 和pink，无论css写.jinnian还是.pink都能生效，两个class名称用空格隔开        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.通配选择器</p><p>选择页面所有元素</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>通配选择器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">           <span class="token selector">*</span><span class="token punctuation">&#123;</span>               <span class="token property">color</span><span class="token punctuation">:</span><span class="token string">"blue"</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>       </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>            放松再慢慢深空        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>            被窝里做一个梦        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>            通配选择所有元素，不管我是标题还是文本        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4.复合选择器</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>复合选择器<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token comment">&lt;!--&lt;meta http-equiv="refresh" content="3;URL=http://www.baidu.com">--></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>复合选择器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token comment">/* 并集选择器 */</span>        <span class="token selector">h1,p</span><span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token comment">/* 交集选择器  如果有元素选择器，必须元素选择器开头*/</span> <span class="token selector">p#red</span><span class="token punctuation">&#123;</span>     <span class="token property">color</span><span class="token punctuation">:</span> red <span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>           <span class="token selector">p.a</span><span class="token punctuation">&#123;</span>         <span class="token property">color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>瑾年<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>如果马上下大雨<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我会把伞打向你<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pink a b <span class="token punctuation">"</span></span><span class="token punctuation">></span></span>你看你是不是笑出了大大的酒窝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>5.关系选择器</p><p>5.1关系选择器包括父子，兄弟，祖先与后代</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>父子选择器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">           <span class="token comment">/* 父子用>连接*/</span>           <span class="token selector">div>span</span><span class="token punctuation">&#123;</span>               <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>               </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>我是div的儿子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>5.2兄弟选择器</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>兄弟选择器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">            <span class="token comment">/* 父子用+连接  但是只选择下面的一个兄弟，如果选择所有兄弟用~连接  */</span>           <span class="token selector">span+p</span><span class="token punctuation">&#123;</span>               <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>               </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                 我也是p元素，但我不是span的兄弟，因为兄弟选择器只选择下面的，俺在span上面                所以我不变成红色            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>我是div的好儿子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                我是span的第一个兄弟，也是div的好儿子            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                我是span的第二个兄弟，要我变色，css里面用~连接            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>5.3祖先与后代（父亲也可以称为儿子的祖先）</p><p>选择后，所有后代都变色</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>祖先选择器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">           <span class="token comment">/*  祖先选择器用空格连接如 div span*/</span>           <span class="token selector">div span</span><span class="token punctuation">&#123;</span>               <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>               </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>我不是div的儿子，div是我的祖先，因为我不是直接被包括在div中                我爹是p<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>我是div的儿子，也能称为div的后代<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>我也会变色，因为所有的span，虽然有的是儿子有的是孙子，但都是后代<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>6，属性选择器</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>属性选择器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">           <span class="token comment">/* 属性选择器*/</span>           <span class="token selector">p[title]</span><span class="token punctuation">&#123;</span>               <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>              </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          title是我的属性        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/value.png" alt="属性选择器"></p><p>7，伪类选择器</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">资料链接：https://blog.csdn.net/u010297791/article/details/53968089<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://blog.csdn.net/u010297791/article/details/53968089">伪类选择器资料点我跳转</a></p><p>伪类就是不存在的类，具有一些特殊状态比如无论怎么修改，列表的第一个元素，被点击过的元素，鼠标移入的元素等特殊状态。</p><h2 id="超链接伪类"><a href="#超链接伪类" class="headerlink" title="超链接伪类"></a>超链接伪类</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年，扭转乾坤<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>感受生活,认清生活<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token comment">&lt;!--超链接的伪类这里介绍四个 :link  ：visited  ：hover  ；active        其中link和visited只能超链接用，hover和active其他元素也能用        link为未点击的正常超链接，visited为游览过的超链接，hover为鼠标移入（鼠标移到这个超链接上面就改变样式），        active是鼠标点击--></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>瑾年<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">a:hover</span><span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">a:link</span><span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span> blueviolet<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">a:active</span><span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span>cyan<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">a:visited</span><span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>            <span class="token comment">/* 我只能修改颜色，不能设置字体大小等功能，因为要为用户隐私着想，            某些用户游览某些不好的网站不可能变成字体全屏大，变得满城皆知把，啦啦啦*/</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://jinnian.life/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>瑾年博客<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://zeroc.ee/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>成成博客<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://jinnian.life/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>jj博客<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://zeroc.ee/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>cc博客<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年，扭转乾坤<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>感受生活,认清生活<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token comment">&lt;!--&lt;meta http-equiv="refresh" content="3;URL=http://www.baidu.com">--></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>瑾年<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token comment">/* ：：first-letter表示第一个字，：；first-line第一行 ：：selection选中的文字 */</span>       <span class="token selector">p</span><span class="token punctuation">&#123;</span>           <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>        <span class="token selector">p::first-letter</span><span class="token punctuation">&#123;</span>            <span class="token comment">/* 这里就能把下面p的第一个字，如修改样式为50px */</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* span&#123;            font-size: 50px;        &#125; */</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--         目标功能把“如”字变为50px，可以单独把“如”选入span元素再设置css    但是只能指定一个字，万一需求改变，第一个字不是“如”就无法修改为50px     &lt;p>&lt;span>如&lt;/span>果你能忘记，我也能失忆&lt;/p>--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>如果你能忘记，我也能失忆<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color=red>::before&amp;::after(必须结合content使用)</font></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>伪元素after&amp;before<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token comment">&lt;!--&lt;meta http-equiv="refresh" content="3;URL=http://www.baidu.com">--></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>瑾年<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">div::after</span><span class="token punctuation">&#123;</span>            <span class="token comment">/* 在p前也就是if前加入“我中意你” */</span>            <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">'我中意你'</span><span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">div::before</span><span class="token punctuation">&#123;</span>             <span class="token comment">/* 在p最后也就是sentry后加入“是真的” */</span>            <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">'是真的'</span><span class="token punctuation">;</span>            <span class="token comment">/* 字符用''框住 */</span>            <span class="token property">color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>If you wish to succeed, you should use persistence as your good friend,         experience as your reference, prudence as your brother and hope as your sentry.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>继承<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 后代元素会继承祖先元素的样式  --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">p</span><span class="token punctuation">&#123;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>我是p的儿子，p是50px，我也是<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>背景和布局我不会继承，就像我爹的十个老婆我继承不了，我只能继承一部分财产<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="选择器的权重"><a href="#选择器的权重" class="headerlink" title="选择器的权重"></a>选择器的权重</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>选择器的权重<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--   --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.blue</span><span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">#red</span><span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">*</span><span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span> purple<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>       <span class="token selector">p#red</span><span class="token punctuation">&#123;</span>           <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">color</span><span class="token punctuation">:</span> gold<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        我是gold颜色，因为内联选择器优先级最高       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>   <span class="token comment">&lt;!-- 当通过不同选择器，选中相同元素，且相同样式设置不同值，就会发生冲突此时样式的值，通过选择器的权重来决定内联样式（1000）>id选择器（100)>类和伪类选择器(10)>元素选择器(1)>通配选择器（0）可以说：管的范围越大，权重越小。当优先级相等时，后面的覆盖前面的样式当是交集选择器，两个选择器权重相加再判断 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="像素与百分比"><a href="#像素与百分比" class="headerlink" title="像素与百分比"></a>像素与百分比</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>像素和百分比<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--  像素就是一个点，后代元素百分比的前提大小继承于父元素 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>像素与百分比<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">       <span class="token selector">.red</span><span class="token punctuation">&#123;</span>           <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>           <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>           <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>       <span class="token selector">.blue</span><span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>           <span class="token property">height</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>           <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- em和rem都是调节大小的    1em=1font-size    1font-size如果不人为设置默认为16px    em根据元素字体大小改变而改变      rem根据根元素即html&#123;不设置默认16px&#125;里的字体大小来改变    r就是root根的意思--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 这里的div不能用span代替，因为span是行内元素 --></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="RGB与十六进制颜色表示"><a href="#RGB与十六进制颜色表示" class="headerlink" title="RGB与十六进制颜色表示"></a>RGB与十六进制颜色表示</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rgb颜色表示<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>refresh<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1;URL=https://cdn.jsdelivr.net/gh/JINNIAN666/picture/rgb.png    <span class="token punctuation">"</span></span>    <span class="token attr-name">&lt;!--</span> <span class="token attr-name">rgb是光的三原色，全为0就是黑，全是255就白；</span>        <span class="token attr-name">美术中的三原色是红黄蓝，这里是红绿蓝</span> <span class="token attr-name">--</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">           </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>运行代码自己看图片，链接是meta里面的url<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/rgb.png" alt="rgb颜色表示"></p><h2 id="HLS与HLSA"><a href="#HLS与HLSA" class="headerlink" title="HLS与HLSA"></a>HLS与HLSA</h2><p>hlsa就是多了个a，表示透明的</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>瑾年<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>HSL<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--  HSL --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">           </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">hsla</span><span class="token punctuation">(</span>50<span class="token punctuation">,</span> 30%<span class="token punctuation">,</span> 30%<span class="token punctuation">,</span> .5<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        HSLA值        H色相（0-360）        S饱和度，颜色浓度 0%-100%        L亮度，颜色的亮度 0%-100%        A透明度    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="文档流"><a href="#文档流" class="headerlink" title="文档流"></a>文档流</h2><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/wendangliu.png" alt="文档流"></p><h2 id="重要的盒子模型"><a href="#重要的盒子模型" class="headerlink" title="重要的盒子模型"></a>重要的盒子模型</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">            <span class="token selector">.box1</span><span class="token punctuation">&#123;</span>                <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>                <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>                <span class="token comment">/* 这100*100是内容区 */</span>                <span class="token property">background-color</span><span class="token punctuation">:</span> chartreuse<span class="token punctuation">;</span>                <span class="token property">border</span><span class="token punctuation">:</span> width 10px<span class="token punctuation">;</span>                 <span class="token property">border-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>                 <span class="token property">border-style</span><span class="token punctuation">:</span>solid<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">/* 边框（border），边框属于盒子的边缘，边框里面属于盒子内部，外面是盒子外部                要设置边框，至少设置三个样式                -边框的宽度 border-width                -边框的颜色 border-color                -边框的样式 border-style */</span>        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 盒模型，盒子模型，框模型（box model）     -CSS将页面的所有元素都设置为一个矩形盒子    -将元素设置为矩形的盒子后，对页面的布局就变成将不同的盒子摆放到不同的位置    -每个盒子都由以下几个部分组成        内容区（content）        内边距（padding）        边框（border）        外边距（margin） --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>此时盒子大小是110*110，包括内容区加上border的大小<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/JINNIAN666/picture/boxmorder.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>盒子模型<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/boxmorder.png" alt="盒子"></p><h3 id="盒子模型-边框"><a href="#盒子模型-边框" class="headerlink" title="盒子模型-边框"></a>盒子模型-边框</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html">zz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>1.B站尚学堂前端<a href="https://www.bilibili.com/video/BV1XJ411X7Ud?p=35&amp;spm_id_from=pageDriver">https://www.bilibili.com/video/BV1XJ411X7Ud?p=35&amp;spm_id_from=pageDriver</a></p><p>2.待定</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>静态注入请假模拟</title>
      <link href="archives/f957c9c4.html"/>
      <url>archives/f957c9c4.html</url>
      
        <content type="html"><![CDATA[<h1 id="看图和视频就完事了"><a href="#看图和视频就完事了" class="headerlink" title="# 看图和视频就完事了"></a># 看图和视频就完事了</h1><p><a href="https://pan.baidu.com/s/1dFNV01V6-G3_biiJpnWKvg">点我下载软件</a>  </p><p><font color=blue>本软件仅供开发学习交流，请勿用于非法违规用途与传播，违者必究，一切后果与作者无关。</font></p><p>视频在最下方，加载较慢。</p><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/1.jpg" alt="我的照片"></p><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/2.jpg" alt="我的照片"></p><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/3.jpg" alt="我的照片"></p><p><img src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/4.jpg" alt="我的照片"></p><h1 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h1><p><video src="https://cdn.jsdelivr.net/gh/JINNIAN666/picture/5mp.mp4" width="300px" height="600px" controls="controls"></video></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 静态注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown编写语法入门</title>
      <link href="archives/d5bff0d1.html"/>
      <url>archives/d5bff0d1.html</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown编写语法入门（编辑器typora）"><a href="#Markdown编写语法入门（编辑器typora）" class="headerlink" title="Markdown编写语法入门（编辑器typora）"></a>Markdown编写语法入门（编辑器typora）</h1><p>ctrl+shift+i快捷导入图片</p><p>ctrl+k快捷导入超链接</p><h2 id="1-代码块"><a href="#1-代码块" class="headerlink" title="1.代码块"></a>1.代码块</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//代码块语法：</span>​```java​```html​```shell​```在键盘esc下面    ctrl<span class="token operator">+</span><span class="token operator">/</span>可以在typora查看markdown语句源代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">a</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">class</span> demo <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"海市蜃楼终为空"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-HTML"><a href="#2-HTML" class="headerlink" title="2.HTML"></a>2.HTML</h2><pre class="line-numbers language-htm" data-language="htm"><code class="language-htm">&lt;!DOCTYPE html&gt;&lt;head&gt;    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;    &lt;meta name&#x3D;&quot;keywords&quot; content&#x3D;&quot;瑾年，扭转乾坤&quot;&gt;    &lt;meta name&#x3D;&quot;description&quot; content&#x3D;&quot;感受生活,认清生活&quot;&gt;   &lt;!--&lt;meta http-equiv&#x3D;&quot;refresh&quot; content&#x3D;&quot;3;URL&#x3D;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;--&gt;     &lt;title&gt;瑾年&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;&lt;body&gt;    &lt;iframe src&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot; frameborder&#x3D;&quot;0&quot;  width&#x3D;&quot;500&quot; hight&#x3D;&quot;500&quot;&gt;&lt;&#x2F;iframe&gt;    &lt;!-- 内联框架，引入一个网页，frameborder为框架边界0或1 --&gt;    &lt;!-- 内联框架合audio都是双标签，img是自结束 --&gt;    &lt;h1&gt;空匪darling &lt;&#x2F;h1&gt;     &lt;audio src&#x3D;&quot;.&#x2F;music&#x2F;空匪 - Darling.mp3&quot; autoplay controls loop&gt;&lt;&#x2F;audio&gt;    &lt;video controls autoplay&gt;        &lt;source  src&#x3D;&quot;.&#x2F;video&#x2F;街舞.mp4&quot;&gt;         &lt;&#x2F;video&gt;    &lt;!-- &lt;embed src&#x3D;&quot;&quot; type&#x3D;&quot;video&#x2F;mp4&quot;&gt;如果是老游览器不支持就用embed --&gt;    &lt;iframe  align&#x3D;&quot;left&quot; src&#x3D;&quot;https:&#x2F;&#x2F;v.qq.com&#x2F;x&#x2F;page&#x2F;w3236fnrh9f.html&quot; frameborder&#x3D;&quot;0&quot;  width&#x3D;&quot;500&quot; hight&#x3D;&quot;500&quot;&gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-标题："><a href="#3-标题：" class="headerlink" title="3.标题："></a>3.标题：</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java">#<span class="token operator">+</span>空格<span class="token operator">+</span>标题名称    # 一级标题    ## 二级标题    ### 三级标题    #### 四级标题    ##### 五级标题    ###### 六级标题    一共六级<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="4-字体"><a href="#4-字体" class="headerlink" title="4.字体"></a>4.字体</h2><pre class="line-numbers language-ja" data-language="ja"><code class="language-ja">&#x2F;&#x2F;加粗**海市蜃楼终为空**&#x2F;&#x2F;文字与代码高亮&lt;mark&gt;highlight 2&lt;&#x2F;mark&gt;​&#96;&#96;&#96;code 1&#96;&#96;&#96;&#96;code 2&#96;&#x2F;&#x2F;字体颜色&lt;font color&#x3D;red&gt;红色&lt;&#x2F;font&gt;&#x2F;&#x2F;删除线~~被删除的文字~~&#x2F;&#x2F;斜体*斜体内容*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>//加粗<br><strong>海市蜃楼终为空</strong><br>//代码高亮</p><p><mark>highlight 2</mark></p><p>//字体颜色</p><p><font color=red>红色</font></p><p>//删除线<br><del>被删除的文字</del><br>//斜体<br><em>斜体内容</em></p><h2 id="5-引用"><a href="#5-引用" class="headerlink" title="5.引用"></a>5.引用</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//引用语法</span><span class="token operator">></span>作者：瑾年<span class="token operator">>></span>作者：瑾年<span class="token operator">>>></span>作者：瑾年 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>作者：瑾年</p><blockquote><p>作者：瑾年</p><blockquote><p>作者：瑾年</p></blockquote></blockquote></blockquote><h2 id="6-分割线"><a href="#6-分割线" class="headerlink" title="6.分割线"></a>6.分割线</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//分割线</span><span class="token operator">--</span><span class="token operator">-</span> 或者<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">--</span><span class="token operator">-</span>为根据内容自适应<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>为全屏宽<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><hr><h2 id="7-图片和超链接插入"><a href="#7-图片和超链接插入" class="headerlink" title="7.图片和超链接插入"></a>7.图片和超链接插入</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//图片</span><span class="token operator">!</span><span class="token punctuation">[</span>我的照片<span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>ae01<span class="token punctuation">.</span>alicdn<span class="token punctuation">.</span>com<span class="token operator">/</span>kf<span class="token operator">/</span><span class="token class-name">Ufc7f2e36e97e4edb9bc4bea669e10c7ay</span><span class="token punctuation">.</span>jpg<span class="token punctuation">)</span><span class="token comment">//超链接</span> <span class="token punctuation">[</span>点我跳转百度<span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://ae01.alicdn.com/kf/Ufc7f2e36e97e4edb9bc4bea669e10c7ay.jpg" alt="我的照片"><br>//超链接<br> <a href="https://www.baidu.com/">点我跳转百度</a></p><h2 id="8-列表"><a href="#8-列表" class="headerlink" title="8.列表"></a>8.列表</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//无序列表 “- 加空格加名称”</span><span class="token operator">-</span> 目录<span class="token number">1</span><span class="token operator">-</span> 目录<span class="token number">2</span>  <span class="token operator">-</span> 目录<span class="token number">3</span><span class="token comment">//有序 “1+.+空格+名称”</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>目录1</li><li>目录2  </li><li>目录3</li></ul><ol><li><p>有序1</p></li><li><p>有序2</p></li></ol><h2 id="9-表格"><a href="#9-表格" class="headerlink" title="9.表格"></a>9.表格</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//代码繁杂，直接鼠标右键插入,或者快捷键ctrl t</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th>成绩</th><th>js</th><th>python</th></tr></thead><tbody><tr><td></td><td>100</td><td>100</td></tr></tbody></table><blockquote><p>本文为学习编写，参考作者b站叶十三。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML的单词缩写</title>
      <link href="archives/f2ab5054.html"/>
      <url>archives/f2ab5054.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML5的一些单词对应缩写"><a href="#HTML5的一些单词对应缩写" class="headerlink" title="HTML5的一些单词对应缩写"></a>HTML5的一些单词对应缩写</h1><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>Greater than=gt<br>less than=lt<br>nav=navigation<br>div=division<br>dt=definition term的缩写 (自定义列表组)<br>dd=definition description的缩写（自定义列表描述）<br>href=Hypertext Reference<br>hr=horizontal rule<br>alt=alternative供替换的<br>embed嵌入<br> rel属性(relation),描述了当前页面与href所指定文档的关系<br>vspave=vertical space<br>hspace=height space<br>rel=relationship<br><img src="https://ae01.alicdn.com/kf/U36fa3471091d4aaf8bebc1fcb60470050.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5&amp;CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
